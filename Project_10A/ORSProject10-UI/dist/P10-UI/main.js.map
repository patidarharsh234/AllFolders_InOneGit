{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-first-last-name.directive.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/appcontend-alphabate-only.directive.ts","webpack:///./src/app/appcontend-number-only.directive.ts","webpack:///./src/app/appcontent-many-decimal.directive.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/college/college-list.component.html","webpack:///./src/app/college/college-list.component.ts","webpack:///./src/app/college/college.component.css","webpack:///./src/app/college/college.component.html","webpack:///./src/app/college/college.component.ts","webpack:///./src/app/course/course-list.component.html","webpack:///./src/app/course/course-list.component.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/endpoint-service.service.ts","webpack:///./src/app/faculty/faculty-list.component.html","webpack:///./src/app/faculty/faculty-list.component.ts","webpack:///./src/app/faculty/faculty.component.css","webpack:///./src/app/faculty/faculty.component.html","webpack:///./src/app/faculty/faculty.component.ts","webpack:///./src/app/file/file.component.css","webpack:///./src/app/file/file.component.html","webpack:///./src/app/file/file.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-service.service.ts","webpack:///./src/app/jasper-report/jasper-report.component.css","webpack:///./src/app/jasper-report/jasper-report.component.html","webpack:///./src/app/jasper-report/jasper-report.component.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/login/forgotpassword.component.html","webpack:///./src/app/login/forgotpassword.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/signup.component.html","webpack:///./src/app/login/signup.component.ts","webpack:///./src/app/login/verifyforgotpassword-otp.component.html","webpack:///./src/app/login/verifyforgotpassword-otp.component.ts","webpack:///./src/app/marksheet/getmarksheet.component.html","webpack:///./src/app/marksheet/getmarksheet.component.ts","webpack:///./src/app/marksheet/marksheet-list.component.html","webpack:///./src/app/marksheet/marksheet-list.component.ts","webpack:///./src/app/marksheet/marksheet.component.css","webpack:///./src/app/marksheet/marksheet.component.html","webpack:///./src/app/marksheet/marksheet.component.ts","webpack:///./src/app/marksheet/marksheetmerit-list.component.html","webpack:///./src/app/marksheet/marksheetmerit-list.component.ts","webpack:///./src/app/max-length-number.directive.ts","webpack:///./src/app/message/message-list.component.html","webpack:///./src/app/message/message-list.component.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/page-not-found.component.html","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/persantage-value.directive.ts","webpack:///./src/app/role/role-list.component.html","webpack:///./src/app/role/role-list.component.ts","webpack:///./src/app/role/role.component.css","webpack:///./src/app/role/role.component.html","webpack:///./src/app/role/role.component.ts","webpack:///./src/app/service-locator.service.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/student/student-list.component.html","webpack:///./src/app/student/student-list.component.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/subject/subject-list.component.html","webpack:///./src/app/subject/subject-list.component.ts","webpack:///./src/app/subject/subject.component.css","webpack:///./src/app/subject/subject.component.html","webpack:///./src/app/subject/subject.component.ts","webpack:///./src/app/test_VehicleTracking/vehicle-trackinglist.component.css","webpack:///./src/app/test_VehicleTracking/vehicle-trackinglist.component.html","webpack:///./src/app/test_VehicleTracking/vehicle-trackinglist.component.ts","webpack:///./src/app/test_client/client.component.css","webpack:///./src/app/test_client/client.component.html","webpack:///./src/app/test_client/client.component.ts","webpack:///./src/app/test_client/clientlist.component.css","webpack:///./src/app/test_client/clientlist.component.html","webpack:///./src/app/test_client/clientlist.component.ts","webpack:///./src/app/test_customers/customers.component.css","webpack:///./src/app/test_customers/customers.component.html","webpack:///./src/app/test_customers/customers.component.ts","webpack:///./src/app/test_customers/customerslist.component.css","webpack:///./src/app/test_customers/customerslist.component.html","webpack:///./src/app/test_customers/customerslist.component.ts","webpack:///./src/app/test_inventory/inventory.component.css","webpack:///./src/app/test_inventory/inventory.component.html","webpack:///./src/app/test_inventory/inventory.component.ts","webpack:///./src/app/test_inventory/inventorylist.component.css","webpack:///./src/app/test_inventory/inventorylist.component.html","webpack:///./src/app/test_inventory/inventorylist.component.ts","webpack:///./src/app/test_issue/issue.component.css","webpack:///./src/app/test_issue/issue.component.html","webpack:///./src/app/test_issue/issue.component.ts","webpack:///./src/app/test_issue/issuelist.component.css","webpack:///./src/app/test_issue/issuelist.component.html","webpack:///./src/app/test_issue/issuelist.component.ts","webpack:///./src/app/test_job/job.component.css","webpack:///./src/app/test_job/job.component.html","webpack:///./src/app/test_job/job.component.ts","webpack:///./src/app/test_job/joblist.component.css","webpack:///./src/app/test_job/joblist.component.html","webpack:///./src/app/test_job/joblist.component.ts","webpack:///./src/app/test_order/order.component.css","webpack:///./src/app/test_order/order.component.html","webpack:///./src/app/test_order/order.component.ts","webpack:///./src/app/test_order/orderlist.component.css","webpack:///./src/app/test_order/orderlist.component.html","webpack:///./src/app/test_order/orderlist.component.ts","webpack:///./src/app/test_owner/owner.component.css","webpack:///./src/app/test_owner/owner.component.html","webpack:///./src/app/test_owner/owner.component.ts","webpack:///./src/app/test_owner/ownerlist.component.css","webpack:///./src/app/test_owner/ownerlist.component.html","webpack:///./src/app/test_owner/ownerlist.component.ts","webpack:///./src/app/test_patient/patient.component.css","webpack:///./src/app/test_patient/patient.component.html","webpack:///./src/app/test_patient/patient.component.ts","webpack:///./src/app/test_patient/patientlist.component.css","webpack:///./src/app/test_patient/patientlist.component.html","webpack:///./src/app/test_patient/patientlist.component.ts","webpack:///./src/app/test_prescription/prescription.component.css","webpack:///./src/app/test_prescription/prescription.component.html","webpack:///./src/app/test_prescription/prescription.component.ts","webpack:///./src/app/test_prescription/prescriptionlist.component.css","webpack:///./src/app/test_prescription/prescriptionlist.component.html","webpack:///./src/app/test_prescription/prescriptionlist.component.ts","webpack:///./src/app/test_productdetails/productdetails.component.css","webpack:///./src/app/test_productdetails/productdetails.component.html","webpack:///./src/app/test_productdetails/productdetails.component.ts","webpack:///./src/app/test_productdetails/productdetailslist.component.css","webpack:///./src/app/test_productdetails/productdetailslist.component.html","webpack:///./src/app/test_productdetails/productdetailslist.component.ts","webpack:///./src/app/test_route/route.component.css","webpack:///./src/app/test_route/route.component.html","webpack:///./src/app/test_route/route.component.ts","webpack:///./src/app/test_route/routelist.component.css","webpack:///./src/app/test_route/routelist.component.html","webpack:///./src/app/test_route/routelist.component.ts","webpack:///./src/app/test_salary/salary.component.css","webpack:///./src/app/test_salary/salary.component.html","webpack:///./src/app/test_salary/salary.component.ts","webpack:///./src/app/test_salary/salarylist.component.css","webpack:///./src/app/test_salary/salarylist.component.html","webpack:///./src/app/test_salary/salarylist.component.ts","webpack:///./src/app/test_shoppingcart/shoppingcart.component.css","webpack:///./src/app/test_shoppingcart/shoppingcart.component.html","webpack:///./src/app/test_shoppingcart/shoppingcart.component.ts","webpack:///./src/app/test_shoppingcart/shoppingcartlist.component.css","webpack:///./src/app/test_shoppingcart/shoppingcartlist.component.html","webpack:///./src/app/test_shoppingcart/shoppingcartlist.component.ts","webpack:///./src/app/test_supplier/supplier.component.css","webpack:///./src/app/test_supplier/supplier.component.html","webpack:///./src/app/test_supplier/supplier.component.ts","webpack:///./src/app/test_supplier/supplierlist.component.css","webpack:///./src/app/test_supplier/supplierlist.component.html","webpack:///./src/app/test_supplier/supplierlist.component.ts","webpack:///./src/app/test_users/users.component.css","webpack:///./src/app/test_users/users.component.html","webpack:///./src/app/test_users/users.component.ts","webpack:///./src/app/test_users/userslist.component.css","webpack:///./src/app/test_users/userslist.component.html","webpack:///./src/app/test_users/userslist.component.ts","webpack:///./src/app/test_vehicle-tracking/vehicle-tracking.component.css","webpack:///./src/app/test_vehicle-tracking/vehicle-tracking.component.html","webpack:///./src/app/test_vehicle-tracking/vehicle-tracking.component.ts","webpack:///./src/app/test_vehicle/vehicle.component.css","webpack:///./src/app/test_vehicle/vehicle.component.html","webpack:///./src/app/test_vehicle/vehicle.component.ts","webpack:///./src/app/test_vehicle/vehiclelist.component.css","webpack:///./src/app/test_vehicle/vehiclelist.component.html","webpack:///./src/app/test_vehicle/vehiclelist.component.ts","webpack:///./src/app/timetable/timetable-list.component.html","webpack:///./src/app/timetable/timetable-list.component.ts","webpack:///./src/app/timetable/timetable.component.css","webpack:///./src/app/timetable/timetable.component.html","webpack:///./src/app/timetable/timetable.component.ts","webpack:///./src/app/user/changepassword.component.html","webpack:///./src/app/user/changepassword.component.ts","webpack:///./src/app/user/myprofile.component.html","webpack:///./src/app/user/myprofile.component.ts","webpack:///./src/app/user/user-list.component.html","webpack:///./src/app/user/user-list.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/utility/data-validator.ts","webpack:///./src/app/validate-number-min-max-directive.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Directive } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appAppFirstLastName]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: AppFirstLastNameDirective, multi: true }]\r\n})\r\nexport class AppFirstLastNameDirective implements Validator  {\r\n\r\n\r\n  // Regex pattern to validate names in the format \"Firstname Lastname\"\r\n  private regex: RegExp = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const value = control.value as string;\r\n\r\n    // Check if the input value matches the regex pattern\r\n    const isValid = this.regex.test(value);\r\n\r\n    // Return an error object if invalid, otherwise return null\r\n    return isValid ? null : { 'nameInvalid': true };\r\n  }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MarksheetComponent } from './marksheet/marksheet.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { CollegeComponent } from './college/college.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\r\nimport { SignUpComponent } from './login/signup.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { MessageListComponent } from './message/message-list.component';\r\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\r\nimport { CollegeListComponent } from './college/college-list.component';\r\nimport { StudentListComponent } from './student/student-list.component';\r\nimport { UserListComponent } from './user/user-list.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { CourseComponent } from \"./course/course.component\";\r\nimport { SubjectComponent } from \"./subject/subject.component\"\r\nimport { Subject, from } from 'rxjs';\r\nimport { RoleListComponent } from './role/role-list.component';\r\nimport { CourseListComponent } from \"./course/course-list.component\";\r\nimport { FacultyComponent } from \"./faculty/faculty.component\";\r\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\r\nimport { TimetableComponent } from \"./timetable/timetable.component\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { TimetableListComponent } from './timetable/timetable-list.component';\r\nimport { SubjectListComponent } from './subject/subject-list.component';\r\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\r\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\r\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { MyprofileComponent } from './user/myprofile.component';\r\nimport { JasperReportComponent } from './jasper-report/jasper-report.component';\r\n\r\n\r\n\r\n\r\n\r\nimport { VerifyforgotpasswordOTPComponent } from './login/verifyforgotpassword-otp.component';\r\nimport { ClientComponent } from './test_client/client.component';\r\nimport { ClientlistComponent } from './test_client/clientlist.component';\r\nimport { VehicleComponent } from './test_vehicle/vehicle.component';\r\nimport { VehiclelistComponent } from './test_vehicle/vehiclelist.component';\r\nimport { PatientComponent } from './test_patient/patient.component';\r\nimport { PatientlistComponent } from './test_patient/patientlist.component';\r\nimport { RouteComponent } from './test_route/route.component';\r\nimport { RoutelistComponent } from './test_route/routelist.component';\r\nimport { PrescriptionComponent } from './test_prescription/prescription.component';\r\nimport { PrescriptionlistComponent } from './test_prescription/prescriptionlist.component';\r\nimport { SalaryComponent } from './test_salary/salary.component';\r\nimport { SalarylistComponent } from './test_salary/salarylist.component';\r\n\r\nimport { JobComponent } from './test_job/job.component';\r\nimport { JoblistComponent } from './test_job/joblist.component';\r\n\r\nimport { SupplierComponent } from './test_supplier/supplier.component';\r\nimport { SupplierlistComponent } from './test_supplier/supplierlist.component';\r\nimport { InventoryComponent } from './test_inventory/inventory.component';\r\nimport { InventorylistComponent } from './test_inventory/inventorylist.component';\r\nimport { OwnerComponent } from './test_owner/owner.component';\r\nimport { OwnerlistComponent } from './test_owner/ownerlist.component';\r\nimport { OrderComponent } from './test_order/order.component';\r\nimport { OrderlistComponent } from './test_order/orderlist.component';\r\n\r\nimport { ProductdetailsComponent } from './test_productdetails/productdetails.component';\r\nimport { ProductdetailslistComponent } from './test_productdetails/productdetailslist.component';\r\nimport { VehicleTrackinglistComponent } from './test_VehicleTracking/vehicle-trackinglist.component';\r\nimport { VehicleTrackingComponent } from './test_vehicle-tracking/vehicle-tracking.component';\r\nimport { UsersComponent } from './test_users/users.component';\r\nimport { UserslistComponent } from './test_users/userslist.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full'\r\n    },\r\n\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent\r\n    },\r\n    {\r\n        path: 'verifyotp',\r\n        component: VerifyforgotpasswordOTPComponent\r\n    },\r\n    {\r\n        path: 'loader',\r\n        component: LoaderComponent\r\n\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }\r\n    ,\r\n    {\r\n        path: 'login/:userparams',\r\n        component: LoginComponent\r\n    },\r\n\r\n    {\r\n        path: 'spinner',\r\n        component: SpinnerComponent\r\n    },\r\n    {\r\n        path: 'forgotpassword',\r\n        component: ForgotPasswordComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignUpComponent\r\n    },\r\n    {\r\n        path: 'message',\r\n        component: MessageComponent,\r\n\r\n    },\r\n    {\r\n        path: 'message/:id',\r\n        component: MessageComponent\r\n    },\r\n    {\r\n        path: 'messagelist',\r\n        component: MessageListComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheet',\r\n        component: MarksheetComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheet/:id',\r\n        component: MarksheetComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheetlist',\r\n        component: MarksheetListComponent\r\n\r\n    },\r\n    {\r\n        path: 'marksheetmeritlist',\r\n        component: MarksheetmeritListComponent\r\n\r\n    },\r\n    {\r\n        path: 'getmarksheet',\r\n        component: GetmarksheetComponent\r\n\r\n    },\r\n    {\r\n        path: 'college',\r\n        component: CollegeComponent\r\n\r\n    },\r\n    {\r\n        path: 'college/:id',\r\n        component: CollegeComponent\r\n\r\n    },\r\n    {\r\n        path: 'collegelist',\r\n        component: CollegeListComponent\r\n\r\n    },\r\n    {\r\n        path: 'student',\r\n        component: StudentComponent\r\n\r\n    },\r\n    {\r\n        path: 'student/:id',\r\n        component: StudentComponent\r\n\r\n    },\r\n    {\r\n        path: 'studentlist',\r\n        component: StudentListComponent\r\n\r\n    },\r\n    {\r\n        path: 'user',\r\n        component: UserComponent\r\n\r\n    },\r\n    {\r\n        path: 'user/:id',\r\n        component: UserComponent\r\n\r\n    },\r\n    {\r\n        path: 'userlist',\r\n        component: UserListComponent\r\n\r\n    },\r\n\r\n    {\r\n        path: 'role',\r\n        component: RoleComponent\r\n\r\n    },\r\n    {\r\n        path: 'rolelist',\r\n        component: RoleListComponent\r\n\r\n    },\r\n    {\r\n        path: 'role/:id',\r\n        component: RoleComponent\r\n\r\n    },\r\n    {\r\n        path: 'course',\r\n        component: CourseComponent\r\n\r\n    },\r\n    {\r\n        path: 'courselist',\r\n        component: CourseListComponent\r\n\r\n    },\r\n    {\r\n        path: 'course/:id',\r\n        component: CourseComponent\r\n\r\n    },\r\n    {\r\n\r\n        path: 'faculty',\r\n        component: FacultyComponent\r\n\r\n    },\r\n    {\r\n        path: 'facultylist',\r\n        component: FacultyListComponent\r\n\r\n    },\r\n    {\r\n        path: 'faculty/:id',\r\n        component: FacultyComponent\r\n\r\n    },\r\n    {\r\n        path: 'timetable',\r\n        component: TimetableComponent\r\n\r\n\r\n    },\r\n    {\r\n        path: 'timetablelist',\r\n        component: TimetableListComponent\r\n\r\n    },\r\n    {\r\n        path: 'timetable/:id',\r\n        component: TimetableComponent\r\n\r\n    },\r\n    {\r\n        path: 'subject',\r\n        component: SubjectComponent\r\n\r\n    },\r\n    {\r\n        path: 'subjectlist',\r\n        component: SubjectListComponent\r\n\r\n    },\r\n    {\r\n        path: 'subject/:id',\r\n        component: SubjectComponent\r\n\r\n    },\r\n    {\r\n        path: 'myprofile',\r\n        component: MyprofileComponent\r\n    },\r\n    {\r\n        path: 'file',\r\n        component: FileComponent\r\n    },\r\n    {\r\n        path: 'changepassword',\r\n        component: ChangepasswordComponent\r\n\r\n\r\n    },\r\n    {\r\n        path: 'jasperReport',\r\n        component: JasperReportComponent\r\n\r\n     },\r\n    {\r\n        path: 'client',\r\n        component: ClientComponent\r\n    },\r\n    {\r\n        path: 'client/:id',\r\n        component: ClientComponent\r\n    },\r\n    {\r\n        path: 'clientlist',\r\n        component: ClientlistComponent\r\n    },\r\n    {\r\n        path: 'vehicle',\r\n        component: VehicleComponent\r\n    },\r\n    {\r\n        path: 'vehicle/:id',\r\n        component: VehicleComponent\r\n    },\r\n    {\r\n        path: 'vehiclelist',\r\n        component: VehiclelistComponent\r\n    },\r\n    {\r\n        path: 'patient',\r\n        component: PatientComponent\r\n    },\r\n    {\r\n        path: 'patient/:id',\r\n        component: PatientComponent\r\n    },\r\n    {\r\n        path: 'patientlist',\r\n        component: PatientlistComponent\r\n    },\r\n    {\r\n        path: 'route',\r\n        component: RouteComponent\r\n    },\r\n    {\r\n        path: 'route/:id',\r\n        component: RouteComponent\r\n    },\r\n    {\r\n        path: 'routelist',\r\n        component: RoutelistComponent\r\n    },\r\n\r\n    {\r\n        path: 'prescription',\r\n        component: PrescriptionComponent\r\n    },\r\n    {\r\n        path: 'prescription/:id',\r\n        component: PrescriptionComponent\r\n    },\r\n    {\r\n        path: 'prescriptionlist',\r\n        component: PrescriptionlistComponent\r\n    },\r\n    {\r\n        path: 'salary',\r\n        component: SalaryComponent\r\n    },\r\n    {\r\n        path: 'salary/:id',\r\n        component: SalaryComponent\r\n    },\r\n    {\r\n        path: 'salarylist',\r\n        component: SalarylistComponent\r\n    }\r\n    ,\r\n    {\r\n        path: 'productdetails',\r\n        component: ProductdetailsComponent\r\n    },\r\n    {\r\n        path: 'productdetails/:id',\r\n        component: ProductdetailsComponent\r\n    },\r\n    {\r\n        path: 'productdetailslist',\r\n        component: ProductdetailslistComponent\r\n    },\r\n    {\r\n        path: 'job',\r\n        component: JobComponent\r\n    },\r\n    {\r\n        path: 'job/:id',\r\n        component: JobComponent\r\n    },\r\n    {\r\n        path: 'joblist',\r\n        component: JoblistComponent\r\n    }\r\n    ,\r\n    {\r\n        path: 'vehicletracking',\r\n        component: VehicleTrackingComponent\r\n    },\r\n    {\r\n        path: 'vehicletracking/:id',\r\n        component: VehicleTrackingComponent\r\n    },\r\n    {\r\n        path: 'vehicletrackinglist',\r\n        component: VehicleTrackinglistComponent\r\n    },\r\n    {\r\n        path: 'supplier',\r\n        component: SupplierComponent\r\n    },\r\n    {\r\n        path: 'supplier/:id',\r\n        component: SupplierComponent\r\n    },\r\n    {\r\n        path: 'supplierlist',\r\n        component: SupplierlistComponent\r\n    },\r\n    {\r\n        path: 'inventory',\r\n        component: InventoryComponent\r\n    },\r\n    {\r\n        path: 'inventory/:id',\r\n        component: InventoryComponent\r\n    },\r\n    {\r\n        path: 'inventorylist',\r\n        component: InventorylistComponent\r\n    },\r\n    {\r\n        path: 'owner',\r\n        component: OwnerComponent\r\n    },\r\n    {\r\n        path: 'owner/:id',\r\n        component: OwnerComponent\r\n    },\r\n    {\r\n        path: 'ownerlist',\r\n        component: OwnerlistComponent\r\n    },\r\n    {\r\n        path: 'order',\r\n        component: OrderComponent\r\n    },\r\n    {\r\n        path: 'order/:id',\r\n        component: OrderComponent\r\n    },\r\n    {\r\n        path: 'orderlist',\r\n        component: OrderlistComponent\r\n     },\r\n    {\r\n        path: 'users',\r\n        component: UsersComponent\r\n    },\r\n    {\r\n        path: 'users/:id',\r\n        component: UsersComponent\r\n    },\r\n    {\r\n        path: 'userslist',\r\n        component: UserslistComponent\r\n    }\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n    exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }","module.exports = \".dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  .dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  .dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f1f1f1;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n  }\\r\\n  \\r\\n  .dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n  .app {\\r\\n    margin: 48px;\\r\\n  }\\r\\n  \\r\\n  .buttons {\\r\\n    display: flex;\\r\\n    max-width: 500px;\\r\\n    justify-content: space-evenly;\\r\\n    margin-bottom: 48px;\\r\\n\\r\\n  }\\r\\n\\r\\n  \\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7SUFDNUMsVUFBVTtFQUNaOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztFQUNoQjs7RUFDQTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLG1CQUFtQjs7RUFFckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gIH1cclxuICBcclxuICAuZHJvcGRvd24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIH1cclxuICBcclxuICAuZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICAgIG1pbi13aWR0aDogMTYwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5kcm9wZG93bi1jb250ZW50IGEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIC5hcHAge1xyXG4gICAgbWFyZ2luOiA0OHB4O1xyXG4gIH1cclxuICBcclxuICAuYnV0dG9ucyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxuXHJcbiAgfVxyXG5cclxuICBcclxuICAiXX0= */\"","module.exports = \"\\r\\n  <router-outlet></router-outlet>\\r\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription, Observable,timer } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent{\r\n \r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n \r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule,HttpClient , HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MarksheetComponent } from './marksheet/marksheet.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { CollegeComponent } from './college/college.component';\r\n\r\n\r\n\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DataValidator } from './utility/data-validator';\r\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\r\nimport { SignUpComponent } from './login/signup.component';\r\nimport { MessageComponent } from './message/message.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MessageListComponent } from './message/message-list.component';\r\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\r\nimport { CollegeListComponent } from './college/college-list.component';\r\nimport { StudentListComponent } from './student/student-list.component';\r\nimport { UserComponent} from './user/user.component';\r\n\r\nimport { UserListComponent } from './user/user-list.component';\r\n\r\nimport { RoleComponent } from './role/role.component';\r\nimport { CourseComponent } from './course/course.component';\r\nimport { SubjectComponent } from './subject/subject.component';\r\nimport {RoleListComponent } from './role/role-list.component';\r\nimport { TimetableComponent } from './timetable/timetable.component';\r\nimport { CourseListComponent } from \"./course/course-list.component\";\r\nimport { FacultyComponent } from './faculty/faculty.component';\r\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\r\nimport { FileComponent } from './file/file.component';\r\nimport { TimetableListComponent } from \"./timetable/timetable-list.component\";\r\nimport { SubjectListComponent } from \"./subject/subject-list.component\";\r\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\r\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\r\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\r\nimport { LoaderComponent } from \"./loader/loader.component\";\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { AuthService } from './auth.service';\r\nimport {MyprofileComponent} from './user/myprofile.component';\r\nimport { JasperReportComponent } from './jasper-report/jasper-report.component';\r\n\r\nimport { AppcontendNumberOnlyDirective } from './appcontend-number-only.directive';\r\nimport { AppcontendAlphabateOnlyDirective } from './appcontend-alphabate-only.directive';\r\nimport { ValidateNumberMinMaxDirectiveDirective } from './validate-number-min-max-directive.directive';\r\nimport { AppFirstLastNameDirective } from './app-first-last-name.directive';\r\nimport { AppcontentManyDecimalDirective } from './appcontent-many-decimal.directive';\r\nimport { DatePipe } from '@angular/common';\r\nimport { PersantageValueDirective } from './persantage-value.directive';\r\n\r\nimport { VerifyforgotpasswordOTPComponent } from './login/verifyforgotpassword-otp.component';\r\nimport { PageNotFoundComponent } from './page-not-found.component';\r\nimport { MaxLengthNumberDirective } from './max-length-number.directive';\r\n\r\nimport { ClientComponent } from './test_client/client.component';\r\nimport { ClientlistComponent } from './test_client/clientlist.component';\r\nimport { CustomersComponent } from './test_customers/customers.component';\r\nimport { CustomerslistComponent } from './test_customers/customerslist.component';\r\nimport { InventoryComponent } from './test_inventory/inventory.component';\r\nimport { InventorylistComponent } from './test_inventory/inventorylist.component';\r\nimport { IssueComponent } from './test_issue/issue.component';\r\nimport { IssuelistComponent } from './test_issue/issuelist.component';\r\nimport { JobComponent } from './test_job/job.component';\r\nimport { JoblistComponent } from './test_job/joblist.component';\r\nimport { OrderComponent } from './test_order/order.component';\r\nimport { OrderlistComponent } from './test_order/orderlist.component';\r\nimport { OwnerComponent } from './test_owner/owner.component';\r\nimport { OwnerlistComponent } from './test_owner/ownerlist.component';\r\nimport { PatientComponent } from './test_patient/patient.component';\r\nimport { PatientlistComponent } from './test_patient/patientlist.component';\r\nimport { PrescriptionComponent } from './test_prescription/prescription.component';\r\nimport { PrescriptionlistComponent } from './test_prescription/prescriptionlist.component';\r\nimport { ProductdetailsComponent } from './test_productdetails/productdetails.component';\r\nimport { RouteComponent } from './test_route/route.component';\r\nimport { RoutelistComponent } from './test_route/routelist.component';\r\nimport { SalaryComponent } from './test_salary/salary.component';\r\nimport { SalarylistComponent } from './test_salary/salarylist.component';\r\nimport { ShoppingcartComponent } from './test_shoppingcart/shoppingcart.component';\r\nimport { ShoppingcartlistComponent } from './test_shoppingcart/shoppingcartlist.component';\r\nimport { SupplierComponent } from './test_supplier/supplier.component';\r\nimport { SupplierlistComponent } from './test_supplier/supplierlist.component';\r\nimport { VehicleComponent } from './test_vehicle/vehicle.component';\r\nimport { VehiclelistComponent } from './test_vehicle/vehiclelist.component';\r\nimport { VehicleTrackinglistComponent } from './test_VehicleTracking/vehicle-trackinglist.component';\r\nimport { VehicleTrackingComponent } from './test_vehicle-tracking/vehicle-tracking.component';\r\nimport { ProductdetailslistComponent } from './test_productdetails/productdetailslist.component';\r\nimport { UsersComponent } from './test_users/users.component';\r\nimport { UserslistComponent } from './test_users/userslist.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { AuthService } from './auth.service';\r\n\r\n\r\nexport function myHttpLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PageNotFoundComponent,\r\n    AppComponent,\r\n    MarksheetComponent,\r\n    MarksheetListComponent,\r\n    MarksheetmeritListComponent,\r\n    GetmarksheetComponent,\r\n    StudentComponent,\r\n    StudentListComponent,\r\n    CollegeComponent,\r\n    CollegeListComponent,\r\n    MessageComponent,\r\n    MessageListComponent,\r\n    UserComponent,\r\n    UserListComponent,\r\n    RoleComponent,\r\n    RoleListComponent,\r\n    CourseComponent,\r\n    CourseListComponent,\r\n    SubjectComponent,\r\n    SubjectListComponent,\r\n    TimetableComponent,\r\n    TimetableComponent,\r\n    TimetableListComponent,\r\n    FacultyComponent,\r\n    FacultyListComponent,\r\n  \r\n\r\n    DashboardComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    ChangepasswordComponent,\r\n    MyprofileComponent, \r\n    VerifyforgotpasswordOTPComponent,\r\n   \r\n    LoaderComponent,\r\n    FileComponent,\r\n    SpinnerComponent,\r\n    JasperReportComponent,\r\n\r\n    MaxLengthNumberDirective,\r\n  AppcontendNumberOnlyDirective,\r\n  AppcontendAlphabateOnlyDirective,\r\n  ValidateNumberMinMaxDirectiveDirective,\r\n  AppFirstLastNameDirective,\r\n  AppcontentManyDecimalDirective,\r\n  PersantageValueDirective,\r\n\r\n  UsersComponent,\r\n  UserslistComponent,\r\n  ClientComponent,\r\n  ClientlistComponent,\r\n  CustomersComponent,\r\n  CustomerslistComponent,\r\n  InventoryComponent,\r\n  InventorylistComponent,\r\n  IssueComponent,\r\n  IssuelistComponent,\r\n  JobComponent,\r\n  JoblistComponent,\r\n  OrderComponent,\r\n  OrderlistComponent,\r\n  OwnerComponent,\r\n  OwnerlistComponent,\r\n  PatientComponent,\r\n  PatientlistComponent,\r\n  PrescriptionComponent,\r\n  PrescriptionlistComponent,\r\n  ProductdetailsComponent,\r\n  ProductdetailslistComponent,\r\n  RouteComponent,\r\n  RoutelistComponent,\r\n  SalaryComponent,\r\n  SalarylistComponent,\r\n  ShoppingcartComponent,\r\n  ShoppingcartlistComponent,\r\n  SupplierComponent,\r\n  SupplierlistComponent,\r\n  VehicleComponent,\r\n  VehiclelistComponent,\r\n  VehicleTrackinglistComponent,\r\n  VehicleTrackingComponent\r\n \r\n ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n          useFactory: myHttpLoader, \r\n          deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthService ,\r\n     multi: true \r\n},\r\n   HttpServiceService, \r\n    DataValidator,\r\n    CookieService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\n\r\nexport class AppModule { \r\n  \r\n}","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appcontendAlphabateOnly]'\r\n})\r\nexport class AppcontendAlphabateOnlyDirective {\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    const key = event.key;\r\n    // Allow control keys such as backspace, delete, tab, escape, enter, and arrow keys\r\n    if (\r\n      key === 'Backspace' || key === 'Delete' || key === 'Tab' || key === 'Escape' || key === 'Enter' ||\r\n      (key === 'ArrowLeft' || key === 'ArrowRight' || key === 'ArrowUp' || key === 'ArrowDown')\r\n    ) {\r\n      return;\r\n    }\r\n    // Prevent numbers\r\n    if (!/[A-Za-z\\s]/.test(key)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appcontendNumberOnly]'\r\n})\r\nexport class AppcontendNumberOnlyDirective {\r\n\r\n  private regex: RegExp = new RegExp(/^\\d*\\.?\\d{0,2}\\.?\\d{0,2}$/);\r\n  \r\n  private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight'];\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n\r\n    let current: string = this.el.nativeElement.value;\r\n    let next: string = current.concat(event.key);\r\n\r\n    if (next && !String(next).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  onInputChange(event: Event) {\r\n    let initalValue = this.el.nativeElement.value;\r\n    this.el.nativeElement.value = initalValue.replace(/[^0-9.]*/g, '');\r\n    if ( initalValue !== this.el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAppcontentManyDecimal]'\r\n})\r\nexport class AppcontentManyDecimalDirective {\r\n\r\n \r\n  private regex: RegExp = new RegExp(/^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?$/);\r\n\r\n  private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight'];\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (this.specialKeys.indexOf(event.key) !== -1) {\r\n      return;\r\n    }\r\n\r\n    let current: string = this.el.nativeElement.value;\r\n    let next: string = current.concat(event.key);\r\n\r\n    if (next && !String(next).match(this.regex)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  onInputChange(event: Event) {\r\n    let initalValue = this.el.nativeElement.value;\r\n    this.el.nativeElement.value = initalValue.replace(/[^0-9.]*/g, '');\r\n    if ( initalValue !== this.el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService implements HttpInterceptor {\r\n\r\n\r\n  constructor(private http: HttpServiceService, private router: Router) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log('auth request-response');\r\n\r\n    let modifiedRequest=req.clone({\r\n      withCredentials: true\r\n    })\r\n    \r\n    // const sessionId = sessionStorage.getItem(\"sessionId\");\r\n    if (localStorage.getItem('fname') && localStorage.getItem('token')) {\r\n     \r\n      modifiedRequest = modifiedRequest.clone({\r\n        setHeaders: {\r\n          \"name\": \"Harsh\",\r\n          // 'sessionId':sessionId,\r\n          Authorization: this.http.getToken(),\r\n          jsessionid:this.http.getJsessionid()\r\n        }\r\n      })\r\n\r\n    }\r\n    console.log(req.headers.get(\"Authorization\") + \"------------------->>>\")\r\n    \r\n    return next.handle( modifiedRequest).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n     \r\n        if (error.status === 401) {\r\n          localStorage.clear();\r\n          this.router.navigate(['/login'], {queryParams: { errorMessage: error.error },} );         \r\n         }\r\n\r\n        if (error.status === 403) {\r\n          localStorage.clear();\r\n          this.router.navigate(['/login'],{ queryParams: { errorMessage: \"Your Session has been Expired! Please Re-Login\"} }  );\r\n         }\r\n\r\n\r\n         //--->FrontCtl se message lane ke tiem pr na ki jwtRequestFilter pr.\r\n         \r\n        //  if (error.status === 403) {\r\n        //   localStorage.clear();\r\n        //   this.router.navigate(['/login'],{ queryParams: { errorMessage: error.error} }  );\r\n        //  }\r\n\r\n         \r\n        return throwError(error);\r\n                                              }\r\n      )\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}","import { OnInit, Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseCtl } from './base.component';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { element } from '@angular/core/src/render3';\r\n\r\nexport class BaseListCtl extends BaseCtl {\r\n\r\n  @ViewChildren(\"checkboxes\") checkboxes: QueryList<ElementRef>;\r\n  deleteRecordList: any = [];\r\n  isMasterSel: boolean = false;\r\n  checkList = 0;\r\n\r\n\r\n  alphabateRegex = /[A-Za-z\\s]/;\r\n  numberRegex = /^\\d+(\\.\\d{1,2})?$/;\r\n  emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  phoneNoRegex = /^(\\+91[\\-\\s]?)?[0]?(91)?[6789]\\d{9}$/;\r\n  PasswordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n  numbetrPresentRegex = /^\\d+(\\.\\d+)?%$/;\r\n  nameFirstLastCharaCapitalRegex = /^[A-Z][a-z]*( [A-Z][a-z]*)*$/;\r\n  interestRateRegex = /^(100(\\.00?)?|([1-9]?[0-9])(\\.\\d{1,2})?)%$/;\r\n  numberOneTONintey = /^([1-9]|[1-8][0-9]|90)$/;\r\n  AlphabateWithMaxLengthRegex=/^[a-zA-Z ]{1,80}$/;\r\n  titleRegex=/^[a-zA-Z ]{1,40}$/;\r\n  versionRegex=/^\\d{1,2}(\\.\\d{1,2}){0,2}$/;\r\n\r\n\r\n\r\n\r\n  constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(endpoint, locator, route);\r\n  }\r\n\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n    this.preload();\r\n    this.search();\r\n    this.isMasterSel = false; //for select all\r\n  }\r\n\r\n  /**  \r\n    * Valid validat Email regex Pattern\r\n    * invalid Email pelese write correct Email like:-harsh@gmail.com\r\n    */\r\n  validatEmail() {\r\n    this.form.emailInvalid = false;\r\n    const value= this.form.searchParams.login;\r\n    // Email\r\n    if (value.trim() !== \"\" && !this.emailRegex.test(value)) {\r\n      this.form.emailInvalid = true;\r\n    }else{\r\n      this.form.emailInvalid = false;\r\n    }\r\n    return this.form.emailInvalid;\r\n  }\r\n\r\n\r\n   /**  \r\n    * Valid validat Alphabate  regex Pattern With length\r\n    * invalid Alphabate Maxlength\r\n    * This filed content alphabate and max lent is 80.\r\n    */\r\n  validatAlphabate(event: any, field: string) {\r\n    this.form.alphabateInvalid = false;\r\n    const value= event.target.value;\r\n    // Email\r\n    if (value.trim() !== \"\" && !this.AlphabateWithMaxLengthRegex.test(value)) {\r\n      this.form.alphabateInvalid = true;\r\n    }else{\r\n      this.form.alphabateInvalid = false;\r\n    }\r\n    return this.form.alphabateInvalid;\r\n  }\r\n\r\n\r\n\r\n   /**  \r\n    * Valid validat tital  regex Pattern With length\r\n    * invalid Alphabate Maxlength\r\n    * This filed content alphabate and max lent is 40.\r\n    */\r\n  validatTitle() {\r\n    this.form.titleInvalid = false;\r\n    const value= this.form.searchParams.title;\r\n    // Email\r\n    if (value.trim() !== \"\" && !this.titleRegex.test(value)) {\r\n      this.form.titleInvalid = true;\r\n    }else{\r\n      this.form.titleInvalid = false;\r\n    }\r\n    return this.form.titleInvalid;\r\n  }\r\n\r\n  /**  \r\n   * Valid validat Name regex Pattern\r\n   * \"This Flied content alphabate and Start with an uppercase letter and  each word starts with a capital letter followed by lowercase letters.\r\n   */\r\n  validatName() {\r\n    this.form.nameInvalid = false;\r\n    const value= this.form.searchParams.name;\r\n    // name\r\n    if (value.trim() !== \"\" && !this.nameFirstLastCharaCapitalRegex.test(value)) {\r\n      this.form.nameInvalid = true;\r\n    }else{\r\n      this.form.nameInvalid = false;\r\n    }\r\n    return this.form.nameInvalid;\r\n  }\r\n\r\n\r\n  /**  \r\n    * Valid validate Number min=1 /maxi=90  regex Pattern\r\n    * this filed content min =   value and max=   value\r\n    */\r\n  validateNumber() {\r\n    const value = this.form.searchParams.quantity;\r\n    const numValue = Number(value);\r\n\r\n    if (value !== \"\" && (isNaN(numValue) || numValue < 0 || numValue > 400000)) {\r\n      this.form.numberInvalid = true;\r\n    } else {\r\n      this.form.numberInvalid = false;\r\n    }\r\n\r\n    return this.form.numberInvalid;\r\n  }\r\n\r\n  validateNumber2() {\r\n    const value = this.form.searchParams.quantity;\r\n    const numValue = Number(value);\r\n\r\n    if (value !== \"\" && (isNaN(numValue) || numValue < 0 || numValue > 400000)) {\r\n      this.form.number2Invalid = true;\r\n    } else {\r\n      this.form.number2Invalid = false;\r\n    }\r\n\r\n    return this.form.number2Invalid;\r\n  }\r\n\r\n\r\n\r\n  /**  \r\n   * Valid validate phoneNo\r\n   * \"This PhoneNo  contain only Number and number starts with 6,7,8,9 and contain 10 digits \"\r\n   */\r\n  ValidPhone(){\r\n    this.form.phoneNoInvalid=false;\r\n\r\n    const value=this.form.searchParams.mobile;\r\n\r\n    const strValue= String(value);\r\n\r\n    if(strValue.trim() !==\"\" && !this.phoneNoRegex.test(strValue)){\r\n      this.form.phoneNoInvalid=true;\r\n\r\n    }else{\r\n      this.form.phoneNoInvalid=false;\r\n    }\r\n  }\r\n\r\n\r\n   /**  \r\n   * Valid validate password\r\n   * \"This password must contain at least one letter, digit, or special character and 8 characters \"\r\n   */\r\n   validatePassword() {\r\n    this.form.passwordInvalid = false;\r\n    // Quantity\r\n    const value = this.form.searchParams.password;\r\n     // Convert value to a string\r\n  const strValue = String(value);\r\n    if (strValue.trim() !== \"\" && ! this.PasswordRegex.test(strValue)) {\r\n      this.form.passwordInvalid = true;\r\n    }else{\r\n      this.form.passwordInvalid = false;\r\n    }\r\n  }\r\n\r\n  //  /**      JATIN VALIDATION\r\n  //     * Valid Filed regex Pattern\r\n  //     */\r\n  //   validateQuantity() {\r\n  //     const quantity = this.form.searchParams.quantity;\r\n  //     if (quantity === null || isNaN(Number(quantity)) || Number(quantity) <= 0 || Number(quantity) > 1000) {\r\n  //       this.form.inputerror.quantity = 'Invalid quantity. Please enter a number between 1 and 1000.';\r\n  //     } else {\r\n  //       this.form.inputerror.quantity = ''; // Clear error message if quantity is valid\r\n  //     }\r\n  //   }\r\n\r\n  // Clear quantity input error message when field is cleared\r\n\r\n\r\n\r\n  submit() {\r\n\r\n    this.isMasterSel = false;\r\n    this.form.pageNo = 0;\r\n    this.search();\r\n\r\n  }\r\n\r\n\r\n  //me created->reset\r\n  refresh() {\r\n    this.isMasterSel = false;\r\n    this.form.pageNo = 0;\r\n    this.form.searchParams = {};\r\n    this.search();\r\n  }\r\n\r\n\r\n  next() {\r\n    this.form.pageNo++;\r\n    this.isMasterSel = false;\r\n    this.search();\r\n    //  this.searchOperation('previous');\r\n  }\r\n\r\n  previous() {\r\n    if (this.form.pageNo > 0) {\r\n      this.form.pageNo--;\r\n      this.isMasterSel = false;\r\n      this.search();\r\n      // this.searchOperation('previous');    \r\n    }\r\n  }\r\n\r\n  //use krna he y\r\n  exit() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n  //selectAll\r\n  checkUncheckAll(event) {\r\n    const checked = event.target.checked;\r\n    //singl checkboxes he ->forEach ki help se nikalte ja re and checked krte ja re\r\n    this.checkboxes.forEach((element) => {\r\n      element.nativeElement.checked = checked;\r\n      console.log(element.nativeElement.firstName)\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //sare singal checkbox true hone pr ->selectAll checkbox trueS\r\n  checklistUpdate() {\r\n\r\n    this.isMasterSel = false;//oll Tiem false\r\n    this.checkList = 0;\r\n    this.checkboxes.forEach((element) => {\r\n      //ak bar click kiya checbox pr ye methode run-2nd time click kiya checbox pr vaps ye methode run hogi.\r\n      if (element.nativeElement.checked) {\r\n        this.checkList = this.checkList + 1;\r\n      }\r\n\r\n    });\r\n\r\n    if (this.checkList == this.form.list.length) {\r\n      this.isMasterSel = true; //particularly point pr true.\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //delete \r\n  deleteMany() {\r\n    this.form.error = false;\r\n    this.deleteRecordList.length = 0;\r\n    var isSelectedRecord: boolean = false;\r\n\r\n    this.checkboxes.forEach((element) => {\r\n\r\n      if (element.nativeElement.checked) {\r\n        // console.log('record deleting ' + element.nativeElement.id)\r\n        this.deleteRecordList.push(element.nativeElement.id);\r\n        isSelectedRecord = true;\r\n      }\r\n    });\r\n\r\n    if (isSelectedRecord) {\r\n      console.log('pageNo.........!!!!!!======', this.form.pageNo);\r\n      super.deleteMany(this.deleteRecordList + '?pageNo=' + this.form.pageNo)\r\n\r\n    } else {\r\n      this.form.message = \"Select Atleast One Record\";\r\n      this.form.error = true;\r\n\r\n    }\r\n    this.isMasterSel = false;\r\n\r\n  }\r\n\r\n  delete(id) {\r\n    super.delete(id, function () {\r\n      this.search();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { formatNumber } from '@angular/common';\r\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\n\r\n\r\n\r\nexport class BaseCtl implements OnInit {\r\n\r\n  public api = {\r\n    endpoint: null,\r\n    get: null,\r\n    save: null,\r\n    search: null,\r\n    delete: null,\r\n    deleteMany: null,\r\n    preload: null,\r\n    report: null\r\n  }\r\n\r\n\r\n  initApi(ep) {\r\n    this.api.endpoint = ep;\r\n    this.api.get = ep + \"/get\";\r\n    this.api.save = ep + \"/save\";\r\n    this.api.search = ep + \"/search\";\r\n    this.api.delete = ep + \"/delete\";\r\n    this.api.deleteMany = ep + \"/deleteMany\";\r\n    this.api.preload = ep + \"/preload\";\r\n    this.api.report = ep + \"/report\";\r\n\r\n    console.log(\"endpoint=>\",ep);\r\n    console.log(\"API\",this.api);\r\n\r\n  }\r\n\r\n  /**\r\n   * Form contains preload data, error/sucess message \r\n   */\r\n  public form: any = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    inputerror: {}, // form input error messages\r\n\r\n    data: { id: null,}, //form data\r\n    \r\n    searchParams: {}, //search form\r\n    list: [], // search list \r\n    preload: [], // preload data\r\n    pageNo: 0,\r\n  \r\n    \r\n    searchMessage: null//search result message\r\n  };\r\n  nextList = 0;\r\n \r\n\r\n  dateOptions=[\r\n    '2024-07-01',\r\n    '2024-07-02',\r\n    '2024-07-03',\r\n  ];\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Initialize services \r\n   * \r\n   * @param serviceLocator \r\n   * @param route \r\n   */\r\n  constructor(public endpoint, public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\r\n\r\n    var _self = this;\r\n\r\n    _self.initApi(endpoint);\r\n\r\n    /**\r\n     * Get primary key from path variale\r\n     */\r\n    \r\n    _self. serviceLocator.getPathVariable(_self.route, function (params) {\r\n      _self.form.data.id = params[\"id\"];\r\n      console.log('I GOT ID', _self.form.data.id);\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n    var _self = this;\r\n\r\n    this.preload();\r\n    if (this.form.data.id && this.form.data.id > 0) {\r\n      this.display();\r\n    }\r\n  }\r\n\r\n\r\n  forward(page) {\r\n  \r\n    this.serviceLocator.forward(page);\r\n  }\r\n\r\n\r\n  /**\r\n   * Loded preload data\r\n   */\r\n  preload() {\r\n    console.log(\"preload start\")\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.preload, function success (res) {\r\n\r\n      if (res.success) {\r\n        _self.form.preload = res.result;\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    },function fail(error){  console.log(error) }\r\n    \r\n    \r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n * Contains display logic. It fetches data from database for the primary key \r\n */\r\n  //update pr work\r\n  display() {\r\n\r\n    var _self = this;\r\n    console.log(' display method');\r\n    this.serviceLocator.httpService.get(_self.api.get + \"/\" + _self.form.data.id, function (res) {\r\n\r\n      _self.form.data.id = 0;\r\n      _self.form.message = null;\r\n      _self.form.error = !res.success;\r\n\r\n      if (res.success) {\r\n        // _self.form.data=res.result.data;//my way directly-fromdatabase.\r\n        _self.populateForm(_self.form.data, res.result.data);\r\n      } else {\r\n        _self.form.data = {};\r\n        //_self.form.data=res.result.data;//may way directy-fromdatabase.\r\n      }\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n\r\n      console.log('FORM', _self.form);\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  search() {\r\n    var _self = this;\r\n     console.log('search--start');\r\n\r\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\r\n\r\n      _self.form.error = !res.success;\r\n      _self.form.message = null;\r\n\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n      //res.false aayega hi nhi vha backend se false kr ke nahi bheja.\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        _self.nextList = res.result.nextList;\r\n      } else {\r\n        //run time pr analysis->res.success false hoga to ->error bhi false hona chahiye.\r\n        //  _self.form.error = ! res.success;\r\n        _self.form.list = [];//list clear karne ke liye.\r\n        _self.nextList = 0;//next disabel ke liye.\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  /**\r\n   * Contains submit logic. It saves data\r\n   */\r\n\r\n\r\n  submit() {\r\n    var _self = this;\r\n\r\n    console.log( \"submit start running\",this.form);\r\n    console.log(\"form data going to be submit\" + this.form.data);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.data={};\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.error = false;\r\n\r\n      _self.form.error = !res.success;\r\n\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      if (res.success) {\r\n        _self.form.data.id = res.result.data;\r\n        //return _self.form.data.id ;\r\n      }\r\n      //agr new data add ke bad add khule hi khulvana to ho Id=0 kar do.\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  deleteMany(id) {\r\n    var _self = this;                 //(http://localhost:8080/User/deleteManey+ \"/\" + deleteRecourdList + \"?pageNo=\" +this.form.pageNo ,this.serachParam,function(res) {  } )\r\n                                      //(http://localhost:8080/User/deleteManey /id?pageNo=0, searchParam)\r\n    this.serviceLocator.httpService.post(_self.api.deleteMany + \"/\" + id, this.form.searchParams, function (res) {\r\n      _self.form.error = !res.success;\r\n      _self.form.message = '';\r\n\r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        _self.nextList = res.result.nextList;\r\n\r\n      } else {\r\n        _self.form.list = [];\r\n        _self.nextList = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  generateReport() {\r\n    var _self = this;\r\n    console.log('********* Generating Report ********************');\r\n    this.serviceLocator.httpService.get(_self.api.report, function (res) {\r\n\r\n      if (res.success) {\r\n        console.log('*********  Report Generated ********************');\r\n        alert('pass');\r\n\r\n      } else {\r\n        console.log('********* Error in Generating Report  ********************');\r\n        alert('fail');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Searhs records \r\n   */\r\n\r\n\r\n  searchOperation(operation: String) {\r\n    var _self = this;\r\n    console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search + \"/\" + _self.form.pageNo, _self.form.searchParams, function (res) {\r\n\r\n\r\n      if (operation == 'next' || operation == 'previous') {\r\n        _self.nextList = res.result.nextList;\r\n        _self.form.message = null;\r\n        _self.form.error = false;\r\n      }\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.data;\r\n        if (_self.form.list.length == 0) {\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\", _self.form.list.length);\r\n      } else {\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  delete(id, callback?) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.delete + \"/\" + id, function (res) {\r\n      if (res.success) {\r\n        _self.form.message = \"Data is deleted\";\r\n        if (callback) {\r\n          console.log('Response Success and now Calling Callback');\r\n          //  callback();  \r\n          this.search();\r\n        }\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Forward to page\r\n   * @param page \r\n   */\r\n\r\n\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  /**\r\n   * Override by childs \r\n   * \r\n   * @param form \r\n   */\r\n  validateForm(form) {\r\n  }\r\n\r\n\r\n    /**\r\n * Populate HTML form data\r\n * Overridden by child classes.\r\n * \r\n * @param form \r\n * @param data \r\n */\r\n    populateForm(form, data) {\r\n\r\n      form.id = data.id;\r\n      console.log(form.id + 'formid in base ctl');\r\n    }\r\n\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%;\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\n background-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n       <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'College List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select name' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/college')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add College' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n     \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Address' | translate }}</th>\\r\\n                <th>{{'Phone' | translate }}</th>\\r\\n                <th>{{'City' | translate }}</th>\\r\\n                <th>{{'State' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.address }} </td>\\r\\n                <td> {{ m.phoneNo }} </td>\\r\\n                <td> {{ m.city }} </td>\\r\\n                <td> {{ m.state }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/college/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n            </table>\\r\\n              <table style=\\\"width: 100%;\\\">\\r\\n                <tr>\\r\\n                  <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button></td>\\r\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/collegelist']\\\">{{'Back' | translate}}</a></td>\\r\\n    \\r\\n    \\r\\n            \\r\\n                <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n                </tr>\\r\\n                </table>\\r\\n    \\r\\n            \\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-college-list',\r\n  templateUrl: './college-list.component.html',\r\n  styleUrls: ['./college.component.css']\r\n})\r\nexport class CollegeListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.COLLEGE, locator, route);\r\n  }\r\n\r\n}","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add College' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update College' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.name}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Address' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"addr\\\" [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Address' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.address}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'City' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"form.data.city\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter City' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.city}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'State' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter State' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Phone No.' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phnNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Phone No.' | translate }}\\\">\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/collegelist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-college',\r\n  templateUrl: './college.component.html',\r\n  styleUrls: ['./college.component.css']\r\n})\r\nexport class CollegeComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.COLLEGE, locator, route);\r\n  }\r\n\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.address = data.address;\r\n    form.state = data.state;\r\n    form.city = data.city;\r\n    form.phoneNo = data.phoneNo;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\"\\r\\n style=\\\"padding-top: 3%;\\r\\npadding-bottom: 15%;\\r\\nbackground: url(assets/files/wav1.jpg) no-repeat center center;\\r\\n background-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\nheight:90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Course List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select CourseName' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.duration\\\"\\r\\n            placeholder=\\\"{{'Search Duration' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/course')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Course' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Name' | translate }}</th>\\r\\n                <th>{{'Duration' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.courseName}} </td>\\r\\n                <td> {{ m.duration }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/course/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n              \\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/courselist']\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-course-list',\r\n  templateUrl: './course-list.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.COURSE, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:15%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Course' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Course' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.data.courseName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Course Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.courseName}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Duration' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\" >\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n            \\r\\n                <select class=\\\"form-control\\\" name=\\\"duration\\\"\\r\\n                  [(ngModel)]=\\\"form.data.duration\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option [value]=\\\"1\\\">1 Year</option>\\r\\n                  <option [value]=\\\"2\\\">2 Year</option>\\r\\n                  <option [value]=\\\"3\\\">3 Year</option>\\r\\n                  <option [value]=\\\"4\\\">4 Year</option>\\r\\n                  <option [value]=\\\"5\\\">5 Year</option>\\r\\n\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.duration}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea class=\\\"form-control\\\" placeholder=\\\"{{'Enter Description' | translate }}\\\" name=\\\"description\\\"\\r\\n                  [(ngModel)]=\\\"form.data.description\\\"></textarea>\\r\\n              </div>\\r\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/courselist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List\\r\\n                ' | translate }}              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseComponent extends BaseCtl {\r\n\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.COURSE, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n \r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.courseName);\r\n    flag = flag && validator.isNotNullObject(form.duration);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.courseName = data.courseName;\r\n    form.duration = data.duration;\r\n    form.description = data.description;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <app-navbar></app-navbar>\\r\\n<div>\\r\\n    <p class=\\\"text-info font-weight-bold\\\" style=\\\"padding-left: 30%; font-size: 70px;\\\">WELCOME TO ORS</p>\\r\\n    <div style=\\\"background-image: url(../../assets/files/IndexView.png); \\r\\n        -webkit-background-size: cover;\\r\\n        -moz-background-size: cover;\\r\\n        -o-background-size: cover;\\r\\n        background-size: 100%;\\r\\n        padding-bottom:18%;\\r\\n        padding-top: 5%;\\r\\n        \\\">\\r\\n        <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer> -->\\r\\n\\r\\n\\r\\n<style>\\r\\n  body{\\r\\n  \\r\\n  background-image: url('<%=ORSView.APP_CONTEXT%>/img/lib.jpg');\\r\\n      background-size: 100%;\\r\\n  \\r\\n  \\r\\n  }\\r\\n  .cl{\\r\\n    font-family: Lucida Calligraphy; \\r\\n  \\r\\n   /*  font-family: Monotype Corsiva;\\r\\n    \\r\\n   font-family: Footlight MT Light; */\\r\\n    }\\r\\n  </style>\\r\\n<app-navbar></app-navbar>\\r\\n\\r\\n<div>  \\r\\n  <!-- <div class=\\\"img-fluid\\\" style=\\\"background-image: url(../../assets/files/welcomeView2.png); \\r\\n      -webkit-background-size: cover;\\r\\n      -moz-background-size: cover;\\r\\n      -o-background-size: cover;\\r\\n      background-size: 100%;\\r\\n      padding-bottom:18%;\\r\\n      padding-top: 5%;\\r\\n      \\\">\\r\\n      <p class=\\\"text-white font-weight-bold\\\" style=\\\"padding-top: 10%; padding-left: 25%; font-size: 20px;\\\">.</p>\\r\\n  </div> -->\\r\\n\\r\\n  <div class=\\\"row \\\" \\r\\n  style=\\\"padding-bottom: 14%;\\r\\n  background: url(assets/files/1920.jpg) no-repeat center center;\\r\\n  background-attachment: fixed;\\r\\n  background-size: cover;\\r\\n  width:cover;\\r\\n  height: 120vh;\\\">\\r\\n    <p class=\\\"text-cs1 font-family ml-4 font-weight-bold\\\" style=\\\"padding-top: 25%; \\r\\n    padding-left: 26%;font-size: 75px; color: rgb(203, 30, 30);\\\">{{'WELCOME TO ORS ' | translate}}</p></div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EndpointServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public SERVER_URL = \"http://15.206.186.231:8080\";\r\n  public MESSAGE = this.SERVER_URL + \"/Message\";\r\n  public USER = this.SERVER_URL + \"/User\";\r\n  public ROLE = this.SERVER_URL + \"/Role\";\r\n  public COLLEGE = this.SERVER_URL + \"/College\";\r\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\r\n  public STUDENT = this.SERVER_URL + \"/Student\";\r\n  public SUBJECT = this.SERVER_URL+ \"/Subject\";\r\n  public FACULTY = this.SERVER_URL+ \"/Faculty\";\r\n  public COURSE = this.SERVER_URL + \"/Course\";\r\n  public TIMETABLE = this.SERVER_URL+ \"/TimeTable\";\r\n  public Employee = this.SERVER_URL+ \"/Employee\";\r\n  public JASPERREPORT = this.SERVER_URL+ \"/Jasper\";\r\n  public JOB = this.SERVER_URL+ \"/Job\";\r\n  public ProductDetails = this.SERVER_URL+ \"/productDetails\";\r\n  public client = this.SERVER_URL+ \"/Client\";\r\n  public vehicle = this.SERVER_URL+ \"/vehicle\";\r\n  public VehicleTracking = this.SERVER_URL+ \"/VehicleTracking\";\r\n  public Route = this.SERVER_URL+ \"/Route\";\r\n  public patient = this.SERVER_URL+ \"/patient\";\r\n  public prescription = this.SERVER_URL+ \"/prescription\";\r\n  public salary = this.SERVER_URL+ \"/salary\"; \r\n  public productdetails = this.SERVER_URL+ \"/productdetails\"; \r\n  public Inventory = this.SERVER_URL+ \"/inventory\";\r\n  public Owner = this.SERVER_URL+ \"/owner\"; \r\n  public Users = this.SERVER_URL+ \"/users\"; \r\n\r\n  \r\n  \r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Faculty List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\r\\n            placeholder=\\\"{{'Search College' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n\\r\\n        \\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/faculty')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Faculty' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'DOB' | translate}}</th>\\r\\n                <th>{{'Gender' | translate}}</th>\\r\\n                <th>{{'College' | translate}}</th>\\r\\n                <th>{{'Course' | translate}}</th>\\r\\n                <th>{{'Subject' | translate}}</th>\\r\\n                <th>{{'Mobile' | translate}}</th>\\r\\n                <th>{{'Email' | translate}}</th>\\r\\n                <th>{{'Qualification' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td>{{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td>{{ m.firstName }} {{m.lastName}} </td>\\r\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>{{ m.gender }} </td>\\r\\n                <td>{{m.collegeName}}</td>\\r\\n                <td>{{m.courseName}}</td>\\r\\n                <td>{{m.subjectName}}</td>\\r\\n                <td>{{ m.phoneNo}}</td>\\r\\n                <td>{{m.email}}</td>\\r\\n                <td>{{m.qualification}}</td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/faculty/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash  text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/facultylist']\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-faculty-list',\r\n  templateUrl: './faculty-list.component.html',\r\n  styleUrls: ['./faculty.component.css']\r\n})\r\nexport class FacultyListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.FACULTY, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Faculty'\\r\\n            | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\r\\n            Faculty' | translate}}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate}} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Qualification' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"qualification\\\" [(ngModel)]=\\\"form.data.qualification\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Your Qualification' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile No' | translate}} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\r\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                  required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/facultylist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' |\\r\\n                translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-faculty',\r\n  templateUrl: './faculty.component.html',\r\n  styleUrls: ['./faculty.component.css']\r\n})\r\nexport class FacultyComponent extends BaseCtl {\r\n\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.FACULTY, locator, route);\r\n  }\r\n\r\n  \r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    console.log(form.firstName)\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    console.log(form.lastName)\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    console.log(form.email)\r\n    flag = flag && validator.isNotNullObject(form.qualification);\r\n    console.log(form.qualification)\r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n    console.log(form.gender)\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    console.log(form.phoneNo+\"in validateForm----------------------------\");\r\n    \r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    console.log(form.courseId)\r\n    flag = flag && validator.isNotNullObject(form.collegeId);\r\n    console.log(form.collegeId)\r\n    flag = flag && validator.isNotNullObject(form.subjectId);\r\n    console.log(form.subjectId)\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.subjectId = data.subjectId;\r\n    console.log(form.subjectId+'subject--');\r\n    form.collegeId = data.collegeId;\r\n    form.courseId = data.courseId;\r\n    console.log(form.courseId+'course ----');\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.email = data.email;\r\n    form.qualification = data.qualification;\r\n    form.gender = data.gender;\r\n    form.dob = data.dob;\r\n    form.phoneNo = data.phoneNo;\r\n    console.log(\"phoneno----------------\"+form.phoneNo);\r\n    \r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n  \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n        <h1 class=\\\"text-primary pt-4\\\">Upload Image Test Page</h1>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container row pl-4\\\">\\r\\n <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUpload()\\\" value=\\\"upload\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<!--   \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n  \\r\\n          <div *ngIf=message>{{message}}</div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"image name\\\" [(ngModel)]=\\\"imageName\\\"\\r\\n  \\r\\n              name=\\\"name\\\" />\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n  \\r\\n          <input type=\\\"button\\\" (click)=\\\"getImage()\\\" value=\\\"Get Image\\\">\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <div class=\\\"container row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n            <div *ngIf=retrievedImage>\\r\\n  \\r\\n              <img [src]=\\\"retrievedImage\\\">\\r\\n  \\r\\n          </div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-file',\r\n  templateUrl: './file.component.html',\r\n  styleUrls: ['./file.component.css']\r\n})\r\n\r\n  export class FileComponent implements OnInit {\r\n\r\n    ngOnInit() {}\r\n\r\n  \r\n    fileToUpload: File = null;\r\n    constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\r\n\r\n    handleFileInput(files: FileList) {\r\n      this.fileToUpload = files.item(0);\r\n      console.log(this.fileToUpload);\r\n  }\r\n\r\n  onUpload() {\r\n    this.onSubmit(this.fileToUpload).subscribe(data => {\r\n      console.log(this.fileToUpload);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    \r\n  }\r\n    \r\n    \r\n    onSubmit(fileToUpload: File) {\r\n      const formData = new FormData();\r\n\r\n      formData.append('file', fileToUpload);\r\n      return this.httpClient.post(\"http://localhost:8080/User/profilePic/1\", formData,);\r\n    }\r\n\r\n}\r\n","module.exports = \"footer{\\r\\n    position: fixed;\\r\\n    \\r\\n    bottom: 0px;\\r\\n    height: 40px;\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTs7SUFFZixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlcntcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIFxyXG4gICAgYm90dG9tOiAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<footer class=\\\"text-center \\\"\\r\\n style=\\\"background: linear-gradient(to bottom right, rgb(46, 32, 168), rgb(178, 201, 212));\\\">\\r\\n  <!-- Copyright -->\\r\\n  <div class=\\\"text-center pt-2 pb-2 text-light\\\" >\\r\\n    &copy; {{'COPYRIGHT' | translate}}\\r\\n    <a class=\\\"text-light\\\" href=\\\"\\\">{{'NCS PVT. LTD' | translate}}</a>\\r\\n  </div>\\r\\n  <!-- Copyright -->\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router'\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\n\r\nexport class HttpServiceService {\r\n\r\n\r\n  token = '';\r\n  form = {\r\n    message: '',\r\n    error: false\r\n  };\r\n\r\n\r\n  userparams = {\r\n    url: '',\r\n    sessionExpiredMsg: '',\r\n    methodType: '',\r\n  };\r\n\r\n\r\n  setToken(token) {\r\n    this.token = localStorage.getItem('token');\r\n    //  console.log(this.token + '----> inside setToken');\r\n  }\r\n\r\n  getToken() {\r\n    console.log(localStorage.getItem('token') + '====>> getToken');\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  getJsessionid(){\r\n    return localStorage.getItem('jsessionid');\r\n  }\r\n\r\n  constructor(private router: Router, private httpClient: HttpClient) {\r\n\r\n  }\r\n  isLogout() {\r\n    console.log('url>>>------------------------->>>',this.router.url );\r\n\r\n    let JSESSIONID = localStorage.getItem('fname');\r\n    if ((JSESSIONID == \"null\" || JSESSIONID === null) && (this.router.url != \"/login\" && this.router.url != \"/Auth\" && this.router.url != \"/logout\"\r\n      && this.router.url != \"/forgotpassword\"\r\n      && this.router.url != \"/signup\"\r\n      && this.router.url != \"/login/true\"\r\n    )) {\r\n      // this.form.message = \"Your Session has been Expired! Please Re-Login\";\r\n      //  this.form.error = true;\r\n     //  this.userparams.url = this.router.url;// to navigate the URI request.\r\n      // this.router.navigateByUrl(\"/login\");\r\n\r\n\r\n      return true;\r\n    } else {\r\n      this.userparams.url ='';\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  get(endpoint, callback) {\r\n    this.userparams.url = this.router.url;\r\n   // console.log('httpservice return for auth class service-------1');//auth runig proccessing cheking \r\n    return this.httpClient.get(endpoint).subscribe((data) => {\r\n    //  console.log('httpservice return for auth class service-------2');//auth runig proccessing cheking\r\n      callback(data,)\r\n\r\n    }\r\n    \r\n    );\r\n  }\r\n\r\n  post(endpoint, bean, callback) {\r\n      this.userparams.url = this.router.url;\r\n    return this.httpClient.post(endpoint, bean).subscribe(\r\n      (data) => {\r\n      callback(data);\r\n\r\n    }\r\n\r\n\r\n    \r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2phc3Blci1yZXBvcnQvamFzcGVyLXJlcG9ydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-jasper-report></app-jasper-report>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseListCtl } from '../base-list.component';\r\n@Component({\r\n  selector: 'app-jasper-report',\r\n  templateUrl: './jasper-report.component.html',\r\n  styleUrls: ['./jasper-report.component.css']\r\n})\r\nexport class JasperReportComponent  extends BaseListCtl  {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.JASPERREPORT, locator, route);\r\n\r\n  }\r\n\r\n  ngOnInit() {   \r\n    this.generateReport();   \r\n  }\r\n\r\n  \r\n\r\n \r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div id=\\\"loader\\\">\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"dot\\\"></div>\\r\\n      <div class=\\\"loading\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <p class=\\\"spinner-message\\\" *ngIf=\\\"message && message !== ''\\\">\\r\\n      {{message}}\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar ></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  } \\r\\n  \\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom:15%;\\r\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    \\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form #loginForm=\\\"ngForm\\\">\\r\\n          \\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Forgot Password' | translate}}</h1>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error == true \\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error == false && form.message == 'Password has been sent to email id'\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Reset My Password' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-md-1 \\\"></div>\\r\\n            \\r\\n            <div class=\\\"pt-2 ml-4\\\" >\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/login']\\\"\\r\\n              style=\\\"text-decoration: none; color: white;\\\">{{'Login'}}</a>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  \\r\\n</div>\\r\\n  </div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgotpassword.component.html'\r\n})\r\n\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  endpoint = \"http://localhost:8080/Auth\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: \"\",\r\n    loginId: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n\r\n\r\n  validate(){\r\n    let flag = true;\r\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId) && this.dataValidator.emailRegexPattern(this.form.loginId);\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    this.httpService.get(_self.endpoint + \"/fp/\"+ this.form.loginId ,function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n      _self.form.error = !res.success;\r\n  \r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      \r\n      if (_self.form.error && res.result.inputerror) {\r\n          _self.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if(res.success){\r\n        let loginId=res.result.Email;\r\n        localStorage.setItem(\"Email\",loginId);\r\n        _self.router.navigateByUrl('verifyotp');\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZDs7O0FBR0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtHQUNUOzs7QUFFQTtJQUNDLFlBQVk7R0FDYjs7O0FBRUE7SUFDQyxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0UmVkQ29sb3Ige1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuXHJcbi5yZXF1aXJlZC1maWVsZDo6YWZ0ZXIgeyBcdFx0XHJcbiAgY29udGVudDogXCIqXCI7XHRcdFxyXG4gIGNvbG9yOiByZWQ7XHRcdFxyXG4gICB9XHRcclxuXHJcbiAgIC5zdWNjZXNzQ29sb3J7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbiAgIH1cclxuXHJcbiAgIC5idG4tc3BhY2Uge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<app-navbar #one></app-navbar>\\r\\n<style>\\r\\n  #nnn{\\r\\n    background: none;\\r\\n    border: none;\\r\\n  }\\r\\n  \\r\\n  </style>\\r\\n  \\r\\n  \\r\\n<style type=\\\"text/css\\\">\\r\\n  .log1 {\\r\\n    padding-top: 13%; \\r\\n  }\\r\\n  \\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n    \\r\\n  }\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(46, 32, 168), rgb(178, 201, 212));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n    \\r\\n  }\\r\\n  </style>\\r\\n<div class=\\\"row \\\" \\r\\nstyle=\\\"padding-top: 8%;\\r\\n padding-bottom: 8%;\\r\\nbackground: url(assets/files/2.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;\\r\\nwidth:auto;\\r\\nheight: 105vh;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card input-group-addon grad\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n\\r\\n        <form>\\r\\n\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h1 class=\\\"text-primary font-weight-bold\\\">{{'Login' | translate}}</h1>\\r\\n          </div>\\r\\n          \\r\\n          <input type=\\\"hidden\\\" name=\\\"loginUrl\\\" [(ngModel)]=\\\"form.loginUrl\\\" class=\\\"form-control\\\">\\r\\n        \\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"form.error==false && form.message\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message \\\"\\r\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span>\\r\\n            </span>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n\\r\\n                  <div class=\\\"input-group-text\\\">  <i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n           <span  *ngIf=\\\"inputerror.loginId != null\\\"\\r\\n          class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'loginId'| translate}} </span> \\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n           <!-- <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>  -->\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span  *ngIf=\\\"inputerror.password != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span> \\r\\n\\r\\n            <!-- <span class=\\\"alertRedColor\\\">{{inputerror.password}}</span> -->\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n              <button (click)=\\\"signIn()\\\" class=\\\"btn btn-md btn-success\\\"> {{'Sign in' | translate}}</button>  \\r\\n            </div>\\r\\n\\r\\n            &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"signUp()\\\" class=\\\"btn btn-md btn-success\\\">\\r\\n                {{'Sign up' | translate}}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/forgotpassword']\\\">{{'Forgot Password' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n\\r\\n        \\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer>\\r\\n\\r\\n</app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  endpoint = \"http://15.206.186.231:8080/Auth\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: '',\r\n    loginId: '',\r\n    password: '',\r\n    loginUrl: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  userparams = {\r\n    url: '',\r\n    sessionExpiredMsg: '',\r\n    methodType: '',\r\n  };\r\n\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router,\r\n    private cookieService: CookieService, private route: ActivatedRoute, private serviceLocator: ServiceLocatorService) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n\r\n//backend-> se mesage bhej ra session has bean expier.\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.form.message = params['errorMessage'] || null;\r\n      if (this.form.message != null) {\r\n        this.form.error = true;\r\n      }\r\n      console.log('msssssssssgggggggggggg = >', this.form.message)\r\n    });\r\n\r\n \r\n    var a = '';\r\n    this.serviceLocator.getPathVariable(this.route, function (params) { a = params[\"userparams\"]; })\r\n    if (a == 'true') {\r\n      this.form.message = 'Logout Successfully';\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  signIn() {\r\n    var _self = this;\r\n    this.form.error = false;\r\n    const requestedUrl = this.httpService.userparams.url;//to get the URI\r\n    console.log('url===>------->>>>', requestedUrl );\r\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n\r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n      _self.form.error = !res.success;\r\n\r\n\r\n      if (_self.dataValidator.isNotNullObject(res.result.message)) {\r\n        _self.form.message = res.result.message;\r\n      }   \r\n\r\n      if (_self.dataValidator.isNotNullObject(res.result.inputerror)) {\r\n        _self.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if (_self.dataValidator.isTrue(res.success)) {\r\n\r\n        _self.httpService.setToken(res.result.token);\r\n        sessionStorage.setItem(\"sessionId\",res.result.jsessionid);\r\n        localStorage.setItem(\"loginId\", res.result.loginId);\r\n        let tokenStr = \"Bearer \" + res.result.token;\r\n        localStorage.setItem(\"token\", tokenStr);\r\n        localStorage.setItem(\"role\", res.result.role);\r\n        localStorage.setItem(\"fname\", res.result.fname);\r\n        localStorage.setItem(\"lname\", res.result.lname);\r\n        localStorage.setItem(\"userid\", res.result.data.id);\r\n        localStorage.setItem(\"jsessionid\", res.result.jsessionid);\r\n    \r\n\r\n\r\n\r\n        if (requestedUrl != null && requestedUrl != '') {\r\n          _self.router.navigateByUrl(requestedUrl); \r\n        } else {\r\n          _self.router.navigateByUrl('dashboard');\r\n        }\r\n\r\n\r\n        \r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  signUp() {\r\n    this.router.navigateByUrl('/signup');\r\n  }\r\n\r\n\r\n\r\n  validate() {\r\n    let flag = true;\r\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\r\n    console.log(this.form.loginId);\r\n    flag = flag && this.dataValidator.isNotNull(this.form.password);\r\n    console.log(this.form.password);\r\n    return flag;\r\n  }\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n   .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 25px\\r\\n  ;\\r\\n  }\\r\\n \\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\" padding-top: 4%;\\r\\n padding-bottom:0%;\\r\\n background-image: url(../../assets/files/registrationImage.png);\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: 100%;\\r\\n  height: 120vh;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n         <form>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h3 class=\\\"text-primary font-weight-bold\\\">\\r\\n              {{'Sign Up' | translate}}\\r\\n            </h3>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null && form.message.length>0\\\"\\r\\n            class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.firstName != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'firstname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.firstName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.lastName != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'lastname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.lastName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Login id' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"login\\\" [(ngModel)]=\\\"form.data.login\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\r\\n\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.login != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'email'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.login}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.password != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{password | translate}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span  *ngIf=\\\"form.inputerror.phone != null\\\"\\r\\n              class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'phone'| translate}} </span>\\r\\n          </div>\\r\\n\\r\\n          <!-- <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span  *ngIf=\\\"form.inputerror.alternateMobile != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'mobile'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.phone}} </span> \\r\\n          <!-- </div>  -->\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n            </div> <span  *ngIf=\\\"form.inputerror.dob != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'dob'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.dob}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:0.1%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div> <span  *ngIf=\\\"form.inputerror.gender != null\\\"\\r\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'gender'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.gender}} </span> -->\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n\\r\\n\\r\\n              <button (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Sign up' | translate}}</button>\\r\\n            </div>\\r\\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n            <div class=\\\"pt-2\\\">\\r\\n\\r\\n              <button (click)=\\\"reset()\\\" class=\\\"btn btn-warning mr-1\\\">{{'Reset' | translate}}</button>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport {ServiceLocatorService} from '../service-locator.service';\r\nimport { format } from 'url';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html'\r\n})\r\n\r\nexport class SignUpComponent implements OnInit {\r\n\r\n\r\n  endpoint = \"http://localhost:8080/Auth/signUp\";\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: '', //error or success message\r\n    data: { id: null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    \r\n  };\r\n  \r\n\r\n  \r\n\r\n  constructor(private serviceLocator:ServiceLocatorService, private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form);\r\n  }\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n\r\n  reset(){\r\n    location.reload()\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    this.httpService.post(this.endpoint, this.form.data,function (res) {\r\n\r\n      console.log('MyResponse', res);\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.error = !res.success;\r\n\r\n      //business Validation->success -true/false \r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n    \r\n      if (_self.form.error && res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n\r\n          \r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n    /**\r\n   * Override by childs \r\n   * \r\n   * @param form \r\n   */\r\n    validateForm(form) {\r\n      let flag = true;\r\n      let validator = this.serviceLocator.dataValidator;\r\n    \r\n      flag = flag && validator.isNotNullObject(form.firstName);\r\n      \r\n      flag = flag && validator.isNotNullObject(form.lastName);\r\n   \r\n      flag = flag && validator.isNotNullObject(form.loginId);\r\n      \r\n      flag = flag && validator.isNotNullObject(form.password);\r\n      \r\n      flag = flag && validator.isNotNullObject(form.phone);\r\n      \r\n      flag = flag && validator.isNotNullObject(form.gender);\r\n    \r\n      flag = flag && validator.isNotNullObject(form.dob);\r\n      return flag;\r\n  \r\n    }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  body {\\r\\n    font-family: Arial, sans-serif;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    background: url('assets/files/new-background.jpg') no-repeat center center fixed;\\r\\n    background-size: cover;\\r\\n  }\\r\\n\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgba(32, 168, 168, 0.8), rgba(219, 231, 237, 0.8));\\r\\n    padding: 20px;\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n\\r\\n  .container {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .card-body {\\r\\n    text-align: center;\\r\\n    padding: 40px 20px;\\r\\n  }\\r\\n\\r\\n  .input-group-text {\\r\\n    background-color: transparent;\\r\\n    border: none;\\r\\n  }\\r\\n\\r\\n  .btn-success {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .form-group {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n  h1, p {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n  .alert {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body shadow-lg grad\\\">\\r\\n      <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Verify The OTP' | translate }}</h1>\\r\\n      <p>Please enter the OTP sent to your email to verify your identity.</p>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!form.error && form.message === 'Password has been sent to email id'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{ form.message }}\\r\\n      </div>\\r\\n\\r\\n      <form #loginForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"otp\\\" class=\\\"font-weight-bold\\\">{{ ' OTP ' }}</label>\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-lock grey-text\\\"></i></div>\\r\\n            </div>\\r\\n            <input type=\\\"number\\\" id=\\\"otp\\\" name=\\\"otp\\\" [(ngModel)]=\\\"form.otp\\\" class=\\\"form-control\\\" appMaxLengthNumber=\\\"4\\\"\\r\\n              placeholder=\\\"{{ 'Enter OTP here' | translate }}\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <button (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\">\\r\\n          {{ 'Verify OTP' }}\\r\\n        </button>\\r\\n        <div class=\\\"pl-3 pt-2\\\">\\r\\n          <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/forgotpassword']\\\">{{'Forgot Password' | translate}}</a>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-verifyforgotpassword-otp',\r\n  templateUrl: './verifyforgotpassword-otp.component.html',\r\n  styleUrls: []\r\n})\r\nexport class VerifyforgotpasswordOTPComponent implements OnInit {\r\n\r\n  endpoint = \"http://localhost:8080/Auth/\";\r\n\r\n  form = {\r\n    error: false,\r\n    message: \"\",\r\n    otp: '',\r\n  };\r\n\r\n  inputerror = {};\r\n  message = '';\r\n\r\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\r\n  }\r\n\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n let Email= localStorage.getItem(\"Email\");\r\n    this.httpService.post(_self.endpoint + \"verify-OTP/\"+Email+\"?otp=\"+this.form.otp,null,function (res) {\r\n   \r\n      _self.form.message = '';\r\n      _self.inputerror = {};\r\n      _self.form.error = !res.success;\r\n  \r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      \r\n      if (_self.form.error && res.result.inputerror) {\r\n          _self.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if(res.success){\r\n        Email='';\r\n        localStorage.removeItem(\"Email\");\r\n\r\n\r\n        let loginId=res.result.loginId;\r\n        localStorage.setItem(\"chageLoginPassword\",loginId);\r\n\r\n        \r\n        _self.router.navigateByUrl('changepassword');\r\n      }\r\n    });\r\n  }\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div  style=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;\\r\\npadding-top: 5%;\\r\\npadding-bottom: 24%;\\r\\nwidth:100%;\\r\\n  height: 100;\\\">\\r\\n  <form name=\\\"rollForm\\\" (ngSubmit)=\\\"go()\\\">\\r\\n    <div align=\\\"center\\\">\\r\\n      <div style=\\\"font-size: 80px;\\\">\\r\\n      <p class=\\\"font-weight-bold text-primary\\\">{{'Get Marksheet' | translate }}</p>\\r\\n    </div>\\r\\n    </div>\\r\\n    <div class=\\\"row pt-4 pb-4\\\">\\r\\n      <div class=\\\"col-sm-4 \\\"></div>\\r\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\r\\n        <input type=\\\"text\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.data.rollNo\\\"\\r\\n          placeholder=\\\"{{'Enter Roll Number' | translate }}\\\">&emsp;</div>\\r\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n          {{'Search' | translate }}</button>\\r\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/getmarksheet']\\\"> {{'Reset' | translate}} </a>\\r\\n        \\r\\n        &emsp;\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-sm-3 col-xs-3\\\"></div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n  <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n    {{form.message}}\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n    {{form.message}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"form.list.rollNo!= null\\\" >\\r\\n\\r\\n    <table width=\\\"100%\\\" class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\" border=\\\"3px\\\">\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'RollNO' | translate }}</th>\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.rollNo}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Name' | translate }}</th>\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.name}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Marks' | translate }}</th>\\r\\n        <th align=\\\"center\\\" id=\\\"po1\\\">{{'Max Marks' | translate }}</th>\\r\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Min Marks' | translate }}</th>\\r\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Marks Obtain' | translate }}</th>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Subject' | translate }}</th>\\r\\n        \\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Physics' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.physics}}*</span> -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.physics >35) ? 'green': 'red' }\\\">{{form.list.physics}}</span>\\r\\n          \\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Chemistry' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.chemistry}}*</span>  -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.chemistry >35) ? 'green': 'red' }\\\">{{form.list.chemistry}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\">{{'Maths' | translate }}</th>\\r\\n        <td align=\\\"center\\\">100</td>\\r\\n        <td align=\\\"center\\\">35</td>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\r\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.maths}}*</span> -->\\r\\n          <span [ngStyle]=\\\"{'color': (form.list.maths >35) ? 'green': 'red' }\\\">{{form.list.maths}}</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Total' | translate }}</th>\\r\\n\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">{{form.list.maths+form.list.physics+form.list.chemistry}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n\\r\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Percentage' | translate }}</th>\\r\\n\\r\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">\\r\\n          {{((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 | number:'2.0-2' }}%\\r\\n        \\r\\n          \\r\\n        \\r\\n        \\r\\n        </td>\\r\\n      </tr>\\r\\n     <!--  <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Grade' | translate }}</font>\\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\r\\n          <font color=\\\"green\\\"><b>{{'PASS' | translate }}</b></font>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n\\r\\n      <!-- <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>\\r\\n          <font color=\\\"red\\\"><b>F</b></font>\\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\r\\n          <font color=\\\"red\\\"><b>{{'FAIL' | translate }}</b></font>\\r\\n        </td>\\r\\n      </tr> -->\\r\\n      <tr>\\r\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\r\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>         \\r\\n        </th>\\r\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\"  *ngIf=\\\"((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 > 35; else elseBlock\\\">\\r\\n\\r\\n          <font color=\\\"green\\\"><b>{{'Pass' | translate }}</b></font>\\r\\n        </td>\\r\\n        <ng-template #elseBlock><td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\" ><font color=\\\"red\\\"><b>{{'Fail' | translate }}</b></font></td></ng-template>\\r\\n      </tr>\\r\\n\\r\\n    </table>\\r\\n    \\r\\n</div><div style=\\\"position: relative; clear: both;\\\">\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { BaseCtl } from '../base.component';\r\nimport { NgForm} from '@angular/forms';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-getmarksheet',\r\n  templateUrl: './getmarksheet.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class GetmarksheetComponent extends BaseCtl{\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null,rollNo : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo : 0\r\n   \r\n  };\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\r\n    super(locator.endpoints.Marksheet, locator, route);\r\n\r\n  }\r\n\r\n\r\n  \r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.rollNo);\r\n    return flag;\r\n  }\r\n  \r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.rollNo = data.rollNo;\r\n  \r\n  }\r\n  \r\n  go(){\r\n    var _self = this;\r\n    console.log(\"onClickSubmit\");\r\n    console.log(this.form.data);\r\n    console.log(this.form.data.rollNo);\r\n    \r\n    \r\n    this.httpservice.get(\"http://localhost:8080/Marksheet/rollno/\"+this.form.data.rollNo,function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.data;\r\n        if(_self.form.list.length == 0){\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\",_self.form.list.length );\r\n      }else{\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 8%; \\r\\nbackground: url(assets/files/back.jpeg) no-repeat center center;\\r\\nbackground-repeat: no-repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-6 p-1 text-center\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Marksheet List' | translate}}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row  pt-4 pb-4 \\\" style=\\\"margin-left:15%\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            placeholder=\\\"{{'Search Name'| translate}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.rollNo\\\"\\r\\n            placeholder=\\\"{{'Search Roll No'| translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select ROLL NO' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.marksheetList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search'| translate}}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/marksheet')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Marksheet'| translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No'| translate}}</th>\\r\\n                <th>{{'RollNO'| translate}}</th>\\r\\n                <th>{{'Name'| translate}}</th>\\r\\n                <th>{{'Physics'| translate}}</th>\\r\\n                <th>{{'Chemistry'| translate}}</th>\\r\\n                <th>{{'Maths'| translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <!-- <td> <input type=\\\"checkbox\\\" name=\\\"list_name\\\" value=\\\"{{isMasterSel}}\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"isAllSelected()\\\"/>\\r\\n                  </td> -->\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\r\\n                    value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                \\r\\n\\r\\n                <td> {{ m.rollNo }} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.physics }} </td>\\r\\n                <td> {{ m.chemistry }} </td>\\r\\n                <td> {{ m.maths }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/marksheet/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n\\r\\n                  <!-- <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <table style=\\\"width: 100%;\\\">\\r\\n          <tr>\\r\\n            <td style=\\\"width: 50%;\\\">\\r\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                }} </button>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\r\\n              [routerLink]=\\\"['/marksheetlist']\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                translate }}</button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-marksheet-list',\r\n  templateUrl: './marksheet-list.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetListComponent extends BaseListCtl {\r\n  imageToShow: any;\r\n  myKey = \"\";\r\n\r\n  \r\ncreateImageFromBlob(image: Blob) {\r\n  let reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => {\r\n     this.imageToShow = reader.result;\r\n  \r\n  }, false);\r\n\r\n  if (image) {\r\n     reader.readAsDataURL(image);\r\n  }\r\n}\r\n\r\n public form = {\r\n\r\n   error: false, //error \r\n   message: null, //error or success message\r\n   preload: [], // preload data\r\n   data: { id: null}, //form data\r\n   inputerror: {}, // form input error messages\r\n   searchParams: {}, //search form\r\n   searchMessage: null, //search result message\r\n   list: [ ], // search list \r\n   pageNo: 0\r\n };\r\n\r\n\r\n selectedFile: File;\r\n retrievedImage: any;\r\n base64Data: any;\r\n retrieveResonse: any;\r\n message: string;\r\n imageName: any;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.MARKSHEET, locator, route);\r\n  }\r\n\r\n  getImage(id) {\r\n    //Make a call to Sprinf Boot to get the Image Bytes.\r\n    this.form.data.id = id;\r\n    console.log(this.form.data.id);\r\n    \r\n    this.httpClient.get('http://localhost:8080/Marksheet/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\r\n      this.createImageFromBlob(data);\r\n      this.myKey= this.form.data.id;\r\n    }, error => {\r\n      \r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFya3NoZWV0L21hcmtzaGVldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkOzs7QUFHQTtFQUNFLFlBQVk7RUFDWixVQUFVO0dBQ1Q7OztBQUVBO0lBQ0MsWUFBWTtHQUNiOzs7QUFFQTtJQUNDLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcblxyXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxyXG4gIGNvbnRlbnQ6IFwiKlwiO1x0XHRcclxuICBjb2xvcjogcmVkO1x0XHRcclxuICAgfVx0XHJcblxyXG4gICAuc3VjY2Vzc0NvbG9ye1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICB9XHJcblxyXG4gICAuYnRuLXNwYWNlIHtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59Il19 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Marksheet' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Marksheet' | translate}}</h2>\\r\\n          \\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Roll No' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"rollNo\\\" [(ngModel)]=\\\"form.data.rollNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Roll No' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.rollNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Student' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                \\r\\n\\r\\n                <select class=\\\"form-control\\\" required name=\\\"studentId\\\"\\r\\n                  [(ngModel)]=\\\"form.data.studentId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Student' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.studentList\\\" [value]=\\\"obj.id\\\">{{obj.firstName + ' ' +obj.lastName }}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.studentId}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Physics' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phy\\\" [(ngModel)]=\\\"form.data.physics\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Physics Marks' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.physics}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Chemistry' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"chemistry\\\" [(ngModel)]=\\\"form.data.chemistry\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Chemistry Marks' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.chemistry}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Maths' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                \\r\\n                <input type=\\\"text\\\" name=\\\"math\\\" [(ngModel)]=\\\"form.data.maths\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Maths Marks'| translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.maths}} </span>\\r\\n          </div>\\r\\n         \\r\\n         \\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update'| translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/marksheetlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'Back'| translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-marksheet',\r\n  templateUrl: './marksheet.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  marksheetForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n \r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute , private httpClient: HttpClient) {\r\n    super(locator.endpoints.MARKSHEET, locator, route);\r\n\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n    console.log('in submit');\r\n    console.log(this.form);\r\n    console.log(this.form.data);\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.data.id = res.result.data;\r\n      if (_self.fileToUpload) {\r\n        console.log('Dheeraj');\r\n        _self.myFile();\r\n      }\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Dheeraj----------.\");\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        if (res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n        }\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  onFileSelect(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    console.log(this.fileToUpload);\r\n\r\n  }\r\n\r\n  onUpload(marksheetform: FormData) {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n\r\n  myFile() {\r\n    console.log(this.form.data.id + 'after super.submit-----');\r\n    this.onSubmitProfile(this.fileToUpload, this.marksheetForm).subscribe(data => {\r\n      console.log(this.fileToUpload);\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmitProfile(fileToUpload: File,marksheetform: FormGroup) {\r\n    const formData = new FormData();\r\n    let phone = null;\r\n    formData.append('file', fileToUpload);\r\n    console.log(this.form.data.id + 'this id number ======');\r\n    return this.httpClient.post(\"http://localhost:8080/User/profilePic/\" + this.form.data.id, formData);\r\n  }\r\n\r\n  validate() { \r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    console.log('Student name :: ' + form.name);\r\n    flag = flag && validator.isNotNullObject(form.rollNo);\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.physics);\r\n    flag = flag && validator.isNotNullObject(form.chemistry);\r\n    flag = flag && validator.isNotNullObject(form.maths);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.studentId =data.studentId;\r\n    form.rollNo = data.rollNo;\r\n    form.physics = data.physics;\r\n    form.chemistry = data.chemistry;\r\n    form.maths = data.maths;\r\n    form.imageId = data.imageId;\r\n    console.log('Populated Form', form);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n</style>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 1%;padding-bottom: 1%; \\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"col-sm-12 pt-3\\\"> \\r\\n          <h3 class=\\\"text-primary text-center font-weight-bold\\\">{{'Marksheet Merit List' | translate}}</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div style=\\\"margin-left: 87%;\\\" class=\\\"pb-2\\\">\\r\\n\\r\\n        <a href=\\\"http://localhost:8080/Jasper/report\\\"  class=\\\"btn btn-lg btn-primary \\\" role=\\\"button\\\"  target=\\\"blank\\\">\\r\\n          <span class=\\\"fa fa-print mr-1\\\"></span>{{'Print' | translate}}</a>\\r\\n      </div> \\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n              <th >{{'S.No' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'RollNO' | translate}}  </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Name' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Physics' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Chemistry' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Maths' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Total' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Percentage(%)' | translate}}</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let m of form.list; let i = index\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{(form.pageNo*5)+i+ 1}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.rollNo}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.name}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.physics}}</td>\\r\\n              <td> {{m.chemistry}}</td>\\r\\n              <td> {{m.maths}}</td>\\r\\n              <td>{{m.physics+m.maths+m.chemistry}}</td>\\r\\n              <td>{{((m.physics+m.maths+m.chemistry)*100)/300 | number:'2.0-2' }}%</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n          </tbody>\\r\\n          </table>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div><app-footer>\\r\\n  \\r\\n</app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-marksheetmerit-list',\r\n  templateUrl: './marksheetmerit-list.component.html',\r\n  styleUrls: ['./marksheet.component.css']\r\n})\r\n\r\nexport class MarksheetmeritListComponent extends BaseCtl{\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\r\n    super(locator.endpoints.Marksheet, locator, route);\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.getMeritList();\r\n  }\r\n\r\n  getMeritList(){\r\n    var _self = this;\r\n  \r\n    this.httpservice.get(\"http://localhost:8080/Marksheet/meritlist\",function (res){\r\n      \r\n      if(res.success){\r\n        _self.form.list = res.result.list;\r\n        if(_self.form.list.length == 0){\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        console.log(\"List Size\",_self.form.list.length );\r\n      }else{\r\n        _self.form.error = false;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appMaxLengthNumber]'\r\n})\r\nexport class MaxLengthNumberDirective {\r\n\r\n  @Input() appMaxLengthNumber: number;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    const maxLength = this.appMaxLengthNumber;\r\n\r\n    // If input length exceeds the max length, truncate the value\r\n    if (input.value.length > maxLength) {\r\n      input.value = input.value.slice(0, maxLength);\r\n      this.updateModel(input.value);\r\n    }\r\n  }\r\n\r\n  @HostListener('paste', ['$event']) onPaste(event: ClipboardEvent): void {\r\n    const input = event.target as HTMLInputElement;\r\n    const maxLength = this.appMaxLengthNumber;\r\n\r\n    // Delay the execution to let the paste event finish\r\n    setTimeout(() => {\r\n      if (input.value.length > maxLength) {\r\n        input.value = input.value.slice(0, maxLength);\r\n        this.updateModel(input.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateModel(value: string): void {\r\n    const nativeElement = this.el.nativeElement;\r\n    const event = new Event('input', { bubbles: true });\r\n    nativeElement.value = value;\r\n    nativeElement.dispatchEvent(event);\r\n  }\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg); background-repeat: no-repeat, repeat;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"col-sm-6 p-1\\\">\\r\\n          <h4 class=\\\"text-primary font-weight-bold\\\">{{'Message List' | translate}}</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subject\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.body\\\"\\r\\n            placeholder=\\\"{{'Search Body' | translate}}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate}}</button></div>\\r\\n        <div class=\\\"col=sm-1\\\">\\r\\n          <button (click)=\\\"forward('/message')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Message'| translate}}\\r\\n          </button></div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous'| translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-1\\\">\\r\\n          <button (click)=\\\"next()\\\" class=\\\"btn btn-info\\\">{{'Next'| translate}} </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'| translate}}</th>\\r\\n                <th>{{'Code'| translate}}</th>\\r\\n                <th>{{'Subject' | translate}}</th>\\r\\n                <th>{{'Body'| translate}}</th>\\r\\n                <th>{{'Type'| translate}}</th>\\r\\n                <th>{{'Status'| translate}}</th>\\r\\n                <th>#</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.code }} </td>\\r\\n                <td> {{ m.subject }} </td>\\r\\n                <td> {{ m.body }} </td>\\r\\n                <td> {{ m.type }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/message/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-message-list',\r\n  templateUrl: './message-list.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\n\r\nexport class MessageListComponent extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.MESSAGE, locator, route);\r\n  }\r\n\r\n}\r\n","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg);\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Message' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Message' | translate}} </h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Type' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comment grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"form.data.type\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Type' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.type}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Code' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-commenting grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"code\\\" id=\\\"code\\\" [(ngModel)]=\\\"form.data.code\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option selected=\\\"true\\\">{{'Please select'  | translate }}</option>\\r\\n                  <option value=\\\"U-FP\\\">U-FP </option>\\r\\n                  <option value=\\\"U-REG\\\">U-REG </option>\\r\\n                  <option value=\\\"U-CP\\\">U-CP</option>\\r\\n                </select>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.code}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comments grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"subject\\\" [(ngModel)]=\\\"form.data.subject\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Subject'| translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Body' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"form.data.body\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Body' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.body}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message Status' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'HTML' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"html\\\" [(ngModel)]=\\\"form.data.html\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Message HTML' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.html}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/messagelist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\r\\n              </button></div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataValidator } from '../utility/data-validator';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\n\r\nexport class MessageComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.MESSAGE, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.type);\r\n    flag = flag && validator.isNotNullObject(form.code);\r\n    flag = flag && validator.isNotNullObject(form.subject);\r\n    flag = flag && validator.isNotNullObject(form.body);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.code = data.code;\r\n    form.type = data.type;\r\n    form.subject = data.subject;\r\n    form.body = data.body;\r\n    form.status = data.status;\r\n    form.html = data.html;\r\n    console.log('Populated Form', form);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<style type=\\\"text/css\\\">\\r\\n  .raj{\\r\\n  background-image : linear-gradient(to bottom right, rgb(46, 32, 168), rgb(178, 201, 212));}\\r\\n\\r\\n  .c1{\\r\\ncolor: rgb(235, 6, 6);\\r\\n  }\\r\\n  </style>\\r\\n\\r\\n<div class=\\\"header\\\">\\r\\n  <nav  class=\\\"navbar navbar-expand-lg raj\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"logo\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\r\\n        <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\r\\n        <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\r\\n      </a>  \\r\\n    </div>\\r\\n\\r\\n \\r\\n\\r\\n    <select #locale (change)='changeLocale(locale.value)'class=\\\"c1\\\" >\\r\\n       <option value=\\\"en\\\">{{'Select Language' | translate }}</option> \\r\\n      \\r\\n      <option value=\\\"en\\\" style=\\\"color: red;\\\">English</option>\\r\\n      <option value=\\\"hi\\\"style=\\\"color: red;\\\">{{'Hindi' | translate }}</option>\\r\\n    </select>\\r\\n\\r\\n\\r\\n\\r\\n    <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- ...........Linkes Whitout Login.......!!!!!!!!!  -->\\r\\n    <div  *ngIf=\\\"!isLogin()\\\"  class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n\\r\\n\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\" style=\\\"padding-right: 6.5%;\\\">\\r\\n         \\r\\n        <li class=\\\"nav-item dropdown\\\">\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/myNav']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\"\\r\\n            data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n            <font style=\\\"color: black;\\\">{{'Hi,Guest'| translate}}\\r\\n            </font>\\r\\n          </a>\\r\\n\\r\\n          <div class=\\\"dropdown-menu\\\" id=\\\"myNav\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/login']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; &nbsp; {{'Log in' | translate}}</a>\\r\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/signup']\\\"><i class=\\\" fa fa-users\\\"></i> &nbsp; {{'User Registration' |\\r\\n              translate}}</a>\\r\\n          </div>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    \\r\\n   <!-- .............Links With Login...........!!!! -->\\r\\n  <div *ngIf=\\\"isLogin()\\\"  class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n\\r\\n\\r\\n    <!--ye space de ra image and link me -->\\r\\n    <div class=\\\"col-sm-2\\\"></div> \\r\\n\\r\\n\\r\\n\\r\\n    <ul class=\\\"nav navbar-nav pl-2 \\\">\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"  id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" \\r\\n         aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'User' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add User' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'User List' | translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Marksheet' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheet']\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp; {{'Add Marksheet' |translate}}</a> \\r\\n           <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetlist']\\\"><i class=\\\"fa fa-paste\\\"></i> &nbsp; {{'Marksheet List' | translate}}</a>\\r\\n           <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetmeritlist']\\\"><i  class=\\\" fa fa-list\\\"></i> &nbsp; {{'Marksheet Merit List' | translate}} </a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/getmarksheet']\\\"><i class=\\\"fa fa-copy\\\"></i> &nbsp; {{'Get Marksheet' |  translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Role' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/role']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add Role' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/rolelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Role List' |\\r\\n            translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'College' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/college']\\\"><i class=\\\"fa fa-university\\\"></i> &nbsp; {{'Add College' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/collegelist']\\\"><i class=\\\"fa fa-building\\\"></i> &nbsp;\\r\\n            {{'College List' | translate}} </a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Course' | translate}}\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/course']\\\"><i class=\\\"fa fa-book\\\"></i> &nbsp; {{'Add Course' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/courselist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp; {{'Course List'\\r\\n            | translate}} </a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Student' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/student']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Student' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/studentlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Student\\r\\n            List' | translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Faculty' | translate}}\\r\\n          </font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/faculty']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add Faculty' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/facultylist']\\\"><i class=\\\" fa fa-list\\\"></i> &nbsp; {{'Faculty\\r\\n            List' | translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'TimeTable' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetable']\\\"><i class=\\\"fa fa-clock-o\\\"></i> &nbsp; {{'Add TimeTable'\\r\\n            | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetablelist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp;\\r\\n            {{'TimeTable List' | translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Subject' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subject']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add Subject' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subjectlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; {{'Subject List' | translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n     </li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n     <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n      <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n        id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        <font style=\\\"color: white;\\\">{{'message' | translate}}</font>\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/message']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add message' |\\r\\n          translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/messagelist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; {{'message List'\\r\\n           | translate}}\\r\\n        </a>\\r\\n      </div>\\r\\n    </li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n          <font style=\\\"color: white;\\\">{{'client' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/client']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                            {{'Add client' |translate}}   </a>\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/clientlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                          {{'client List'      | translate}}\\r\\n                                        </a>\\r\\n       \\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n          <font style=\\\"color: white;\\\">{{'vehicle' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicle']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                            {{'Add vehicle' |translate}}   </a>\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehiclelist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                          {{'vehicle List'      | translate}}\\r\\n                                        </a>\\r\\n       \\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'vehicletracking' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicletracking']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add vehicletracking' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; {{'vehicletracking List'\\r\\n             | translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n          <font style=\\\"color: white;\\\">{{'patient' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patient']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                            {{'Add patient' |translate}}   </a>\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patientlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                          {{'patient List'      | translate}}\\r\\n                                        </a>\\r\\n       \\r\\n        </div>\\r\\n      </li>\\r\\n     \\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n<a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n  id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n  <font style=\\\"color: white;\\\">{{'prescription' | translate}}</font>\\r\\n</a>\\r\\n<div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/prescription']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                    {{'Add prescription' |translate}}   </a>\\r\\n<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/prescriptionlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                  {{'prescription List'      | translate}}\\r\\n                                </a>\\r\\n\\r\\n</div>\\r\\n</li>\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n<a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n  id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n  <font style=\\\"color: white;\\\">{{'route' | translate}}</font>\\r\\n</a>\\r\\n<div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/route']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                    {{'Add route' |translate}}   </a>\\r\\n<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/routelist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                  {{'route List'      | translate}}\\r\\n                                </a>\\r\\n\\r\\n</div>\\r\\n</li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n    id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n  \\r\\n    <font style=\\\"color: white;\\\">{{'salary' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n  \\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/salary']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                      {{'Add salary' |translate}}   </a>\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/salarylist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                    {{'salary List'      | translate}}\\r\\n                                  </a>\\r\\n  \\r\\n  </div>\\r\\n  </li>\\r\\n\\r\\n\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n<a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n  id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n  <font style=\\\"color: white;\\\">{{'productdetails' | translate}}</font>\\r\\n</a>\\r\\n<div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/productdetails']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                    {{'Add productdetails' |translate}}   </a>\\r\\n<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/productdetailslist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                  {{'productdetails List'      | translate}}\\r\\n                                </a>\\r\\n\\r\\n</div>\\r\\n</li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Inventory' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/inventory']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n               {{'Add inventory' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/inventorylist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp;\\r\\n               {{'inventory List' | translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n     </li>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n     \\r\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n    id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n  \\r\\n    <font style=\\\"color: white;\\\">{{'Supplier' | translate}}</font>\\r\\n  </a>\\r\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n  \\r\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplier']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                      {{'Add supplier' |translate}}   </a>\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplierlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                    {{'supplier List'      | translate}}\\r\\n                                  </a>\\r\\n  \\r\\n  </div>\\r\\n  </li>\\r\\n\\r\\n\\r\\n\\r\\n  <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n\\r\\n          <font style=\\\"color: white;\\\">{{'owner' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/owner']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp;\\r\\n                                            {{'Add owner' |translate}}   </a>\\r\\n  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/ownerlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; \\r\\n                                          {{'owner List'      | translate}}\\r\\n                                        </a>\\r\\n       \\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\r\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'users' | translate}}</font>\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/users']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add users' |\\r\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userslist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp; {{'users List'\\r\\n             | translate}}\\r\\n          </a>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\">\\r\\n\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <font style=\\\"color: white;\\\">{{'Hi  '+form.data.fname }} ({{form.data.role}})\\r\\n          </font>\\r\\n        </a>\\r\\n\\r\\n\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"forward()\\\"><i class=\\\" fa fa-user-md\\\"></i> &nbsp; {{'My Profile' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/changepassword']\\\"><i class=\\\" fa fa-key\\\"></i> &nbsp; {{'Change Password' |\\r\\n            translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\" goToLink()\\\" ><i class=\\\"fa fa-file\\\"></i> &nbsp;\\r\\n            {{'Java Doc' | translate}}</a>\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\" fa fa-lock\\\"></i> &nbsp;&nbsp;{{'Log Out' | translate}}</a>\\r\\n        </div>\\r\\n\\r\\n      </li>\\r\\n\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</nav>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { HttpServiceService} from '../http-service.service';\r\nimport { ServiceLocatorService} from '../service-locator.service';\r\n\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport { HttpClient} from '@angular/common/http'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  loginId: string;\r\n  userid : string;\r\n \r\n  constructor(private translate: TranslateService, private route : ActivatedRoute, private httpService : HttpServiceService,private myservice: HttpClient ,private servicelocator : ServiceLocatorService) { \r\n\r\n    console.log('DefaultLang ' + localStorage.getItem(\"locale\"));\r\n    if(localStorage.getItem(\"locale\")!=null){\r\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\r\n    }else{\r\n      translate.setDefaultLang(\"en\");\r\n    }\r\n   \r\n  }\r\n\r\n  changeLocale(locale:string){\r\n    localStorage.setItem(\"locale\",locale);\r\n    this.translate.use(localStorage.getItem(\"locale\"));\r\n     console.log('Locale ' + locale);\r\n   }\r\n\r\n   public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    data: { id: null, fname: null, lname : null, role: null, loginId : null }, //form data\r\n    inputerror: {}, // form input error messages\r\n    list: [], // search list \r\n  \r\n  };\r\n  ngOnInit() {\r\n    //  var _self = this;\r\n    //  this.httpService.get(\"http://localhost:8080/Auth/menu\",function (res){\r\n      \r\n    //    if(res.success){\r\n    //      _self.form.list = res.result.data;\r\n      \r\n    //    }else{\r\n    //      _self.form.error = false;\r\n    //      _self.form.message = res.result.message;\r\n    //    }\r\n    //    console.log('FORM', _self.form);\r\n    //  });\r\n  }\r\n\r\n  //jis user ne login kiya uska data user filed me le\r\n  forward(){\r\n    this.userid = localStorage.getItem(\"userid\");\r\n    console.log('UID---' + this.userid)\r\n    \r\n    this.servicelocator.forward(\"/user/\"+this.userid);\r\n   \r\n  }\r\n  isLogin() {\r\n    let check = localStorage.getItem('fname');\r\n    if (check != \"null\" && check != null) {\r\n      this.form.data.fname = localStorage.getItem(\"fname\");\r\n      this.form.data.lname = localStorage.getItem(\"lname\");\r\n      this.form.data.loginId = localStorage.getItem(\"loginId\");\r\n      this.form.data.role = localStorage.getItem(\"role\"); \r\n\r\n\r\n     // console.log('fname is ---->>>' + this.form.data.fname);\r\n      return true;\r\n    } else {\r\n      return false;\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  logout() {\r\n    var _self = this;\r\n\r\n       _self.httpService.get(\"http://15.206.186.231:8080/User/logout\",function (res){\r\n      _self.httpService.userparams.url='';\r\n        if(res.success){\r\n          localStorage.clear();\r\n          _self.form.message = res.result.message;\r\n      };\r\n      \r\n      _self.servicelocator.router.navigateByUrl('/login/true');\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  //javadoc\r\n  goToLink() {\r\n    console.log('navbarComponent-goToLink');\r\n    window.open('assets/doc/index.html', '_blank');\r\n  }\r\n}","module.exports = \"<div>\\r\\n  <h1>{{message}}</h1>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class PageNotFoundComponent {\r\n  message = 'Page not found, URL may be invalid';\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appPersantageValue]'\r\n})\r\nexport class PersantageValueDirective {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event'])\r\n  onInputChange(event: KeyboardEvent): void {\r\n    const input = event.target as HTMLInputElement;\r\n    let trimmed = input.value.replace(/[^0-9%]/g, '');\r\n\r\n    // Ensure only one percentage sign and it should be at the end\r\n    const percentIndex = trimmed.indexOf('%');\r\n    if (percentIndex !== -1) {\r\n      trimmed = trimmed.substring(0, percentIndex).replace('%', '') + '%';\r\n    }\r\n\r\n    // Ensure the value does not exceed 100%\r\n    if (percentIndex !== -1 && Number(trimmed.replace('%', '')) > 100) {\r\n      trimmed = '100%';\r\n    } else if (percentIndex === -1 && Number(trimmed) > 100) {\r\n      trimmed = '100';\r\n    }\r\n\r\n    // Update the input value\r\n    input.value = trimmed;\r\n  }\r\n}","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\r\\n background: url(assets/files/back1.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n        <div class=\\\"panel panel-primary\\\">\\r\\n            <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n                \\r\\n                <div class=\\\"text-center\\\">\\r\\n                    <h1 class=\\\"text-primary font-weight-bold\\\">{{'Role List' | translate}}</h1>\\r\\n                  </div>\\r\\n                </div>\\r\\n          \\r\\n                <div class=\\\"row p-1\\\">\\r\\n                  <div class=\\\"col-sm-1\\\"></div>\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n                      placeholder=\\\"{{'Search Name' | translate}}\\\">\\r\\n          \\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n                  </div> -->\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\r\\n                      placeholder=\\\"{{'Search Description' | translate}}\\\">\\r\\n          \\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n                    <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\r\\n                      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n                      <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n          \\r\\n                  \\r\\n                 \\r\\n                  <div class=\\\"col-sm-1 ml-3\\\">\\r\\n                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n                      {{'Search' | translate }}</button>\\r\\n                  </div>\\r\\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                  <div class=\\\"col-lg-2 ml-4\\\">\\r\\n                    <button (click)=\\\"forward('/role')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Role' | translate}}\\r\\n                    </button>\\r\\n                  </div>\\r\\n          \\r\\n                  <div class=\\\"col-sm-1\\\">\\r\\n                    <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n                      {{'Delete'| translate}}</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n            <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n                {{form.message}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n                {{form.message}}\\r\\n              </div>\\r\\n\\r\\n          \\r\\n\\r\\n            <div class=\\\"p-1\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\r\\n                        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                            <tr>\\r\\n                                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                                <th>{{'S.No' | translate }}</th>\\r\\n                                <th>{{'Name' | translate }}</th>\\r\\n                                <th>{{'Description' | translate }}</th>\\r\\n                                <th>{{'Edit' | translate}}</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                                </td>\\r\\n                                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                                <td> {{ m.name }} </td>\\r\\n                                <td> {{ m.description }} </td>\\r\\n                                <td>\\r\\n                                    <a (click)=\\\"forward( '/role/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                                    </a>\\r\\n                                    <!-- /\\r\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                                    </a> -->\\r\\n                                </td>\\r\\n                                \\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div><table style=\\\"width: 100%;\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"width: 50%;\\\">\\r\\n                  <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n                    }} </button></td>\\r\\n                    <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                    <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\r\\n                      <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/rolelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\r\\n        \\r\\n          \\r\\n          \\r\\n                \\r\\n                    <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                      translate }}</button></td>\\r\\n                    </tr>\\r\\n                    </table>\\r\\n              \\r\\n                    \\r\\n               \\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-role-list',\r\n    templateUrl: './role-list.component.html',\r\n    styleUrls: ['./role.component.css']\r\n  })\r\n\r\n\r\n  export class RoleListComponent extends BaseListCtl {\r\n    constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n      super(locator.endpoints.ROLE, locator, route);\r\n    }\r\n  \r\n  }","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS9yb2xlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9yb2xlL3JvbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\r\\n        rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Role' |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Role' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div> -->\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Role Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/rolelist')\\\" class=\\\"btn btn-md btn-warning\\\">\\r\\n                {{'List' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-role',\r\n  templateUrl: './role.component.html',\r\n  styleUrls: ['./role.component.css']\r\n})\r\n\r\nexport class RoleComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.ROLE, locator, route);\r\n  }\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.name);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name = data.name;\r\n    form.description = data.description;\r\n    form.status = data.status;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpServiceService } from './http-service.service';\r\nimport { DataValidator } from './utility/data-validator';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EndpointServiceService } from './endpoint-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServiceLocatorService {\r\n\r\n  \r\n  httpService = null;\r\n  dataValidator = null;\r\n  router = null;\r\n  endpoints = null;\r\n\r\n  constructor(private hs: HttpServiceService, private dv: DataValidator, private r: Router, private ep: EndpointServiceService) {\r\n    this.httpService = hs;\r\n    this.dataValidator = dv;\r\n    this.router = r;\r\n    this.endpoints = ep;\r\n  }\r\n \r\n  /**\r\n   * get path variable from url\r\n   * \r\n   * @param route \r\n   * @param callback \r\n   */\r\n  getPathVariable(route: ActivatedRoute, callback) {\r\n                              route.params.subscribe(params =>  { callback(params) }  );\r\n// getPathVariable(route: ActivatedRoute,  function (params) { a = params[\"userparams\"];} )\r\n   \r\n  }\r\n\r\n  /**\r\n   * Forward to page \r\n   * \r\n   * @param page \r\n   */\r\n  forward(page){\r\n    this.router.navigateByUrl(page);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  spinner works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'Student List' | translate }}</h2>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.enrolNo\\\"\\r\\n            placeholder=\\\"{{'Search Enrollment' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\r\\n            placeholder=\\\"{{'Search College' | translate }}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.email\\\"\\r\\n            placeholder=\\\"{{'Search Email' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNo\\\"\\r\\n            placeholder=\\\"{{'Search Mobile Number' | translate }}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-lg-2\\\">\\r\\n          <button (click)=\\\"forward('/student')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Student' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n                <th>{{'S.No' | translate }}</th>\\r\\n                <th>{{'Enrollment No' | translate }}</th>\\r\\n                <th>{{'First Name' | translate }}</th>\\r\\n                <th>{{'Last Name' | translate }}</th>\\r\\n                <th>{{'College' | translate }}</th>\\r\\n                <th>{{'DOB' | translate }}</th>\\r\\n                <th>{{'Mobile' | translate }}</th>\\r\\n                <th>{{'Email' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td>{{m.enrolNo}}</td>\\r\\n                <td> {{ m.firstName }} </td>\\r\\n                <td> {{ m.lastName }} </td>\\r\\n                <td> {{ m.collegeName }} </td>\\r\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}}</td>\\r\\n                <td> {{ m.phoneNo }} </td>\\r\\n                <td> {{ m.email }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/student/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n              <tr> <td style=\\\"width: 50%;\\\"><button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' |\\r\\n                    translate }} </button>\\r\\n                </td>  \\r\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/studentlist']\\\">{{'Back' | translate}}</a></td>\\r\\n                <td>\\r\\n                  <button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }} </button>\\r\\n                 </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-student-list',\r\n  templateUrl: './student-list.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\n\r\nexport class StudentListComponent extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STUDENT, locator, route);\r\n  }\r\n\r\n\r\n\r\n}","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; \\r\\npadding-bottom:3%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Student' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Student' | translate }}</h2>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Enrollment No' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"enrolNo\\\" [(ngModel)]=\\\"form.data.enrolNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Enrollment Number' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.enrolNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"firstN\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"lastN\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n\\r\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select College' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.collegeId}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Email Id' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\r\\n          </div>\\r\\n          \\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"  ><b>{{'Mobile No' | translate }} </b>\\r\\n              <span class=\\\"required-field\\\" ></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" maxlength=\\\"10\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/studentlist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\nexport class StudentComponent extends BaseCtl {\r\n  selected = null;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.STUDENT, locator, route);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    flag = flag && validator.isNotNullObject(form.enrolNo);\r\n    flag = flag && validator.isNotNullObject(form.phoneNo);\r\n    flag = flag && validator.isNotNullObject(form.email);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.collegeId = data.collegeId;\r\n    console.log(form.collegeId + \" inside populateForm method\");\r\n\r\n    form.email = data.email;\r\n    form.enrolNo = data.enrolNo;\r\n    form.dob = data.dob;\r\n\r\n    //let ndate = new Date(data.dob);\r\n   \r\n    //console.log(form.dob + 'date ------',ndate)\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.phoneNo = data.phoneNo;\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\" >\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Subject List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\r\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/subject')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Subject' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\r\\n                <th>{{'S.No.' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'Course' | translate}}</th>\\r\\n               \\r\\n                <th>{{'Description' | translate}}</th>\\r\\n                <th>{{'Edit' | translate }}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\r\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.subjectName}} </td>\\r\\n                <td> {{ m.courseName}} </td>\\r\\n               \\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/subject/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                  </a> -->\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/subjectlist']\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n                \\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.SUBJECT, locator, route);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:13%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Subject' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Subject' | translate}}</h2>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"subjectName\\\" [(ngModel)]=\\\"form.data.subjectName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Subject Name' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate}}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"forward('/subjectlist')\\\" type=\\\"button\\\"\\r\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\r\\n              </button></div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpServiceService } from '../http-service.service';\r\nimport { SearchResponse, RecordResponse } from '../response';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-subject',\r\n  templateUrl: './subject.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.SUBJECT, locator, route);\r\n\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.subjectName);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.subjectName = data.subjectName;\r\n    form.description = data.description;\r\n    form.courseId = data.courseId;\r\n    console.log('Populated Form', form);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfVmVoaWNsZVRyYWNraW5nL3ZlaGljbGUtdHJhY2tpbmdsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bvehicletracking: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'vehicletracking List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lat\\\" \\r\\n          appMaxLengthNumber=\\\"20\\\"\\r\\n            placeholder=\\\"{{'Search lat ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.longs\\\" \\r\\n          appMaxLengthNumber=\\\"20\\\"\\r\\n            placeholder=\\\"{{'Search longs ' | translate}}\\\">\\r\\n        \\r\\n        </div>\\r\\n\\r\\n    \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\" \\r\\n            placeholder=\\\"{{'Search date ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"vehicletrackingId\\\" [(ngModel)]=\\\"form.searchParams.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select vehicleID ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.VehicleIDList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n        \\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div >\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;\\r\\n  \\r\\n      \\r\\n      \\r\\n      <!-- Add vehicletracking button -->\\r\\n       <div >\\r\\n        <button (click)=\\\"forward('/vehicletracking')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add ' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n      &nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n    </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bvehicletrackinged table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'lat' | translate}}</th>\\r\\n                <th>{{'date ' | translate}}</th>\\r\\n                <th>{{'longs ' | translate}}</th>\\r\\n                <th>{{'VehicleID ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.lat }} </td>\\r\\n                <td> {{ m.date | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.longs }} </td>\\r\\n                <td> {{ m.vehicleID}} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/vehicletracking/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-vehicle-trackinglist',\r\n  templateUrl: './vehicle-trackinglist.component.html',\r\n  styleUrls: ['./vehicle-trackinglist.component.css']\r\n})\r\nexport class VehicleTrackinglistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.VehicleTracking  ,locator,route);\r\n   }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfY2xpZW50L2NsaWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Client' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Client' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n<!-- start attribute filed Role se -->\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Priority' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"priorityId\\\" [(ngModel)]=\\\"form.data.priorityId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select priority' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.priorityList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.priorityId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.priorityId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- string=>type=\\\"text\\\" (ngModelChange)=\\\"form.data.stringdata = $event.trim()\\\" / appNoNumbers  -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.name = $event.trim()\\\"  appNoNumbers    maxlength=\\\"50\\\"  \\r\\n               placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n             <!-- <textarea type=\\\"text\\\"  /id=\\\"addrestext\\\" cols=\\\"20\\\"    title=\\\"address\\\" rows=\\\"4\\\" /\\r\\n                (ngModelChange)=\\\"form.data.addres = $event.trim()-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Addres ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n              \\r\\n              <textarea type=\\\"text\\\"  id=\\\"addresstext\\\" cols=\\\"20\\\"    title=\\\"address\\\" rows=\\\"4\\\" name=\\\"addresstext\\\" \\r\\n              [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.address = $event.trim()\\\" maxlength=\\\"100\\\"\\r\\n                placeholder=\\\"{{'address' | translate}}\\\"> </textarea>\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.address != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">{{form.inputerror.address | translate}}</span>\\r\\n         \\r\\n          </div>\\r\\n\\r\\n\\r\\n   <!-- phoneNo.=> type=\\\"number\\\"/  appMaxLengthNumber=\\\"10\\\"  /-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Phone ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\" \\r\\n                 appMaxLengthNumber=\\\"10\\\"      placeholder=\\\"{{'phoneNo' | translate}}\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.phoneNo != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.phoneNo| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/clientlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'client List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\nexport class ClientComponent extends BaseCtl{\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.client,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name=data.name; \r\n   \r\n     form.address=data.address; \r\n\r\n     form.phoneNo=data.phoneNo;\r\n\r\n     form.priorityId = data.priorityId;\r\n   \r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfY2xpZW50L2NsaWVudGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bclient: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Client List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n           appNoNumbers  maxlength=\\\"50\\\"  (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\"\\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.address\\\" \\r\\n           maxlength=\\\"100\\\"   (ngModelChange)=\\\"form.searchParams.address = $event.trim()\\\"\\r\\n            placeholder=\\\"{{'Search address ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNo\\\" \\r\\n          appMaxLengthNumber=\\\"10\\\" \\r\\n          placeholder=\\\"{{'Search phoneNo  ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"priorityId\\\" [(ngModel)]=\\\"form.searchParams.priorityId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select priority ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.priorityList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n<!-- search filed end -->\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      \\r\\n      <!-- Add client button -->\\r\\n       <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/client')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add client' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bcliented table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'Address ' | translate}}</th>\\r\\n                <th>{{'PhoneNo'}}</th>\\r\\n                <th>{{'Priority'}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.address }} </td>\\r\\n                <td>{{ m.phoneNo }}</td>\\r\\n                <td>{{ m.priority }}</td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/client/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-clientlist',\r\n  templateUrl: './clientlist.component.html',\r\n  styleUrls: ['./clientlist.component.css']\r\n})\r\nexport class ClientlistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.client  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfY3VzdG9tZXJzL2N1c3RvbWVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bcustomers-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Customers' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Customers ' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n        \\r\\n\\r\\n  <!-- preload Filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Gender' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"form.data.genderId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select gender' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.genderList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.genderId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.genderId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n       \\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.name = $event.trim()\\\"     maxlength=\\\"50\\\"   appNoNumbers \\r\\n               placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n<!-- LongFiled=> type=\\\"number\\\"   -->\\r\\n          <div class=\\\"form-group\\\" class=\\\"addrestext\\\">\\r\\n\\r\\n            <label><b>{{'Phone Number' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n               <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"></div>\\r\\n              </div>\\r\\n\\r\\n         <input type=\\\"number\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"form.data.phoneNumber\\\" class=\\\"form-control\\\" \\r\\n         appMaxLengthNumber=\\\"10\\\"\\r\\n         placeholder=\\\"{{'phoneNumber' | translate}}\\\"  />\\r\\n             \\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.phoneNumber != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.phoneNumber | translate}}</span>\\r\\n          </div>\\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Date Of Birth' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.dateOfBirth |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.dateOfBirth=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.dateOfBirth != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.dateOfBirth | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/customerslist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'customers List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.css']\r\n})\r\nexport class CustomersComponent extends BaseCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.customers,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n//customers\r\n//name\r\n//dateOfBirth\r\n//phoneNumber\r\n//gender\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n     form .name=data.name;\r\n\r\n     form.dateOfBirth = data.dateOfBirth;\r\n\r\n     form.phoneNumber=data.phoneNumber;\r\n\r\n     form.genderId = data.genderId;\r\n    \r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfY3VzdG9tZXJzL2N1c3RvbWVyc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bcustomers: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Customers List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\r\\n            placeholder=\\\"{{'Search dateOfBirth ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNumber\\\"\\r\\n          appMaxLengthNumber=\\\"10\\\"\\r\\n            placeholder=\\\"{{'Search phoneNumber ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n           (ngModelChange)=\\\"form.data.name = $event.trim()\\\"  appMaxLengthNumber=\\\"50\\\"  appNoNumbers\\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"form.searchParams.genderId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select gender ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.genderList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Add customers button -->\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/customers')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add customers' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n    \\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'name' | translate}}</th>\\r\\n                <th>{{'dateOfBirth ' | translate}}</th>\\r\\n                <th>{{'phoneNumber  ' | translate}}</th>\\r\\n                 <th>{{'gender ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.dateOfBirth | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.phoneNumber }} </td>\\r\\n                <td> {{ m.gender }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/customers/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customerslist',\r\n  templateUrl: './customerslist.component.html',\r\n  styleUrls: ['./customerslist.component.css']\r\n})\r\nexport class CustomerslistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.customers  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfaW52ZW50b3J5L2ludmVudG9yeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    binventory-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Inventory' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Inventory ' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n        \\r\\n\\r\\n  <!-- preload Filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Product' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.data.productId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select product' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.productId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.productId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n       \\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'SupplierName' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n          \\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n          \\r\\n              <input type=\\\"text\\\" name=\\\"supplierName\\\" [(ngModel)]=\\\"form.data.supplierName\\\" class=\\\"form-control\\\" \\r\\n              maxlength=\\\"30\\\"\\r\\n              appcontendAlphabateOnly\\r\\n               (ngModelChange)=\\\"form.data.supplierName = $event.trim()\\\"  \\r\\n              placeholder=\\\"{{'supplierName' }}\\\" />\\r\\n            </div> \\r\\n            <!-- Angular input error messages -->   \\r\\n            <!-- <span *ngIf=\\\"form.NameEmpty\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">Please enter supplier name</span>\\r\\n            <span *ngIf=\\\"form.NameInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">First name laste name character must be Capitale.</span> -->\\r\\n            \\r\\n            <span *ngIf=\\\"form.inputerror.supplierName != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.supplierName | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          \\r\\n          <div class=\\\"form-group addrestext\\\">\\r\\n            <label><b>{{'Quantity' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n          \\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"></div>\\r\\n              </div>\\r\\n          \\r\\n              <input type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\" \\r\\n              appcontendNumberOnly appMaxLengthNumber=\\\"50\\\"\\r\\n              \\r\\n              (ngModelChange)=\\\"form.data.quantity = $event.trim()\\\" \\r\\n          \\r\\n              placeholder=\\\"{{'quantity' | translate}}\\\" />\\r\\n            </div>  \\r\\n            <!-- Angular input error messages -->\\r\\n            <!-- <span *ngIf=\\\"form.quantityEmpty\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">Please enter quantity</span>\\r\\n            <span *ngIf=\\\"form.quantityInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This field must contain digits</span> -->\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.quantity != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.quantity  | translate}}</span>\\r\\n          </div>\\r\\n          \\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'lastUpdateDate' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.lastUpdateDate |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.lastUpdateDate=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.lastUpdateDate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.lastUpdateDate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\"  [disabled]=\\\"!validate()\\\"  (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\"  [disabled]=\\\"!validate()\\\"  (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/inventorylist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'inventory List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DataValidator } from '../utility/data-validator';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.css']\r\n})\r\nexport class InventoryComponent extends BaseCtl {\r\n\r\n emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n alphabate=/[A-Za-z\\s]/;\r\n numberRegex = /^\\d+(\\.\\d{1,2})?$/;\r\n numbetrPresentRegex=/^\\d+(\\.\\d+)?%$/;\r\n nameFirstLastCharaCapitalRegex=/^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient,private dataValidator:DataValidator) {\r\n    super(locator.endpoints.Inventory,locator,route);\r\n\r\n   }\r\n\r\n\r\n//Note Use:-\r\n   onQuantityInput(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    let value = input.value;\r\n\r\n    // Remove any characters that are not digits or dots\r\n    value = value.replace(/[^0-9.]/g, '');\r\n\r\n    // Ensure that there is at most one dot and up to two decimal places\r\n    const parts = value.split('.');\r\n    if (parts.length > 2) {\r\n      value = parts[0] + '.' + parts.slice(1).join('');\r\n    } else if (parts.length === 2 && parts[1].length > 2) {\r\n      value = parts[0] + '.' + parts[1].substring(0, 2);\r\n    }\r\n\r\n    input.value = value;\r\n    this.form.data.quantity = value;\r\n  }\r\n\r\n\r\n\r\n//Note Use:-\r\nonNameInput(event: Event) {\r\n  const input = event.target as HTMLInputElement;\r\n  let value = input.value;\r\n\r\n  // Trim leading and trailing spaces\r\n  value = value.trim();\r\n\r\n  // Split the input value into words based on spaces\r\n  const words = value.split(' ');\r\n\r\n  // Capitalize the first letter of each word and make the rest lowercase\r\n  const formattedWords = words.map((word, index) => {\r\n    // Capitalize the first letter of each word and make the rest lowercase\r\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n  });\r\n\r\n  // Join the formatted words back into a single string with a single space\r\n  value = formattedWords.join(' ');\r\n\r\n  // Set the formatted value to the input field and form data\r\n  input.value = value;\r\n  this.form.data.supplierName = value;\r\n}\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n//Error Filed Match Regex Pattern  \r\n\r\nvalideData() {\r\n  this.form.emailEmpty = false;\r\n  this.form.emailInvalid = false;\r\n\r\n  this.form.quantityEmpty = false;\r\n  this.form.quantityInvalid = false;\r\n\r\n  this.form.NameEmpty=false;\r\n  this.form.NameInvalid=false;\r\n\r\n  // Email validation\r\n  if (this.form.data.supplierName == null || this.form.data.supplierName.trim() === \"\") {\r\n    this.form.emailEmpty = true;\r\n  } else if (!this.emailRegex.test(this.form.data.supplierName)) {\r\n    this.form.emailInvalid = true;\r\n  }\r\n\r\n    // First Last Name Capitale\r\n    if (this.form.data.supplierName == null || this.form.data.supplierName.trim() === \"\") {\r\n      this.form.NameEmpty = true;\r\n    } else if (!this.nameFirstLastCharaCapitalRegex.test(this.form.data.supplierName)) {\r\n      this.form.NameInvalid = true;\r\n    }\r\n\r\n  // Quantity validation\r\n  if (this.form.data.quantity == null || this.form.data.quantity.trim() === \"\") {\r\n    this.form.quantityEmpty = true;\r\n  } else if (!this.numberRegex.test(this.form.data.quantity)) {\r\n    this.form.quantityInvalid = true;\r\n  }\r\n}\r\n\r\n\r\n\r\n   \r\n//button disable\r\n   validate(){\r\n    let flag = true;\r\n    // flag = flag && this.dataValidator.isNotNullObject(this.form.data.supplierName) && this.dataValidator.emailRegexPattern(this.form.data.supplierName);\r\n    // flag= flag && this.dataValidator.isNotNullObject(this.form.data.quantity) && this.dataValidator.numberRegexPattern(this.form.data.quantity);\r\n    // flag= flag && this.dataValidator.isNotNullObject(this.form.data.lastUpdateDate) ;\r\n    // flag= flag && this.dataValidator.isNotNullObject(this.form.data.productId) ;\r\n    return flag;\r\n  }\r\n \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n    \r\n  } \r\n\r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n     form .supplierName=data.supplierName;\r\n\r\n     form.lastUpdateDate = data.lastUpdateDate;\r\n\r\n     form.quantity=data.quantity;\r\n\r\n     form.productId = data.productId;\r\n\r\n\r\n  }\r\n    \r\n     \r\n    \r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfaW52ZW50b3J5L2ludmVudG9yeWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  binventory: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Inventory List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastUpdateDate\\\"\\r\\n            placeholder=\\\"{{'Search lastUpdateDate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.supplierName\\\"\\r\\n          (ngModelChange)=\\\"form.searchParams.supplierName = $event.trim()\\\"\\r\\n          appcontendAlphabateOnly maxlength=\\\"30\\\" \\r\\n          (input)=\\\"validatName()\\\"\\r\\n            placeholder=\\\"{{'Search supplierName ' | translate}}\\\">\\r\\n\\r\\n            <span *ngIf=\\\"form.nameInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n               This Flied content alphabate and Start with an uppercase letter and  each word starts with a capital letter followed by lowercase letters.\\r\\n            </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\r\\n          appcontendNumberOnly maxlength=\\\"15\\\" \\r\\n          (input)=\\\"validateNumber()\\\"\\r\\n            placeholder=\\\"{{'Search quantity ' | translate}}\\\">\\r\\n\\r\\n            <span *ngIf=\\\"form.quantityInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              this filed content  max=4 lakh  value.\\r\\n            </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Add inventory button -->\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/inventory')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add inventory' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n    \\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'supplierName' | translate}}</th>\\r\\n                <th>{{'LastUpdateDate ' | translate}}</th>\\r\\n                <th>{{'quantity  ' | translate}}</th>\\r\\n                 <th>{{'product ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.supplierName }} </td>\\r\\n                <td> {{ m.lastUpdateDate | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.quantity }} </td>\\r\\n                <td> {{ m.product }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/inventory/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  \r\n  selector: 'app-inventorylist',\r\n  templateUrl: './inventorylist.component.html',\r\n  styleUrls: ['./inventorylist.component.css']\r\n})\r\nexport class InventorylistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.Inventory  ,locator,route);\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfaXNzdWUvaXNzdWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add issue' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update issue' | translate}}\\r\\n          </h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Title' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\"\\r\\n                (ngModelChange)=\\\"form.data.title = $event.trim()\\\"\\r\\n                appcontendAlphabateOnly\\r\\n                 maxlength=\\\"50\\\" \\r\\n                placeholder=\\\"{{'title' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.title != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.title | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Description ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <textarea type=\\\"text\\\" id=\\\"descriptiontext\\\" cols=\\\"20\\\" title=\\\"description\\\" rows=\\\"4\\\" name=\\\"description\\\"\\r\\n                [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                (ngModelChange)=\\\"form.data.description = $event.trim()\\\"\\r\\n                appcontendAlphabateOnly\\r\\n                 maxlength=\\\"110\\\"\\r\\n                placeholder=\\\"{{'description' | translate}}\\\"> </textarea>\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.description != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.description | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'status' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select status' | translate}}</option>\\r\\n                <option value=\\\"Open\\\">{{'Open' | translate }} </option>\\r\\n                <option value=\\\"In Progress\\\">{{'In Progress' | translate }} </option>\\r\\n                <option value=\\\"Hold\\\">{{'Hold' | translate }} </option>\\r\\n                <option value=\\\"Resolved\\\">{{'Resolved' | translate }} </option>\\r\\n                <option value=\\\"Close\\\">{{'Close' | translate }} </option>\\r\\n\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.status | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n          \\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Assign To' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"userId\\\" [(ngModel)]=\\\"form.data.userId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select user' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.userList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.userId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.userId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'OpenDate' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.openDate |date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.openDate=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.openDate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.openDate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' |\\r\\n                translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' |\\r\\n                translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/issuelist']\\\"\\r\\n              style=\\\"text-decoration: none; color: white;\\\">{{'issue List' | translate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-issue',\r\n  templateUrl: './issue.component.html',\r\n  styleUrls: ['./issue.component.css']\r\n})\r\nexport class IssueComponent extends BaseCtl {\r\n\r\n\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.issue,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n\r\n    form.title=data.title; \r\n     form.description=data.description; \r\n     form.openDate=data.openDate; \r\n     form.userId = data.userId;\r\n     form.status=data.status;\r\n\r\n\r\n\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfaXNzdWUvaXNzdWVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bissue: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'issue List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      \\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n     \\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\" \\r\\n          (ngModelChange)=\\\"form.searchParams.title = $event.trim()\\\"\\r\\n          (input)=\\\"validatTitle()\\\"\\r\\n          appcontendAlphabateOnly\\r\\n           maxlength=\\\"50\\\"\\r\\n          placeholder=\\\"{{'Search title ' | translate}}\\\">\\r\\n        \\r\\n         <span *ngIf=\\\"form.titleInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This filed content alphabate and max lent is 40.</span> \\r\\n        </div>\\r\\n\\r\\n\\r\\n       <div class=\\\"col-sm-2\\\">\\r\\n               <textarea type=\\\"text\\\"  id=\\\"descriptiontext\\\" cols=\\\"10\\\"    title=\\\"description\\\" rows=\\\"2\\\" title=\\\"description\\\" \\r\\n              [(ngModel)]=\\\"form.searchParams.description\\\" class=\\\"form-control\\\"  \\r\\n              (ngModelChange)=\\\"form.searchParams.description = $event.trim()\\\" \\r\\n              (input)=\\\" validatAlphabate()\\\"\\r\\n              appcontendAlphabateOnly\\r\\n              maxlength=\\\"101\\\"\\r\\n               placeholder=\\\"{{'description' | translate}}\\\"> </textarea>\\r\\n\\r\\n               <span *ngIf=\\\"form.alphabateInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This filed content alphabate and max lent is 80.</span>\\r\\n\\r\\n\\r\\n                </div>  \\r\\n \\r\\n\\r\\n\\r\\n\\r\\n        <div>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.openDate\\\" \\r\\n            placeholder=\\\"{{'Search opendate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" title=\\\"userId\\\" [(ngModel)]=\\\"form.searchParams.userId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select user List' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.userList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n       <div >\\r\\n\\r\\n          <select class=\\\"form-control\\\" title=\\\"status\\\" [(ngModel)]=\\\"form.searchParams.status\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select status' | translate}}</option>\\r\\n            <option value=\\\"Open\\\">{{'Open' | translate }} </option>\\r\\n            <option value=\\\"In Progress\\\">{{'In Progress' | translate }} </option>\\r\\n            <option value=\\\"Hold\\\">{{'Hold' | translate }} </option>\\r\\n            <option value=\\\"Resolved\\\">{{'Resolved' | translate }} </option>\\r\\n            <option value=\\\"Close\\\">{{'Close' | translate }} </option>\\r\\n           </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n       \\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div >\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      \\r\\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n      \\r\\n      \\r\\n      <!-- Add issue button -->\\r\\n       <div >\\r\\n        <button (click)=\\\"forward('/issue')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add issue' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bissueed table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'title' | translate}}</th>\\r\\n                <th>{{'description ' | translate}}</th>\\r\\n                <th>{{'opendate ' | translate}}</th>\\r\\n                <th>{{'Status' | translate}}</th>\\r\\n                <th>{{'user ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.title }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n               <td> {{ m.openDate | date : 'yyyy-MM-dd'}} </td>\\r\\n               <td> {{ m.status }} </td>\\r\\n               <td> {{ m.user }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/issue/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-issuelist',\r\n  templateUrl: './issuelist.component.html',\r\n  styleUrls: ['./issuelist.component.css']\r\n})\r\nexport class IssuelistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.issue  ,locator,route);\r\n   }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfam9iL2pvYi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add JOB' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update JOB' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Status' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n              <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.data.statusId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select status' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.StatusList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.statusId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">{{form.inputerror.statusId | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Title' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\"\\r\\n              (ngModelChange)=\\\"form.data.title = $event.trim()\\\"  appNoNumbers    maxlength=\\\"50\\\"  \\r\\n               placeholder=\\\"{{'Title' | translate}}\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.title != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">{{form.inputerror.title | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group addrestext\\\">\\r\\n            <label><b>{{'Experience' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\">\\r\\n                  <i class=\\\"fas fa-briefcase\\\"></i> \\r\\n                </div>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" name=\\\"experience\\\" [(ngModel)]=\\\"form.data.experience\\\" class=\\\"form-control\\\" \\r\\n                     (ngModelChange)=\\\"form.data.experience = $event.trim()\\\" maxlength=\\\"50\\\"  \\r\\n                     placeholder=\\\"{{'Experience' | translate}}\\\" />\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.experience != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.experience | translate}}\\r\\n            </span>\\r\\n          </div>\\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Date OF Opening' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.dateOfOpening | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.dateOfOpening=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.dateOfOpening != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">{{form.inputerror.dateOfOpening | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/joblist']\\\" style=\\\"text-decoration: none; color: white;\\\">{{'Job List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html',\r\n  styleUrls: ['./job.component.css']\r\n})\r\nexport class JobComponent extends BaseCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.JOB,locator,route);\r\n   }\r\n\r\n \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n     form .title=data.title; \r\n     form.dateOfOpening = data.dateOfOpening;\r\n     form.experience=data.experience;\r\n     form.statusId = data.statusId;\r\n     form.status=data.status;\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfam9iL2pvYmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-5\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Job List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- <button class=\\\"filebtn third\\\">Button 3</button> -->\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfOpening\\\"\\r\\n            placeholder=\\\"{{'Search dateOfOpening ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.experience\\\"\\r\\n          (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\" maxlength=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search experience ' | translate}}\\\">\\r\\n             \\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\"\\r\\n          (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\" maxlength=\\\"50\\\" appNoNumbers\\r\\n            placeholder=\\\"{{'Search title ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"paymentModeID\\\" [(ngModel)]=\\\"form.searchParams.statusId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select status ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.StatusList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   \\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/job')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add job' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\" name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Title' | translate}}</th>\\r\\n                <th>{{'Date Of Opening ' | translate}}</th>\\r\\n                <th>{{'Experience ' | translate}}</th>\\r\\n                <th>{{'status ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.title }} </td>\\r\\n                <td> {{ m.dateOfOpening | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td> {{ m.experience }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/job/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-joblist',\r\n  templateUrl: './joblist.component.html',\r\n  styleUrls: ['./joblist.component.css']\r\n})\r\nexport class JoblistComponent extends BaseListCtl {\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.JOB,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfb3JkZXIvb3JkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Order' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Order' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Customer' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"customerId\\\" [(ngModel)]=\\\"form.data.customerId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select customer' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.customerList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.customerId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.customerId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n           <!--  Unique Filed=> (ngModelChange)=\\\"form.data.productName = $event.trim()\\\" \\r\\n             string=>type=\\\"text\\\" (ngModelChange)=\\\"form.data.productName = $event.trim()\\\" / appNoNumbers -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'product Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"productName\\\" [(ngModel)]=\\\"form.data.productName\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.productName = $event.trim()\\\"   \\r\\n                 maxlength=\\\"40\\\"  \\r\\n               placeholder=\\\"{{'productName' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.productName != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.productName | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n<!-- LongFiled=> type=\\\"number\\\"   -->\\r\\n          <div class=\\\"form-group\\\" class=\\\"addrestext\\\">\\r\\n\\r\\n            <label><b>{{'Quantity' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n               <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"></div>\\r\\n              </div>\\r\\n\\r\\n         <input type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\" \\r\\n             appcontendNumberOnly    \\r\\n             appMaxLengthNumber=\\\"12\\\" \\r\\n         placeholder=\\\"{{'quantity' | translate}}\\\"  />\\r\\n             \\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.quantity != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.quantity | translate}}</span>\\r\\n          </div>\\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Order Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.orderDate |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.orderDate=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.orderDate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.orderDate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/orderlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'order List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent extends BaseCtl {\r\n\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.ORDER,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n//Usecase#2: Order\r\n//productName,\r\n//orderDate,\r\n//quantity\r\n//5. customer (Preload)\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n     form .productName=data.productName; \r\n     form.orderDate=data.orderDate;\r\n     form.quantity = data.quantity;\r\n     form.customerId = data.customerId;\r\n    \r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfb3JkZXIvb3JkZXJsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Order List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.orderDate\\\"\\r\\n            placeholder=\\\"{{'Search orderDate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\r\\n          appcontendNumberOnly appMaxLengthNumber=\\\"10\\\" \\r\\n           (input)=\\\"validateNumber()\\\"\\r\\n            placeholder=\\\"{{'Search quantity ' | translate}}\\\">\\r\\n            <span *ngIf=\\\"form.quantityInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              this filed content min =0   value and max= 4 LAKh  value\\r\\n            </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.productName\\\"\\r\\n           (ngModelChange)=\\\"form.data.productName = $event.trim()\\\"  appMaxLengthNumber=\\\"30\\\"\\r\\n            placeholder=\\\"{{'Search product Name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"customerId\\\" [(ngModel)]=\\\"form.searchParams.customerId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select customer ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.customerList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Add order button -->\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/order')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add order' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'productName' | translate}}</th>\\r\\n                <th>{{'orderDate ' | translate}}</th>\\r\\n                <th>{{'quantity ' | translate}}</th>\\r\\n                <th>{{'customer ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.productName }} </td>\\r\\n                <td> {{ m.orderDate | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.quantity }} </td>\\r\\n                <td> {{ m.customer }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/order/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-orderlist',\r\n  templateUrl: './orderlist.component.html',\r\n  styleUrls: ['./orderlist.component.css']\r\n})\r\nexport class OrderlistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.ORDER  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfb3duZXIvb3duZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bowner-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add owner' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update owner' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Vehicle ID' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.data.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select VehicleId' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.vehicleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.VehicleId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.VehicleId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n           <!--  Unique Filed=> (ngModelChange)=\\\"form.data.name = $event.trim()\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.name = $event.trim()\\\"     maxlength=\\\"50\\\"   appcontendAlphabateOnly\\r\\n               placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- insuranceAmout filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Insurance Amount ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"insuranceAmout\\\" [(ngModel)]=\\\"form.data.insuranceAmout\\\" class=\\\"form-control\\\"\\r\\n                   appcontendNumberOnly\\r\\n                   appMaxLengthNumber=\\\"20\\\" \\r\\n                    placeholder=\\\"{{'insuranceAmout  ' | translate}}\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.insuranceAmout != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.insuranceAmout| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n    \\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{ 'Date OF Birth' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n          \\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n          \\r\\n              <select class=\\\"form-control\\\" \\r\\n                      name=\\\"dateOfBirth\\\" \\r\\n                      id=\\\"dateOfBirth\\\" \\r\\n                      [(ngModel)]=\\\"form.data.dateOfBirth\\\" \\r\\n                      style=\\\"cursor: pointer;\\\">\\r\\n                <option [ngValue]=\\\"null\\\" value=\\\"undefined\\\">{{ 'Please select date Of Birth' | translate }}</option>\\r\\n                <option [ngValue]=\\\"'2001-09-23'\\\">{{ '2001-09-23' | translate }}</option>\\r\\n                <option [ngValue]=\\\"'2001-10-15'\\\">{{ '2001-10-15' | translate }}</option>\\r\\n                <option [ngValue]=\\\"'2024-01-03'\\\">{{ '2024-01-03' }}</option>\\r\\n                <option [ngValue]=\\\"'2010-01-03'\\\">{{ '2010-01-03' }}</option>\\r\\n                <option [ngValue]=\\\"'2005-01-03'\\\">{{ '2005-01-03' }}</option>\\r\\n                <!-- Add more options as needed -->\\r\\n              </select>\\r\\n            </div>\\r\\n          \\r\\n            <span *ngIf=\\\"form.inputerror.dateOfBirth != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{ form.inputerror.dateOfBirth | translate }}\\r\\n            </span>\\r\\n          </div>\\r\\n          \\r\\n          \\r\\n          \\r\\n            \\r\\n          \\r\\n          \\r\\n\\r\\n          \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/ownerlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'owner List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DatePipe, formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-owner',\r\n  templateUrl: './owner.component.html',\r\n  styleUrls: ['./owner.component.css']\r\n})\r\nexport class OwnerComponent extends BaseCtl{\r\n\r\n\r\n\r\n\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient,private datePipe: DatePipe) {\r\n    super(locator.endpoints.Owner,locator,route);\r\n   }\r\n\r\n\r\n\r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n    form.name=data.name; \r\n    form.dateOfBirth = this.datePipe.transform(data.dateOfBirth, 'yyyy-MM-dd');\r\n    console.log(\"dateofburth====\",data.dateOfBirth);\r\n   \r\n     form.insuranceAmout=data.insuranceAmout;\r\n     \r\n     form.vehicleId = data.vehicleId;\r\n\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfb3duZXIvb3duZXJsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    bowner: none;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Owner List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.insuranceAmout\\\"\\r\\n            appMaxLengthNumber=\\\"50\\\" placeholder=\\\"{{'Search insuranceAmount ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\" appNoNumbers maxlength=\\\"50\\\"\\r\\n            (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\" placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"dateOfBirth\\\" id=\\\"dateOfBirth\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\r\\n            style=\\\"cursor: pointer;\\\">\\r\\n            <option [ngValue]=\\\"null\\\" value=\\\"undefined\\\">{{ 'Please select date Of Birth' | translate }}</option>\\r\\n            <option [ngValue]=\\\"'2001-09-23'\\\">{{ '2001-09-23' | translate }}</option>\\r\\n            <option [ngValue]=\\\"'2001-10-15'\\\">{{ '2001-10-15' | translate }}</option>\\r\\n            <option [ngValue]=\\\"'2024-01-03'\\\">{{ '2002-01-03' }}</option>\\r\\n            <option [ngValue]=\\\"'2010-01-03'\\\">{{ '2003-01-03' }}</option>\\r\\n            <option [ngValue]=\\\"'2005-01-03'\\\">{{ '2004-01-03' }}</option>\\r\\n            <!-- Add more options as needed -->\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n          <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.searchParams.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select VehicleId' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.vehicleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n        <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <!-- Add owner button -->\\r\\n      <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/owner')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add owner' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bownered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\" name=\\\"list_name\\\"\\r\\n                    value=\\\"h1\\\" />\\r\\n                  {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'name' | translate}}</th>\\r\\n                <th>{{'dateOfBirth ' | translate}}</th>\\r\\n                <th>{{'insuranceAmount ' | translate}}</th>\\r\\n                <th>{{'vehicleID ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name}} </td>\\r\\n                <td> {{ m.dateOfBirth | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.insuranceAmout }} </td>\\r\\n                <td> {{ m.vehicle }} </td>\\r\\n\\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" (click)=\\\"forward( '/owner/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n\\r\\n                <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' |\\r\\n                  translate\\r\\n                  }} </button>\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\"> <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\">\\r\\n                  {{'Rreset' | translate }} </button></td>\\r\\n\\r\\n              <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\"\\r\\n                  (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n\\r\\n              <td style=\\\"width: 50%;\\\"><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\"\\r\\n                  type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-ownerlist',\r\n  templateUrl: './ownerlist.component.html',\r\n  styleUrls: ['./ownerlist.component.css']\r\n})\r\nexport class OwnerlistComponent extends BaseListCtl{\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.Owner  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfcGF0aWVudC9wYXRpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add patient' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update patient' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.name = $event.trim()\\\" appNoNumbers     maxlength=\\\"50\\\"  \\r\\n               placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Mobile ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\r\\n               appMaxLengthNumber=\\\"10\\\"\\r\\n                    placeholder=\\\"{{'Please Enter mobile NO' | translate}}\\\">\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.mobile != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.mobile| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        \\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Decease' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"deceaseId\\\" [(ngModel)]=\\\"form.data.deceaseId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select decease' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.deceaseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.deceaseId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.deceaseId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Date Of Visit' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.dateofVisit |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.dateofVisit=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.dateofVisit != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.dateofVisit | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/patientlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'patient List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.css']\r\n})\r\nexport class PatientComponent extends BaseCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.patient,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n//\tUsecase#1: Patient\r\n//\tFields:\r\n//\t1. id (on business primary key),\r\n//\t2. name,\r\n//\t3. dateofVisit,\r\n//\t4. mobile\r\n//\t5. decease (preload)\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name=data.name; \r\n   \r\n     form.dateofVisit=data.dateofVisit; \r\n\r\n     form.mobile=data.mobile; \r\n\r\n     form.deceaseId = data.deceaseId;\r\n     form.decease=data.decease;\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfcGF0aWVudC9wYXRpZW50bGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bpatient: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Patient List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\" \\r\\n          appMaxLengthNumber=\\\"10\\\"\\r\\n            placeholder=\\\"{{'Search mobile ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n           appNoNumbers  maxlength=\\\"50\\\" (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\"\\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n  \\r\\n \\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateofVisit\\\" \\r\\n            placeholder=\\\"{{'Search dateofVisit ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"deceaseId\\\" [(ngModel)]=\\\"form.searchParams.deceaseId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select decease' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.deceaseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      \\r\\n      <!-- Add patient button -->\\r\\n       <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/patient')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add patient' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bpatiented table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Name' | translate}}</th>\\r\\n                <th>{{'Date Of Visit ' | translate}}</th>\\r\\n                <th>{{'Mobile' | translate}}</th>\\r\\n                <th>{{'Decease ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.dateofVisit | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.mobile }} </td>\\r\\n                <td> {{ m.decease }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/patient/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-patientlist',\r\n  templateUrl: './patientlist.component.html',\r\n  styleUrls: ['./patientlist.component.css']\r\n})\r\nexport class PatientlistComponent extends BaseListCtl{\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.patient  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfcHJlc2NyaXB0aW9uL3ByZXNjcmlwdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Prescription' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Prescription' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n<!-- fildes -->\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n     (ngModelChange)=\\\"form.data.name = $event.trim()\\\"      maxlength=\\\"50\\\"  appNoNumber\\r\\n     placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n  </div>\\r\\n  <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.name | translate}}</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--  3.  capacity filed -->  \\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'Capacity ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"number\\\" name=\\\"capacity\\\" [(ngModel)]=\\\"form.data.capacity\\\" class=\\\"form-control\\\" \\r\\n      appMaxLengthNumber=\\\"50\\\"\\r\\n      placeholder=\\\"{{'capacity  ' | translate}}\\\">\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.capacity != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.capacity| translate}}</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- 4.   PRELOAD FILED-->                 \\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n  <label><b>{{'Decease' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <select class=\\\"form-control\\\" name=\\\"deceaseId\\\" [(ngModel)]=\\\"form.data.deceaseId\\\" aria-label=\\\"ngSelected\\\">\\r\\n      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select decease' | translate}}</option>\\r\\n      <option *ngFor=\\\"let obj of form.preload.deceaseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n    </select>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.deceaseId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.deceaseId | translate}}</span>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- 5.  date Filed=> type=\\\"date\\\" -->\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"date\\\" [value]=\\\"form.data.date |date:'yyyy-MM-dd'\\\" \\r\\n     (input)=\\\"form.data.date=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.date | translate}}</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/prescriptionlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'prescription List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css']\r\n})\r\nexport class PrescriptionComponent extends BaseCtl {\r\n\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.prescription,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n \r\n \r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n\r\n    form.name=data.name; \r\n     form.capacity=data.capacity; \r\n     form.dateof=data.dateof; \r\n\r\n\r\n     form.deceaseId = data.deceaseId;\r\n     form.decease=data.decease;\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfcHJlc2NyaXB0aW9uL3ByZXNjcmlwdGlvbmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bprescription: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'prescription List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n   \\r\\n      <div class=\\\"row p-1\\\">  <!-- search fildes -->\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n         <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\" \\r\\n          (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\" appNoNumbers   maxlength=\\\"50\\\" \\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.capacity\\\" \\r\\n           appMaxLengthNumber=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search capacity ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\" \\r\\n            placeholder=\\\"{{'Search date ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"deceaseId\\\" [(ngModel)]=\\\"form.searchParams.deceaseId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select deceaseId' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.deceaseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      \\r\\n      <!-- Add prescription button -->\\r\\n       <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/prescription')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add prescription' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bprescriptioned table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n\\r\\n                <th>{{'Name ' | translate}}</th>\\r\\n                <th>{{'Capacity ' | translate}}</th>\\r\\n                <th>{{'Date ' | translate}}</th>\\r\\n               <th>{{'decease' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n          \\r\\n                \\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.capacity +\\\" mg\\\" }} </td>\\r\\n                <td> {{ m.date | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.decease }} </td>\\r\\n               \\r\\n\\r\\n\\r\\n\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/prescription/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-prescriptionlist',\r\n  templateUrl: './prescriptionlist.component.html',\r\n  styleUrls: ['./prescriptionlist.component.css']\r\n})\r\nexport class PrescriptionlistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.prescription  ,locator,route);\r\n   }\r\n\r\n \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfcHJvZHVjdGRldGFpbHMvcHJvZHVjdGRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">                                                              \\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add productdetails' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update productdetails' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n<!-- fildes -->\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n     (ngModelChange)=\\\"form.data.name = $event.trim()\\\"      maxlength=\\\"50\\\"  appNoNumbers \\r\\n     placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n  </div>\\r\\n  <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.name | translate}}</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'description ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n    </div>\\r\\n    \\r\\n    <textarea type=\\\"text\\\"  id=\\\"descriptiontext\\\" cols=\\\"20\\\"    title=\\\"description\\\" rows=\\\"4\\\" name=\\\"description\\\" \\r\\n    [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"  (ngModelChange)=\\\"form.data.description = $event.trim()\\\"\\r\\n   maxlength=\\\"100\\\"   placeholder=\\\"{{'description' | translate}}\\\"> </textarea>\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.description != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">{{form.inputerror.description | translate}}</span>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'price ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"number\\\" name=\\\"price\\\" [(ngModel)]=\\\"form.data.price\\\" class=\\\"form-control\\\" appMaxLengthNumber=\\\"50\\\"\\r\\n          placeholder=\\\"{{'price  ' | translate}}\\\">\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.price != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.price| translate}}</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n  <label><b>{{'category' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\" aria-label=\\\"ngSelected\\\">\\r\\n      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select category' | translate}}</option>\\r\\n      <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n    </select>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.categoryId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.categoryId | translate}}</span>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label><b>{{'dateOfPurchase' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <div class=\\\"input-group-prepend\\\">\\r\\n      <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"date\\\" [value]=\\\"form.data.dateOfPurchase |date:'yyyy-MM-dd'\\\" \\r\\n     (input)=\\\"form.data.dateOfPurchase=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n  </div>\\r\\n\\r\\n  <span *ngIf=\\\"form.inputerror.dateOfPurchase != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n    {{form.inputerror.dateOfPurchase | translate}}</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/productdetailslist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'productdetails List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-productdetails',\r\n  templateUrl: './productdetails.component.html',\r\n  styleUrls: ['./productdetails.component.css']\r\n})\r\nexport class ProductdetailsComponent extends BaseCtl {\r\n\r\n\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.productdetails,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n\r\n    form.name=data.name; \r\n    form.description=data.description; \r\n     form.price=data.price; \r\n\r\n     form.categoryId = data.categoryId;\r\n     form.dateOfPurchase=data.dateOfPurchase;\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfcHJvZHVjdGRldGFpbHMvcHJvZHVjdGRldGFpbHNsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    bproductdetails: none;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'productdetails List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row p-1\\\"> <!-- search fildes -->\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\" \\r\\n           appMaxLengthNumber=\\\"50\\\" (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\"\\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.price\\\" \\r\\n          appMaxLengthNumber=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search price ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfPurchase\\\"\\r\\n            placeholder=\\\"{{'Search dateOfPurchase ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <textarea type=\\\"text\\\" id=\\\"descriptiontext\\\" cols=\\\"15\\\" title=\\\"description\\\" rows=\\\"2\\\" name=\\\"description\\\"\\r\\n            [(ngModel)]=\\\"form.searchParams.description\\\" class=\\\"form-control\\\"\\r\\n            (ngModelChange)=\\\"form.searchParams.description = $event.trim()\\\" appMaxLengthNumber=\\\"100\\\"\\r\\n            placeholder=\\\"{{'description' | translate}}\\\"> </textarea>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\"\\r\\n            aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select categoryId' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n        <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <!-- Add productdetails button -->\\r\\n      <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/productdetails')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add productdetails' |\\r\\n          translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bproductdetailsed table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\" name=\\\"list_name\\\"\\r\\n                    value=\\\"h1\\\" />\\r\\n                  {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n\\r\\n\\r\\n                <th>{{'name ' | translate}}</th>\\r\\n                <th>{{'category ' | translate}}</th>\\r\\n                <th>{{'dateOfPurchase ' | translate}}</th>\\r\\n                <th>{{'price' | translate}}</th>\\r\\n                <th>{{'description' | translate}}</th>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.category }} </td>\\r\\n                <td> {{ m.dateOfPurchase | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.price }} </td>\\r\\n                <td>{{m.description | translate}}</td>\\r\\n\\r\\n\\r\\n\\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" (click)=\\\"forward( '/productdetails/' +  m.id)\\\"\\r\\n                    style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n\\r\\n                <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' |\\r\\n                  translate\\r\\n                  }} </button>\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\"> <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\">\\r\\n                  {{'Rreset' | translate }} </button></td>\\r\\n\\r\\n              <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\"\\r\\n                  (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n\\r\\n              <td style=\\\"width: 50%;\\\"><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\"\\r\\n                  type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-productdetailslist',\r\n  templateUrl: './productdetailslist.component.html',\r\n  styleUrls: ['./productdetailslist.component.css']\r\n})\r\nexport class ProductdetailslistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.productdetails  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfcm91dGUvcm91dGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    broute-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add route' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update route' | translate}}\\r\\n          </h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <!-- start attribute filed Role se -->\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                (ngModelChange)=\\\"form.data.name = $event.trim()\\\" appNoNumbers maxlength=\\\"50\\\"\\r\\n                 placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Allowd Speed ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"allowdSpeed\\\" [(ngModel)]=\\\"form.data.allowdSpeed\\\" class=\\\"form-control\\\"\\r\\n              appMaxLengthNumber=\\\"3\\\"   placeholder=\\\"{{'allowdSpeed  ' | translate}}\\\"> \\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.allowdSpeed != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.allowdSpeed| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'vehicle ID' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.data.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select vehicle' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.VehicleIDList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.vehicleId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.vehicleId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Start Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.startdate |date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.startdate=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.startdate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.startdate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- END attribute filed -->\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' |\\r\\n                translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' |\\r\\n                translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/routelist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'route List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-route',\r\n  templateUrl: './route.component.html',\r\n  styleUrls: ['./route.component.css']\r\n})\r\nexport class RouteComponent extends BaseCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.Route,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n//\tUsecase#4: Route\r\n//\tFields:\r\n//\t1. id (on business primary key),\r\n//\t2. name,\r\n//\t3. startdate,\r\n//\t4. allowdSpeed (number)\r\n//\t5. Vehicle ID (preload)\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.name=data.name; \r\n   \r\n     form.startdate=data.startdate; \r\n\r\n     form.allowdSpeed=data.allowdSpeed; \r\n\r\n     form.vehicleID =data.vehicleID;\r\n\r\n     form.vehicleId = data.vehicleId;\r\n     \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfcm91dGUvcm91dGVsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  broute: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'route List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.allowdSpeed\\\" \\r\\n          appMaxLengthNumber=\\\"5\\\"\\r\\n            placeholder=\\\"{{'Search allowdSpeed ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n          appNoNumbers appMaxLengthNumber=\\\"50\\\" (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\"\\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.startdate\\\" \\r\\n            placeholder=\\\"{{'Search startdate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.searchParams.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select VehicleId' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.VehicleIDList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      \\r\\n      <!-- Add route button -->\\r\\n       <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/route')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add route' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-brouteed table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'name' | translate}}</th>\\r\\n                <th>{{'startdate ' | translate}}</th>\\r\\n                <th>{{'allowdSpeed ' | translate}}</th>\\r\\n                <th>{{'vehicleID' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.startdate | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.allowdSpeed +\\\" Km/h\\\" }} </td>\\r\\n                <td> {{ m.vehicleID}} </td>\\r\\n          \\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/route/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-routelist',\r\n  templateUrl: './routelist.component.html',\r\n  styleUrls: ['./routelist.component.css']\r\n})\r\nexport class RoutelistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.Route  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfc2FsYXJ5L3NhbGFyeS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Salary' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Salary' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Amount ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"amount\\\" [(ngModel)]=\\\"form.data.amount\\\" class=\\\"form-control\\\" \\r\\n              appMaxLengthNumber=\\\"50\\\"\\r\\n                    placeholder=\\\"{{'amount  ' | translate}}\\\">\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.amount != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.amount| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        \\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Employee' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"employeeId\\\" [(ngModel)]=\\\"form.data.employeeId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select employee' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.employeeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.employeeId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.employeeId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Status' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\"\\r\\n              style=\\\"cursor: pointer;\\\">\\r\\n              <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select status' | translate }}</option>\\r\\n              <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\r\\n              <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\r\\n            </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          <span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n            {{form.inputerror.status| translate}} </span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Applied Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.appliedDate |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.appliedDate=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.appliedDate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.appliedDate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/salarylist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'salary List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-salary',\r\n  templateUrl: './salary.component.html',\r\n  styleUrls: ['./salary.component.css']\r\n})\r\nexport class SalaryComponent extends BaseCtl {\r\n\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.salary,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n\r\n    form.status=data.status; \r\n    form.appliedDate=data.appliedDate; \r\n     form.amount=data.amount; \r\n\r\n\r\n     form.priorityId = data.employeeId;\r\n     form.employee=data.employee;\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfc2FsYXJ5L3NhbGFyeWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bsalary: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'salary List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.amount\\\" \\r\\n          appMaxLengthNumber=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search amount ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n                <select class=\\\"form-control\\\" name=\\\"status\\\" id=\\\"status\\\" [(ngModel)]=\\\"form.searchParams.status\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select status' | translate }}</option>\\r\\n                  <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\r\\n                </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.appliedDate\\\" \\r\\n            placeholder=\\\"{{'Search appliedDate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"employeeId\\\" [(ngModel)]=\\\"form.searchParams.employeeId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select employeeId' | translate}}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.employeeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      \\r\\n      <!-- Add salary button -->\\r\\n       <div class=\\\"col-lg-2 ml-4\\\">\\r\\n        <button (click)=\\\"forward('/salary')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add salary' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bsalaryed table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'employee ' | translate}}</th>\\r\\n                <th>{{'status ' | translate}}</th>\\r\\n                <th>{{'appliedDate ' | translate}}</th>\\r\\n                <th>{{'amount' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              \\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n                <td> {{ m.employee }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td> {{ m.appliedDate | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.amount }} </td>\\r\\n\\r\\n            \\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/salary/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-salarylist',\r\n  templateUrl: './salarylist.component.html',\r\n  styleUrls: ['./salarylist.component.css']\r\n})\r\nexport class SalarylistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.salary  ,locator,route);\r\n   }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfc2hvcHBpbmdjYXJ0L3Nob3BwaW5nY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bshoppingcart-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add shoppingcart' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update shoppingcart ' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n        \\r\\n\\r\\n  <!-- preload Filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Product' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.data.productId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select product' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.productId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.productId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n       \\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'nameflied' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"nameflied\\\" [(ngModel)]=\\\"form.data.nameflied\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.nameflied = $event.trim()\\\"     maxlength=\\\"50\\\"   \\r\\n               placeholder=\\\"{{'nameflied' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.nameflied != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.nameflied | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n<!-- LongFiled=> type=\\\"number\\\"   -->\\r\\n          <div class=\\\"form-group\\\" class=\\\"addrestext\\\">\\r\\n\\r\\n            <label><b>{{'Quantity' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n               <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"></div>\\r\\n              </div>\\r\\n\\r\\n         <input type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\" \\r\\n         appMaxLengthNumber=\\\"50\\\"\\r\\n         placeholder=\\\"{{'quantity' | translate}}\\\"  />\\r\\n             \\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.quantity != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.quantity | translate}}</span>\\r\\n          </div>\\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Dates' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.dates |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.dates=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.dates != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.dates | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/shoppingcartlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'shoppingcart List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-shoppingcart',\r\n  templateUrl: './shoppingcart.component.html',\r\n  styleUrls: ['./shoppingcart.component.css']\r\n})\r\nexport class ShoppingcartComponent extends BaseCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.Shoppingcart,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n     form .name=data.name;\r\n\r\n     form.dates = data.dates;\r\n\r\n     form.quantity=data.quantity;\r\n\r\n     form.productId = data.productId;\r\n    \r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfc2hvcHBpbmdjYXJ0L3Nob3BwaW5nY2FydGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bshoppingcart: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'ShoppingCart List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dates\\\"\\r\\n            placeholder=\\\"{{'Search dates ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\r\\n          appMaxLengthNumber=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search quantity ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n           (ngModelChange)=\\\"form.data.name = $event.trim()\\\"  appMaxLengthNumber=\\\"50\\\" \\r\\n            placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.searchParams.productId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select product ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Add shoppingcart button -->\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/shoppingcart')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add shoppingcart' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n    \\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'name' | translate}}</th>\\r\\n                <th>{{'dates ' | translate}}</th>\\r\\n                <th>{{'quantity  ' | translate}}</th>\\r\\n                 <th>{{'product ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.dates | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.quantity }} </td>\\r\\n                <td> {{ m.product }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/shoppingcart/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-shoppingcartlist',\r\n  templateUrl: './shoppingcartlist.component.html',\r\n  styleUrls: ['./shoppingcartlist.component.css']\r\n})\r\nexport class ShoppingcartlistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.Shoppingcart  ,locator,route);\r\n   }\r\n\r\n  //  trimName() {\r\n  //   this.form.data.name = this.form.data.name.trim();\r\n  // }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfc3VwcGxpZXIvc3VwcGxpZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bsupplier-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add Supplier' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update Supplier ' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n        \\r\\n\\r\\n  <!-- preload Filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Category' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select category' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.categoryId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.categoryId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n       \\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n          \\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n          \\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" \\r\\n              appMaxLengthNumber=\\\"20\\\" (ngModelChange)=\\\"form.data.name = $event.trim()\\\" \\r\\n              (input)=\\\"valideData()\\\" appcontendAlphabateOnly\\r\\n              placeholder=\\\"{{'name' | translate}}\\\" />\\r\\n            </div> \\r\\n            <!-- Angular input error messages -->   \\r\\n            <!-- <span *ngIf=\\\"form.NameEmpty\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">Please enter supplier name</span>\\r\\n            <span *ngIf=\\\"form.NameInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">First name laste name character must be Capitale.</span> -->\\r\\n            \\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          \\r\\n          <div class=\\\"form-group addrestext\\\">\\r\\n            <label><b>{{'Payment Term' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n          \\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"></div>\\r\\n              </div>\\r\\n          \\r\\n              <input type=\\\"number\\\" name=\\\"paymentTerm\\\" [(ngModel)]=\\\"form.data.paymentTerm\\\" class=\\\"form-control\\\" \\r\\n              appMaxLengthNumber=\\\"50\\\"  appSetNumberMinMax  appcontendNumberOnly\\r\\n              (ngModelChange)=\\\"form.data.paymentTerm = $event.trim()\\\" \\r\\n              (input)=\\\"valideData()\\\" \\r\\n              placeholder=\\\"{{'paymentTerm' | translate}}\\\" />\\r\\n            </div>  \\r\\n            <!-- Angular input error messages -->\\r\\n            <!-- <span *ngIf=\\\"form.paymentTermEmpty\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">Please enter paymentTerm</span>\\r\\n            <span *ngIf=\\\"form.paymentTermInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This field must contain digits</span> -->\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.paymentTerm != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.paymentTerm | translate}}</span>\\r\\n          </div>\\r\\n          \\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Registration Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.registrationDate |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.registrationDate=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.registrationDate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.registrationDate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\"  [disabled]=\\\"!validate()\\\"  (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\"  [disabled]=\\\"!validate()\\\"  (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/supplierlist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'supplier List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataValidator } from '../utility/data-validator';\r\n\r\n@Component({\r\n  selector: 'app-supplier',\r\n  templateUrl: './supplier.component.html',\r\n  styleUrls: ['./supplier.component.css']\r\n})\r\nexport class SupplierComponent extends BaseCtl {\r\n\r\n  emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  alphabate=/[A-Za-z\\s]/;\r\n  numberRegex = /^\\d+(\\.\\d{1,2})?$/;\r\n  numbetrPresentRegex=/^\\d+(\\.\\d+)?%$/;\r\n  nameFirstLastCharaCapitalRegex=/^[A-Z][a-z]+ [A-Z][a-z]+$/;\r\n \r\n   constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient,private dataValidator:DataValidator) {\r\n     super(locator.endpoints.Supplier,locator,route);\r\n \r\n    }\r\n \r\n \r\n //Error Filed Match Regex Pattern  \r\n \r\n valideData() {\r\n   this.form.emailEmpty = false;\r\n   this.form.emailInvalid = false;\r\n \r\n   this.form.quantityEmpty = false;\r\n   this.form.quantityInvalid = false;\r\n \r\n   this.form.NameEmpty=false;\r\n   this.form.NameInvalid=false;\r\n \r\n   // Email validation\r\n   if (this.form.data.supplierName == null || this.form.data.supplierName.trim() === \"\") {\r\n     this.form.emailEmpty = true;\r\n   } else if (!this.emailRegex.test(this.form.data.supplierName)) {\r\n     this.form.emailInvalid = true;\r\n   }\r\n \r\n     // First Last Name Capitale\r\n     if (this.form.data.supplierName == null || this.form.data.supplierName.trim() === \"\") {\r\n       this.form.NameEmpty = true;\r\n     } else if (!this.nameFirstLastCharaCapitalRegex.test(this.form.data.supplierName)) {\r\n       this.form.NameInvalid = true;\r\n     }\r\n \r\n   // Quantity validation\r\n   if (this.form.data.quantity == null || this.form.data.quantity.trim() === \"\") {\r\n     this.form.quantityEmpty = true;\r\n   } else if (!this.numberRegex.test(this.form.data.quantity)) {\r\n     this.form.quantityInvalid = true;\r\n   }\r\n }\r\n \r\n \r\n \r\n    \r\n //button disable\r\n    validate(){\r\n     let flag = true;\r\n     // flag = flag && this.dataValidator.isNotNullObject(this.form.data.supplierName) && this.dataValidator.emailRegexPattern(this.form.data.supplierName);\r\n     // flag= flag && this.dataValidator.isNotNullObject(this.form.data.quantity) && this.dataValidator.numberRegexPattern(this.form.data.quantity);\r\n     // flag= flag && this.dataValidator.isNotNullObject(this.form.data.lastUpdateDate) ;\r\n     // flag= flag && this.dataValidator.isNotNullObject(this.form.data.productId) ;\r\n     return flag;\r\n   }\r\n  \r\n \r\n    onUpload() {\r\n     this.submit();\r\n     console.log(this.form.data.id + '---- after submit');\r\n     \r\n   } \r\n \r\n \r\n \r\n    \r\n   //user Add-Update;\r\n   submit() {\r\n     var _self = this;\r\n  \r\n     this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n \r\n       _self.form.message = '';\r\n       _self.form.inputerror={};\r\n \r\n       _self.form.error=!res.success;\r\n \r\n   \r\n       if (res.success) { \r\n         _self.form.data.id = res.result.data;\r\n \r\n \r\n \r\n         console.log(_self.form.data.id);\r\n         console.log(\"----------Harsh----------.\");\r\n \r\n       } \r\n       if(res.result.message){\r\n         _self.form.message = res.result.message;\r\n       }\r\n       if (res.result.inputerror) {\r\n         _self.form.inputerror = res.result.inputerror;\r\n       }\r\n      \r\n \r\n       console.log('FORM', _self.form);\r\n     });\r\n   }\r\n \r\n \r\n \r\n   populateForm(form, data) {\r\n     form.id = data.id;\r\n    \r\n      form .name=data.name;\r\n \r\n      form.registrationDate = data.registrationDate;\r\n \r\n      form.paymentTerm=data.paymentTerm;\r\n \r\n      form.categoryId = data.categoryId;\r\n \r\n \r\n   }\r\n     \r\n      \r\n     \r\n \r\n   //use that when devloper using Date type attribute in Form class of backend.\r\n   parseDate(dateString: string): Date {\r\n     if (dateString) {\r\n       return new Date(dateString);\r\n     }\r\n     return null;\r\n   }\r\n \r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rfc3VwcGxpZXIvc3VwcGxpZXJsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bsupplier: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Supplier List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.registrationDate\\\"\\r\\n            placeholder=\\\"{{'Search registrationDate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.paymentTerm\\\"\\r\\n          appMaxLengthNumber=\\\"20\\\"    (input)=\\\"validateNumber()\\\"  appcontendNumberOnly\\r\\n            placeholder=\\\"{{'Search paymentTerm ' | translate}}\\\">\\r\\n            <span *ngIf=\\\" form.paymentTermInvalid \\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\"> This field must include digits 1 to 90 days </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n           (ngModelChange)=\\\"form.data.name = $event.trim()\\\"  appMaxLengthNumber=\\\"20\\\" appcontendAlphabateOnly\\r\\n           (input)=\\\"  validatName()\\\"\\r\\n            placeholder=\\\"{{'Search Supplier Name ' | translate}}\\\">\\r\\n            <span *ngIf=\\\"form.nameInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">Name content First and Last First Character upper case..</span>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select category ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Add supplier button -->\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/supplier')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add supplier' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n    \\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'name' | translate}}</th>\\r\\n                <th>{{'registration Date ' | translate}}</th>\\r\\n                <th>{{'payment Term  ' | translate}}</th>\\r\\n                 <th>{{'category ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.registrationDate | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.paymentTerm +\\\" days\\\" }} </td>\\r\\n                <td> {{ m.category }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/supplier/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-supplierlist',\r\n  templateUrl: './supplierlist.component.html',\r\n  styleUrls: ['./supplierlist.component.css']\r\n})\r\nexport class SupplierlistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.Supplier  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add users' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update users' | translate}}\\r\\n          </h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'name' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\r\\n                (ngModelChange)=\\\"form.data.name = $event.trim()\\\"\\r\\n                appcontendAlphabateOnly\\r\\n                 maxlength=\\\"41\\\" \\r\\n                placeholder=\\\"{{'name' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.name != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.name | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'login' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"login\\\" [(ngModel)]=\\\"form.data.login\\\" class=\\\"form-control\\\"\\r\\n                (ngModelChange)=\\\"form.data.login = $event.trim()\\\"\\r\\n                 maxlength=\\\"31\\\" \\r\\n                placeholder=\\\"{{'login' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.login != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.login | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'password' }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                (ngModelChange)=\\\"form.data.password = $event.trim()\\\"\\r\\n                 maxlength=\\\"25\\\" \\r\\n                placeholder=\\\"{{'password' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.password != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.password | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'dateOfBirth' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.dateOfBirth |date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dateOfBirth=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.dateOfBirth != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.dateOfBirth | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'mobile'}}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\r\\n               \\r\\n                \\r\\n                placeholder=\\\"{{'plse Enter mobile No'}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.mobile != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.mobile | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' |\\r\\n                translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' |\\r\\n                translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/userslist']\\\"\\r\\n              style=\\\"text-decoration: none; color: white;\\\">{{'users List' | translate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent extends BaseCtl {\r\n\r\n \r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.Users,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n\r\n    form.name=data.name; \r\n     form.login=data.login; \r\n     form.password=data.password; \r\n     form.dateOfBirth = data.dateOfBirth;\r\n     form.mobile=data.mobile;\r\n\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfdXNlcnMvdXNlcnNsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  #nnn {\\r\\n    background: none;\\r\\n    busers: none;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'users List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\r\\n            (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\" (input)=\\\"validatName()\\\" appcontendAlphabateOnly\\r\\n            maxlength=\\\"50\\\" placeholder=\\\"{{'Search name ' | translate}}\\\">\\r\\n\\r\\n          <span *ngIf=\\\"form.nameInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This Flied content alphabate and\\r\\n            Start with an uppercase letter and each word starts with a capital letter followed by lowercase\\r\\n            letters.</span>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.login\\\"\\r\\n            (ngModelChange)=\\\"form.searchParams.login = $event.trim()\\\" (input)=\\\"validatEmail()\\\" maxlength=\\\"35\\\"\\r\\n            placeholder=\\\"{{'Search login ' | translate}}\\\">\\r\\n\\r\\n          <span *ngIf=\\\"form.emailInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\"> invalid Email pelese write correct\\r\\n            Email like:-harsh@gmail.com</span>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.password\\\"\\r\\n            (ngModelChange)=\\\"form.searchParams.password = $event.trim()\\\" (input)=\\\"validatePassword()\\\" maxlength=\\\"25\\\"\\r\\n            placeholder=\\\"{{'Search password ' | translate}}\\\">\\r\\n\\r\\n          <span *ngIf=\\\"form.passwordInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This password must contain at\\r\\n            least one letter, digit, or special character and 8 characters</span>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\" (input)=\\\"ValidPhone()\\\"\\r\\n            appMaxLengthNumber=\\\"10\\\" placeholder=\\\"{{'Search mobile ' | translate}}\\\">\\r\\n\\r\\n          <span *ngIf=\\\"form.phoneNoInvalid\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">This PhoneNo contain only Number\\r\\n            and number starts with 6,7,8,9 and contain 10 digits</span>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\r\\n            placeholder=\\\"{{'Search dateOfBirth ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- delete Button -->\\r\\n        <div>\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n\\r\\n        &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n\\r\\n\\r\\n        <!-- Add users button -->\\r\\n        <div>\\r\\n          <button (click)=\\\"forward('/users')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add users' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-busersed table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\" name=\\\"list_name\\\"\\r\\n                    value=\\\"h1\\\" />\\r\\n                  {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'name' | translate}}</th>\\r\\n                <th>{{'login ' | translate}}</th>\\r\\n                <th>{{'dateOfBirth' | translate}}</th>\\r\\n                <th>{{'password ' | translate}}</th>\\r\\n                <th>{{'mobile ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.name }} </td>\\r\\n                <td> {{ m.login }} </td>\\r\\n                <td> {{ m.dateOfBirth | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.password }} </td>\\r\\n                <td> {{ m.mobile }} </td>\\r\\n\\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" (click)=\\\"forward( '/users/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n\\r\\n                <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' |\\r\\n                  translate\\r\\n                  }} </button>\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\"> <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\">\\r\\n                  {{'Rreset' | translate }} </button></td>\\r\\n\\r\\n              <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\"\\r\\n                  (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n\\r\\n              <td style=\\\"width: 50%;\\\"><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\"\\r\\n                  type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n                  translate }}</button></td>\\r\\n            </tr>\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-userslist',\r\n  templateUrl: './userslist.component.html',\r\n  styleUrls: ['./userslist.component.css']\r\n})\r\nexport class UserslistComponent extends BaseListCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.Users  ,locator,route);\r\n   }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfdmVoaWNsZS10cmFja2luZy92ZWhpY2xlLXRyYWNraW5nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bclient-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add vehicletracking' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update vehicletracking' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'vehicle ID' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.data.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select vehicle' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.VehicleIDList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.vehicleId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.vehicleId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- lat filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'lat ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"lat\\\" [(ngModel)]=\\\"form.data.lat\\\" class=\\\"form-control\\\" \\r\\n              appMaxLengthNumber=\\\"10\\\"\\r\\n               placeholder=\\\"{{'lat  ' | translate}}\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.lat != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.lat| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n  <!-- longs filed -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label><b>{{'longs ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n      </div>\\r\\n\\r\\n      <input type=\\\"number\\\" name=\\\"longs\\\" [(ngModel)]=\\\"form.data.longs\\\" class=\\\"form-control\\\" \\r\\n      appMaxLengthNumber=\\\"10\\\"\\r\\n            placeholder=\\\"{{'longs  ' | translate}}\\\">\\r\\n    </div>\\r\\n    <span *ngIf=\\\"form.inputerror.longs != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n      {{form.inputerror.longs| translate}}</span>\\r\\n  </div>\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.date |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.date=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.date != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.date | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\" pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n            \\r\\n            <div class=\\\" pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'Vehicletracking List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-vehicle-tracking',\r\n  templateUrl: './vehicle-tracking.component.html',\r\n  styleUrls: ['./vehicle-tracking.component.css']\r\n})\r\nexport class VehicleTrackingComponent extends BaseCtl{\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.VehicleTracking,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  //\t2. lat (double)\r\n//\t3. longs (double)\r\n//\t4. VehicleID (Preload)\r\n//\t5. date\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.lat=data.lat; \r\n   \r\n     form.longs=data.longs; \r\n\r\n     form.date=data.date; \r\n\r\n     form.vehicleId = data.vehicleId;\r\n     form.vehicleID=data.vehicleID;\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfdmVoaWNsZS92ZWhpY2xlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n  }\\r\\n\\r\\n  .full-height {\\r\\n    height: 100vh;\\r\\n  }\\r\\n\\r\\n  .centered {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    bvehicle-radius: 8px;\\r\\n  }\\r\\n\\r\\n  .btn {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\r\\n            full-height \\r\\n            centered\\\" \\r\\n         style=\\\"background: url('assets/files/3.jpg') no-repeat center center;\\r\\n          background-attachment: fixed;\\r\\n           background-size: cover;\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad\\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Add vehicle' | translate}}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{'Update vehicle' | translate}}</h2>\\r\\n\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n\\r\\n            <label><b>{{'Colour' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <select class=\\\"form-control\\\" name=\\\"ColourId\\\" [(ngModel)]=\\\"form.data.colourId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Select Colour' | translate}}</option>\\r\\n                <option *ngFor=\\\"let obj of form.preload.colourList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.colourId != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.colourId | translate}}</span>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n           <!--  Unique Filed=> (ngModelChange)=\\\"form.data.number = $event.trim()\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Number' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"text\\\" name=\\\"number\\\" [(ngModel)]=\\\"form.data.number\\\" class=\\\"form-control\\\" \\r\\n               (ngModelChange)=\\\"form.data.number = $event.trim()\\\"     maxlength=\\\"50\\\"  \\r\\n               placeholder=\\\"{{'number' | translate}}\\\">\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.number != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.number | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <!-- insuranceAmount filed -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Insurance Amount ' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"number\\\" name=\\\"insuranceAmount\\\" [(ngModel)]=\\\"form.data.insuranceAmount\\\" class=\\\"form-control\\\" \\r\\n                 appMaxLengthNumber=\\\"50\\\" \\r\\n                   placeholder=\\\"{{'insuranceAmount  ' | translate}}\\\">\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.insuranceAmount != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.insuranceAmount| translate}}</span>\\r\\n          </div>\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n          \\r\\n\\r\\n\\r\\n     \\r\\n\\r\\n\\r\\n<!-- date Filed=> type=\\\"date\\\" -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label><b>{{'Purchase Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\r\\n\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i></div>\\r\\n              </div>\\r\\n\\r\\n              <input type=\\\"date\\\" [value]=\\\"form.data.purchaseDate |date:'yyyy-MM-dd'\\\" \\r\\n               (input)=\\\"form.data.purchaseDate=parseDate($event.target.value)\\\"  class=\\\"form-control form-control-sm\\\" required />\\r\\n            </div>\\r\\n\\r\\n            <span *ngIf=\\\"form.inputerror.purchaseDate != null\\\" class=\\\"alertRedColor\\\" style=\\\"color: red;\\\">\\r\\n              {{form.inputerror.purchaseDate | translate}}</span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row pt-2 pb-3\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Save' | translate}}</button>\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{'Update' | translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/vehiclelist']\\\" style=\\\"text-decoration: none; color: white;\\\">\\r\\n                {{'vehicle List' | translate}}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BaseCtl } from '../base.component';\r\n\r\n@Component({\r\n  selector: 'app-vehicle',\r\n  templateUrl: './vehicle.component.html',\r\n  styleUrls: ['./vehicle.component.css']\r\n})\r\nexport class VehicleComponent extends BaseCtl {\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute,public http:HttpClient) {\r\n    super(locator.endpoints.vehicle,locator,route);\r\n   }\r\n\r\n\r\n    \r\n\r\n   onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n   \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n\r\n\r\n\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n   \r\n    form.number=data.number; \r\n\r\n     form.purchaseDate=data.purchaseDate; \r\n\r\n     form.insuranceAmount=data.insuranceAmount;\r\n\r\n     form.colour = data.colour;\r\n\r\n     form.colourId = data.colourId;\r\n\r\n     \r\n    \r\n  }\r\n\r\n  //use that when devloper using Date type attribute in Form class of backend.\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RfdmVoaWNsZS92ZWhpY2xlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  bvehicle: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'vehicle List' | translate }}</h1>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- search Filed -->\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.insuranceAmount\\\" \\r\\n          appMaxLengthNumber=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search insuranceAmount ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.number\\\" \\r\\n             (ngModelChange)=\\\"form.searchParams.name = $event.trim()\\\" maxlength=\\\"50\\\"\\r\\n            placeholder=\\\"{{'Search number ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.purchaseDate\\\" \\r\\n            placeholder=\\\"{{'Search purchaseDate ' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"colourId\\\" [(ngModel)]=\\\"form.searchParams.colourId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select priority ' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.colourList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n   <!-- Search Button -->\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n          </div>\\r\\n          \\r\\n\\r\\n        \\r\\n    <!-- delete Button -->\\r\\n        <div >\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n\\r\\n      \\r\\n      \\r\\n      <!-- Add vehicle button -->\\r\\n       <div >\\r\\n        <button (click)=\\\"forward('/vehicle')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add vehicle' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bvehicleed table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\"\\r\\n                   name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Number' | translate}}</th>\\r\\n                <th>{{'PurchaseDate ' | translate}}</th>\\r\\n                <th>{{'InsuranceAmount ' | translate}}</th>\\r\\n                <th>{{'Colour ' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n\\r\\n                <td> {{ m.number }} </td>\\r\\n                <td> {{ m.purchaseDate | date : 'yyyy-MM-dd'}} </td>\\r\\n                <td> {{ m.insuranceAmount }} </td>\\r\\n                <td> {{ m.colour }} </td>\\r\\n                \\r\\n                <td>\\r\\n                  <!--  edit button-->\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\"  (click)=\\\"forward( '/vehicle/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                </td>\\r\\n\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n                \\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-vehiclelist',\r\n  templateUrl: './vehiclelist.component.html',\r\n  styleUrls: ['./vehiclelist.component.css']\r\n})\r\nexport class VehiclelistComponent extends BaseListCtl{\r\n\r\n  constructor(public locator:ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(locator.endpoints.vehicle  ,locator,route);\r\n   }\r\n\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\r\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 90vh;\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'TimeTable List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\r\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div> -->\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\r\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/timetable')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add TimeTable' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\r\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\r\\n\\r\\n                <th>{{'S.No.' | translate }}</th>\\r\\n                <th>{{'Semester' | translate }}</th>\\r\\n                <th>{{'ExamDate' | translate }}</th>\\r\\n                <th>{{'ExamTime' | translate }}</th>\\r\\n                <th>{{'Course' | translate }}</th>\\r\\n                <th>{{'Subject' | translate }}</th>\\r\\n                <th>{{'Description' | translate }}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              \\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index;\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\r\\n                <td> {{ m.semester }} </td>\\r\\n                <td> {{ m.examDate | date : 'dd-MM-yyyy' }} </td>\\r\\n                <td> {{ m.examTime }} </td>\\r\\n                <td> {{ m.courseName }} </td>\\r\\n                <td> {{ m.subjectName }} </td>\\r\\n                <td> {{ m.description }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/timetable/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\r\\n                  </a>\\r\\n                  <!-- /\\r\\n                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-trash text-danger\\\"></i>\\r\\n                    </a>\\r\\n                  </td> -->\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/timetablelist']\\\">{{'Back' | translate}}</a></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n              \\r\\n            \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\n\r\n@Component({\r\n  selector: 'app-timetable-list',\r\n  templateUrl: './timetable-list.component.html',\r\n  styleUrls: ['./timetable.component.css']\r\n})\r\nexport class TimetableListComponent  extends BaseListCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super( locator.endpoints.TIMETABLE, locator, route);\r\n    let ppSize= 0;\r\n  }\r\n  \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n  .grad{\\r\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n background-repeat: no repeat;\\r\\n background-size: 100%;\\r\\n padding-bottom: 25px\\r\\n ;\\r\\n }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add TimeTable' | translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update TimeTable' | translate }}</h2>\\r\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Course' | translate }}</option>\\r\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          \\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-globe grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Subject' | translate }}</option>\\r\\n            \\r\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Semester' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"semester\\\" [(ngModel)]=\\\"form.data.semester\\\" style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"> {{'Please select' | translate}} </option>\\r\\n                  <option value=\\\"1 Semester\\\">1 Semester</option>\\r\\n                  <option value=\\\"2 Semester\\\">2 Semester</option>\\r\\n                  <option value=\\\"3 Semester\\\">3 Semester</option>\\r\\n                  <option value=\\\"4 Semester\\\">4 Semester</option>\\r\\n                  <option value=\\\"5 Semester\\\">5 Semester</option>\\r\\n                  <option value=\\\"6 Semester\\\">6 Semester</option>\\r\\n                  <option value=\\\"7 Semester\\\">7 Semester</option>\\r\\n                  <option value=\\\"8 Semester\\\">8 Semester</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.semester}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Date' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"examDate\\\" [value]=\\\"form.data.examDate | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.examDate=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examDate}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Time' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"examTime\\\" [(ngModel)]=\\\"form.data.examTime\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select examTime' | translate }}</option>\\r\\n            \\r\\n                  <option selected disabled>{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"08:00 AM to 11:00 AM\\\">08:00 AM to 11:00 AM</option>\\r\\n                  <option value=\\\"12:00PM to 3:00PM\\\">12:00PM to 3:00PM</option>\\r\\n                  <option value=\\\"3:00PM to 6:00PM\\\">3:00PM to 6:00PM</option>\\r\\n                </select>\\r\\n              </div>\\r\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examTime}} </span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'Description' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <textarea  name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\"  (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button  *ngIf=\\\"form.data.id>0\\\"  (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n              {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n           \\r\\n           \\r\\n            <div class=\\\"pl-3 pt-2\\\">\\r\\n              <button (click)=\\\"forward('/timetablelist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-timetable',\r\n  templateUrl: './timetable.component.html',\r\n  styleUrls: ['./timetable.component.css']\r\n})\r\n\r\n\r\nexport class TimetableComponent extends BaseCtl {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    super(locator.endpoints.TIMETABLE, locator, route);\r\n  }\r\n\r\n  validate() {\r\n    return this.validateForm(this.form.data);\r\n\r\n  }\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.semester);\r\n    flag = flag && validator.isNotNullObject(form.examDate);\r\n    console.log(form.examDate);\r\n    flag = flag && validator.isNotNullObject(form.examTime);\r\n    flag = flag && validator.isNotNullObject(form.courseId);\r\n    flag = flag && validator.isNotNullObject(form.subjectId);\r\n    flag = flag && validator.isNotNullObject(form.description);\r\n    \r\n    return flag;\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    form.courseId = data.courseId;\r\n    form.subjectId = data.subjectId;\r\n    form.semester = data.semester;\r\n    form.examDate = data.examDate;\r\n    form.examTime = data.examTime;\r\n    form.description = data.description;\r\n\r\n    console.log('Populated Form', form);\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<style>\\r\\n.grad{\\r\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n  background-repeat: no repeat;\\r\\n  background-size: 100%;\\r\\n  padding-bottom: 10px;\\r\\n  }\\r\\n  </style>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom: 5%;\\r\\n background-image: url(../../assets/files/wall.jpg);\\r\\n  background-attachment: fixed;\\r\\n  background-size: cover; width:auto;\\r\\n    height: auto;\\\">\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg grad\\\">\\r\\n        <form>\\r\\n          <h2  class=\\\"text-primary font-weight-bold\\\">{{'Change Password' | translate }}</h2>\\r\\n    \\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message !=''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message !=null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Old Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Old Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <span class=\\\"alertRedColor\\\">{{form.inputerror.oldPassword}}</span>\\r\\n        \\r\\n        <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>{{'New Password' | translate}}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock-alt grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"form.data.newPassword\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Enter New Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.newPassword}}</span>\\r\\n          </div>\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span><b>Confirm Password</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock grey-text \\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"{{'Confirm Password' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.confirmPassword}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button   (click)=\\\"changePassword()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n               {{'Update' | translate}} </button>\\r\\n            </div>\\r\\n            <div class=\\\" col-md-1 \\\"></div>\\r\\n            <div class=\\\"pt-2 ml-4\\\" >\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/login']\\\"\\r\\n              style=\\\"text-decoration: none; color: white;\\\">{{'Login'}}</a>\\r\\n            </div>\\r\\n            <input type=\\\"hidden\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\">\\r\\n            \\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute, Route } from '@angular/router';\r\nimport { BaseCtl } from '../base.component';\r\nimport {HttpServiceService } from '../http-service.service';\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class ChangepasswordComponent extends BaseCtl implements OnInit  {\r\n\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, public httpService : HttpServiceService) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n  /**\r\n   * Initialize component\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null, loginId : null ,forgotPasswordLogin:null}, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [], // search list \r\n    pageNo : 0\r\n  };\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.oldPassword);\r\n    flag = flag && validator.isNotNullObject(form.newPassword);\r\n    flag = flag && validator.isNotNullObject(form.confirmPassword);\r\n    return flag;\r\n  }\r\n\r\n\r\n\r\n  changePassword(){\r\n   var _self = this;\r\n   this.form.data.loginId = localStorage.getItem(\"loginId\") //Use after Login and set login.ts \r\n   \r\n   this.form.data.forgotPasswordLogin=localStorage.getItem(\"chageLoginPassword\");//use befour Login set Veryfication come from Forgotpassword\r\n\r\n    this.httpService.post(\"http://localhost:8080/User/changepassword\",this.form.data,function (res){\r\n      \r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.error = !res.success;\r\n  \r\n      if (res.result.message) {\r\n        _self.form.message = res.result.message;\r\n      }\r\n\r\n      \r\n      if (_self.form.error && res.result.inputerror) {\r\n          _self.form.inputerror = res.result.inputerror;\r\n      }\r\n\r\n      if(res.success){\r\n        _self.form.data.forgotPasswordLogin='';\r\n        localStorage.removeItem('chageLoginPassword');\r\n      }\r\n         });\r\n  }\r\n  }\r\n  \r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; \\r\\nbackground: url(assets/files/edc.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: auto;\\\">\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body shadow-lg\\\">\\r\\n        <form name=\\\"myProfile\\\">\\r\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'My Profile'  | translate }}</h2>\\r\\n         \\r\\n\\r\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message}}\\r\\n          </div>\\r\\n\\r\\n          \\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'login Id'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'DOB'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\r\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\r\\n                class=\\\"form-control form-control-sm\\\" required />\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\r\\n          </div>\\r\\n          \\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select'  | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male'  | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female'  | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Image'  | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\"\\r\\n                  (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\">\\r\\n\\r\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\"padding-top:3%\\\">\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" readonly>\\r\\n\\r\\n                  <option value=\\\"Active\\\">{{'Active'  | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive'  | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\r\\n            \\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-myprofile',\r\n  templateUrl: './myprofile.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class MyprofileComponent extends BaseCtl{\r\n constructor(public locator: ServiceLocatorService, public route: ActivatedRoute,private httpClient: HttpClient) {\r\n  super(locator.endpoints.USER, locator, route);\r\n  }\r\nngOnInit(){\r\n \r\n}\r\n  \r\n\r\n}\r\n","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<style>\\r\\n#nnn{\\r\\n  background: none;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n</style> \\r\\n\\r\\n<div class=\\\"content-wrapper\\\"\\r\\nstyle=\\\"\\r\\nbackground: url(assets/files/26.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:auto;\\r\\n  height: 105vh;\\\">\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-primary\\\">\\r\\n\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\r\\n        <!-- <div class=\\\"col-sm-5\\\"> -->\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'User List' | translate }}</h1>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <!-- <button class=\\\"filebtn third\\\">Button 3</button> -->\\r\\n      <div class=\\\"row p-1\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.firstName\\\"\\r\\n            placeholder=\\\"{{'Search First Name' | translate}}\\\">\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dob\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n          <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n            <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"col-sm-2\\\">\\r\\n          <select class=\\\"form-control\\\"   [(ngModel)]=\\\"form.searchParams.gender\\\">\\r\\n          <option value=\\\"undefined\\\" >{{'pleseSelect Gender'}}</option>\\r\\n          <option value=\\\"Male\\\">{{'male'}}</option>\\r\\n          <option value=\\\"Female\\\">{{'female'}}</option>\\r\\n          </select>\\r\\n        </div> -->\\r\\n        \\r\\n        <div class=\\\"col-sm-2\\\">\\r\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1 ml-3\\\">\\r\\n          <button (click)=\\\"submit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{'Search' | translate }}</button>\\r\\n        </div>\\r\\n        &nbsp;&nbsp;&nbsp;\\r\\n        <div class=\\\"col-lg-2 ml-4\\\">\\r\\n          <button (click)=\\\"forward('/user')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add User' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n        <div class=\\\"col-sm-1\\\">\\r\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\r\\n            {{'Delete'| translate}}</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n        {{form.message | translate}}\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"p-1\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-hover font-weight-bold table-info text-dark\\\">\\r\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\r\\n              <tr align=\\\"center\\\">\\r\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"checkUncheckAll($event)\\\" name=\\\"list_name\\\" value=\\\"h1\\\" />\\r\\n                {{'select' | translate}}</th>\\r\\n                <th>{{'S.No' | translate}}</th>\\r\\n                <th>{{'Image' | translate}}</th>\\r\\n                <th>{{'First Name' | translate}}</th>\\r\\n                <th>{{'Last Name' | translate}}</th>\\r\\n                <th>{{'Login' | translate}}</th>\\r\\n                <th>{{'Status' | translate}}</th>\\r\\n                <th>{{'Role' | translate}}</th>\\r\\n                <th>{{'Phone' | translate}}</th>\\r\\n                <th>{{'DOB' | translate}}</th>\\r\\n                <th>{{'Edit' | translate}}</th>\\r\\n              </tr>\\r\\n\\r\\n            </thead>\\r\\n\\r\\n            \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\r\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\"  id=\\\"{{m.id}}\\\" [disabled]=\\\"m.roleName=='Admin'\\\" name=\\\"list_name\\\" />\\r\\n                </td>\\r\\n                <td> {{(form.pageNo*5)+i+1}} </td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"m.imageId\\\">\\r\\n                    <img src=\\\"http://localhost:8080/User/profilePic/{{m.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"!m.imageId\\\">\\r\\n                    <img src=\\\"../../assets/files/hanuman.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                  </div>\\r\\n                </td>\\r\\n\\r\\n                <td> {{ m.firstName }} </td>\\r\\n                <td> {{ m.lastName }} </td>\\r\\n                <td> {{ m.loginId }} </td>\\r\\n                <td> {{ m.status }} </td>\\r\\n                <td> {{ m.roleName }} </td>\\r\\n                <td> {{ m.phone }} </td>\\r\\n                <td> {{ m.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n\\r\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" [disabled]=\\\"m.roleName=='Admin'\\\" (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\r\\n                  cursor: pointer;\\\">edit</button>\\r\\n                  <!-- <a [routerLink]=\\\"['/user/'+m.id]\\\" style=\\\"\\r\\n                    cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit text-primary\\\"></i>\\r\\n                  </a> -->\\r\\n                  <!-- /\\r\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash text-danger \\\"></i>\\r\\n                  </a> -->\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n          \\r\\n          <table style=\\\"width: 100%;\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"width: 50%;\\\">\\r\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\r\\n            }} </button></td>\\r\\n\\r\\n            <td *ngIf=\\\"!form.list.length==0\\\" style=\\\"width: 50%;\\\" > <button (click)=\\\"refresh()\\\" class=\\\"btn btn-info\\\"> {{'Rreset' | translate }} </button></td>\\r\\n           \\r\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"refresh()\\\">{{'Back' | translate}}</button></td>\\r\\n\\r\\n\\r\\n        \\r\\n            <td style=\\\"width: 50%;\\\"><button  (click)=\\\"next()\\\" [disabled]=\\\"nextList==0 ||form.list.length< 5\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\r\\n              translate }}</button></td>\\r\\n            </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserListComponent extends BaseListCtl {\r\n  imageToShow: any;\r\n  myKey = \"\";\r\n\r\n\r\n\r\n\r\n  public form = {\r\n\r\n    error: false, //error \r\n    message: null, //error or success message\r\n    preload: [], // preload data\r\n    data: { id: null}, //form data\r\n    inputerror: {}, // form input error messages\r\n    searchParams: {}, //search form\r\n    searchMessage: null, //search result message\r\n    list: [ ], // search list \r\n    pageNo: 0\r\n  };\r\n\r\n  selectedFile: File;\r\n  retrievedImage: any;\r\n  base64Data: any;\r\n  retrieveResonse: any;\r\n  message: string;\r\n  imageName: any;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n\r\n  \r\n\r\n  createImageFromBlob(image: Blob) {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n       this.imageToShow = reader.result;\r\n    \r\n    }, false);\r\n \r\n    if (image) {\r\n       reader.readAsDataURL(image);\r\n    }\r\n }\r\n\r\n\r\n\r\n  getImage(id) {\r\n    //Make a call to Sprinf Boot to get the Image Bytes.\r\n    this.form.data.id = id;\r\n    console.log(this.form.data.id);\r\n    \r\n    this.httpClient.get('http://localhost:8080/User/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\r\n      this.createImageFromBlob(data);\r\n      this.myKey= this.form.data.id;\r\n    }, error => {\r\n      \r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n ","module.exports = \".alertRedColor {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n\\r\\n.required-field::after { \\t\\t\\r\\n  content: \\\"*\\\";\\t\\t\\r\\n  color: red;\\t\\t\\r\\n   }\\r\\n\\r\\n\\r\\n.successColor{\\r\\n    color: green;\\r\\n   }\\r\\n\\r\\n\\r\\n.btn-space {\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.file-btn{\\r\\n    border: black;\\r\\n}\\r\\n\\r\\n\\r\\n.third {\\r\\n    border-color: #b300b3;\\r\\n    color: #695d29;\\r\\n    box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\\r\\n    transition: all 150ms ease-in-out;\\r\\n  }\\r\\n\\r\\n\\r\\n.third:hover {\\r\\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\\r\\n  }\\r\\n\\r\\n\\r\\n.filebtn {\\r\\n    box-sizing: border-box;\\r\\n    -webkit-appearance: none;\\r\\n       -moz-appearance: none;\\r\\n            appearance: none;\\r\\n    background-color: transparent;\\r\\n    border: 2px solid #e74c3c;\\r\\n    border-radius: 0.6em;\\r\\n    color: #e74c3c;\\r\\n    cursor: pointer;\\r\\n    display: flex;\\r\\n    align-self: center;\\r\\n    font-size: 1rem;\\r\\n    font-weight: 400;\\r\\n    line-height: 1;\\r\\n    margin: 20px;\\r\\n    padding: 1.2em 2.8em;\\r\\n    text-decoration: none;\\r\\n    text-align: center;\\r\\n    text-transform: uppercase;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    font-weight: 700;\\r\\n  }\\r\\n\\r\\n\\r\\n.filebtn:hover, .filebtn:focus {\\r\\n    color: #ffffff;\\r\\n    outline: 0;\\r\\n  }\\r\\n  \\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCOzs7QUFDQTtJQUNJLGFBQWE7QUFDakI7OztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCx3REFBd0Q7SUFFeEQsaUNBQWlDO0VBQ25DOzs7QUFDQTtJQUNFLDBEQUEwRDtFQUM1RDs7O0FBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsd0JBQXdCO09BQ3JCLHFCQUFxQjtZQUNoQixnQkFBZ0I7SUFDeEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixvQkFBb0I7SUFDcEIsY0FBYztJQUNkLGVBQWU7SUFJZixhQUFhO0lBR0wsa0JBQWtCO0lBQzFCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIscUNBQXFDO0lBQ3JDLGdCQUFnQjtFQUNsQjs7O0FBQ0E7SUFDRSxjQUFjO0lBQ2QsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG5cclxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcclxuICBjb250ZW50OiBcIipcIjtcdFx0XHJcbiAgY29sb3I6IHJlZDtcdFx0XHJcbiAgIH1cdFxyXG5cclxuICAgLnN1Y2Nlc3NDb2xvcntcclxuICAgIGNvbG9yOiBncmVlbjtcclxuICAgfVxyXG5cclxuICAgLmJ0bi1zcGFjZSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4uZmlsZS1idG57XHJcbiAgICBib3JkZXI6IGJsYWNrO1xyXG59XHJcblxyXG4udGhpcmQge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjYjMwMGIzO1xyXG4gICAgY29sb3I6ICM2OTVkMjk7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgNDBweCA0MHB4ICMzNDk4ZGIgaW5zZXQsIDAgMCAwIDAgIzM0OThkYjtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2UtaW4tb3V0O1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2UtaW4tb3V0O1xyXG4gIH1cclxuICAudGhpcmQ6aG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggMCAjMzQ5OGRiIGluc2V0LCAwIDAgMTBweCA0cHggIzM0OThkYjtcclxuICB9XHJcbiAgLmZpbGVidG4ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI2U3NGMzYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNmVtO1xyXG4gICAgY29sb3I6ICNlNzRjM2M7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC13ZWJraXQtYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgIC1tcy1mbGV4LWl0ZW0tYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMS4yZW0gMi44ZW07XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgfVxyXG4gIC5maWxlYnRuOmhvdmVyLCAuZmlsZWJ0bjpmb2N1cyB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG4gIFxyXG5cclxuIl19 */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<style>\\r\\n  .grad {\\r\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\r\\n    background-repeat: no repeat;\\r\\n    background-size: 100%;\\r\\n    padding-bottom: 25px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n\\r\\n<style type=\\\"text/css\\\">\\r\\n  .log1 {\\r\\n    padding-top: 13%;\\r\\n  }\\r\\n\\r\\n  .input-group-addon {\\r\\n    box-shadow: 9px 8px 7px #001a33;\\r\\n\\r\\n  }\\r\\n</style>\\r\\n\\r\\n\\r\\n<div class=\\\"row \\\" style=\\\"padding-top: 2%; padding-bottom:2%;\\r\\n\\r\\nbackground: url(assets/files/3.jpg) no-repeat center center;\\r\\nbackground-attachment: fixed;\\r\\nbackground-size: cover;width:100%;\\r\\n  height: auto;\\\">\\r\\n\\r\\n<div class=\\\"col-sm-4\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body input-group-addon grad \\\">\\r\\n        <form name=\\\"userForm\\\">\\r\\n\\r\\n\\r\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add User' |\\r\\n            translate }}</h2>\\r\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update User' |\\r\\n            translate }}</h2>\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.error && form.message != ''\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\r\\n            {{form.message | translate}}\\r\\n          </div>\\r\\n\\r\\n        <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Role Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span>\\r\\n            </span>\\r\\n              <div class=\\\"col-sm-12\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                   </div>\\r\\n\\r\\n\\r\\n                 <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.data.roleId\\\" aria-label=\\\"ngSelected\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\r\\n                   <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\r\\n                 </select>\\r\\n               </div>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"form.inputerror.roleId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'role'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.roleId}} </span> -->\\r\\n        </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.firstName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'firstname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span>\\r\\n            </span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.lastName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'lastname'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'login Id' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.loginId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'email'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.loginId}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.password != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'password'| translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span> -->\\r\\n          </div>\\r\\n\\r\\n\\r\\n<!-- Inpute validation Frontend pr-->\\r\\n<!-- (keypress)=\\\"validateMobileNo($event)\\\"  -->\\r\\n<!-- (keypress)=\\\"validateNumber($event)  -->\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Phone No' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input   type=\\\"text\\\" id=\\\"phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\" appMaxLengthNumber=\\\"10\\\"\\r\\n                appcontendNumberOnly    placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\r\\n              </div>\\r\\n            \\r\\n            </div><span *ngIf=\\\"form.inputerror.phone != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'phone'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span> -->\\r\\n          </div>\\r\\n\\r\\n\\r\\n          \\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\" (keypress)=\\\"validateMobileNo($event)\\\"\\r\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.alternateMobile != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\r\\n              {{'mobile'| translate}} </span></div>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.alternateMobile}} </span> -->\\r\\n\\r\\n\\r\\n            <div>\\r\\n         \\r\\n             <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"date\\\"  [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\" \\r\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                  required />\\r\\n              </div>\\r\\n            </div>\\r\\n<span *ngIf=\\\"form.inputerror.dob != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'dob'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span> -->\\r\\n          </div>\\r\\n\\r\\n\\r\\n          \\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span></span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\r\\n                  style=\\\"cursor: pointer;\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\r\\n                  <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\r\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.gender != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'gender'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.gender}} </span> -->\\r\\n          </div>\\r\\n\\r\\n      <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Image' | translate }}</b>\\r\\n              <!-- <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"></option> -->\\r\\n              <span *ngIf=\\\"!form.data.imageId\\\" class=\\\"required-field\\\"></span></span>\\r\\n              \\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div *ngIf=\\\"form.data.imageId\\\">\\r\\n                <img src=\\\"http://localhost:8080/User/profilePic/{{form.data.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!form.data.imageId\\\">\\r\\n                <img src=\\\"../../assets/files/pexels.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-picture-o grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\" (change)=\\\"onFileSelect($event.target.files)\\\"\\r\\n                  accept=\\\"image/*\\\">\\r\\n\\r\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n          <div>\\r\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\r\\n              <span class=\\\"required-field\\\"></span>\\r\\n            </span>\\r\\n\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bell grey-text\\\"></i> </div>\\r\\n                </div>\\r\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\">\\r\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Status' | translate }}</option>\\r\\n                  <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\r\\n                  <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div><span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'status'|\\r\\n              translate}} </span>\\r\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span> -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\r\\n\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Save' | translate }}</button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-1\\\"></div>\\r\\n\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\r\\n                {{'Update' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"pt-2\\\">\\r\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/userlist']\\\"\\r\\n                  style=\\\"text-decoration: none; color: white;\\\">{{'List' | translate }}</a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BaseCtl } from '../base.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent extends BaseCtl {\r\n\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  userForm: FormGroup = null;\r\n  uploadForm: FormGroup;\r\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\r\n    super(locator.endpoints.USER, locator, route);\r\n  }\r\n\r\n  onFileSelect(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    console.log(this.fileToUpload);\r\n\r\n  }\r\n  myFile() {\r\n   let _self=this;\r\n    const formData = new FormData();\r\n    formData.append('file', this.fileToUpload);\r\n    this.httpClient.post(\"http://localhost:8080/User/profilePic/\" + this.form.data.id, formData).subscribe( data => {\r\n    }, error => {\r\n     _self.form.mesage=  error.result.mesage;\r\n      console.log(error);\r\n    });\r\n  }\r\n  onUpload() {\r\n    this.submit();\r\n    console.log(this.form.data.id + '---- after submit');\r\n\r\n  }\r\n  \r\n  //user Add-Update;\r\n  submit() {\r\n    var _self = this;\r\n \r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n\r\n      _self.form.message = '';\r\n      _self.form.inputerror={};\r\n\r\n      _self.form.error=!res.success;\r\n\r\n  \r\n      if (res.success) { \r\n        _self.form.data.id = res.result.data;\r\n        if (_self.fileToUpload) {\r\n          _self.myFile();\r\n        }\r\n        console.log(_self.form.data.id);\r\n        console.log(\"----------Harsh----------.\");\r\n\r\n      } \r\n      if(res.result.message){\r\n        _self.form.message = res.result.message;\r\n      }\r\n      if (res.result.inputerror) {\r\n        _self.form.inputerror = res.result.inputerror;\r\n      }\r\n     \r\n\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\nvalidateMobileNo(event: KeyboardEvent){\r\n  const input=event.key;\r\n\r\n  // Allow control keys such as Backspace, Delete, Arrow keys, etc.\r\n  const controlKeys = ['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\r\n\r\n  if (controlKeys.indexOf(input) !== -1) {\r\n    return; // Allow control keys\r\n  }\r\n\r\n\r\n  //check if the inpute is a number or bacspase\r\n  if((isNaN(Number(input))&& input !=='Backspace') || (input=='')){\r\n    event.preventDefault();//print nhi krne dega\r\n  }\r\n\r\n  //Limit the inpute to 10 characters\r\n  if(this.form.data.alternateMobile && this.form.data.alternateMobile.length>=10 && input !=='Backspace'){\r\n  event.preventDefault();\r\n  }\r\n}\r\n\r\n // Method to allow only numbers to be entered\r\n validateNumber(event: KeyboardEvent): void {\r\n  const pattern = /[0-9]/;\r\n  const inputChar = String.fromCharCode(event.charCode);\r\n\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n  submit1() {\r\n    var _self = this;\r\n    console.log(this.form + \"submit running start\");\r\n    console.log(this.form.data + \"form data going to be submit\");\r\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\r\n      _self.form.message = '';\r\n      _self.form.inputerror = {};\r\n      _self.form.data.id = res.result.data;\r\n      if (_self.fileToUpload) {\r\n        _self.myFile();\r\n      }\r\n      if (res.success) {\r\n        _self.form.message = \"Data is saved\";\r\n        _self.form.data.id = res.result.data;\r\n\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      _self.form.data.id = res.result.data;\r\n      console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  validateForm(form) {\r\n    let flag = true;\r\n    let validator = this.serviceLocator.dataValidator;\r\n    flag = flag && validator.isNotNullObject(form.roleId);\r\n    console.log(form.roleId);\r\n    flag = flag && validator.isNotNullObject(form.firstName);\r\n    console.log(form.firstName);\r\n    flag = flag && validator.isNotNullObject(form.lastName);\r\n    console.log(form.lastName);\r\n    flag = flag && validator.isNotNullObject(form.loginId);\r\n    console.log(form.loginId);\r\n    flag = flag && validator.isNotNullObject(form.password);\r\n    console.log(form.password);\r\n    flag = flag && validator.isNotNullObject(form.phone);\r\n    console.log(form.phone);\r\n    flag = flag && validator.isNotNullObject(form.alternateMobile);\r\n    console.log(form.alternateMobile);\r\n    flag = flag && validator.isNotNullObject(form.dob);\r\n    console.log(form.dob);\r\n    flag = flag && validator.isNotNullObject(form.gender);\r\n    console.log(form.gender + 'gender--');\r\n    flag = flag && validator.isNotNullObject(form.status);\r\n    console.log(form.status + 'status---');\r\n\r\n    return flag;\r\n  }\r\n\r\n \r\n\r\n  \r\n\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n    console.log(form.id + 'populate form in usercomponent');\r\n    form.firstName = data.firstName;\r\n    form.lastName = data.lastName;\r\n    form.loginId = data.loginId;\r\n    form.password = data.password;\r\n    form.gender = data.gender;\r\n    form.alternateMobile = data.alternateMobile;\r\n    form.phone = data.phone;\r\n    form.dob = data.dob;\r\n    form.roleId = data.roleId;\r\n    form.status = data.status;\r\n    form.imageId = data.imageId;\r\n    console.log(form.status + 'status---');\r\n  }\r\n  parseDate(dateString: string): Date {\r\n    if (dateString) {\r\n      return new Date(dateString);\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataValidator {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  trim(valueToWhite: string) {\r\n    return valueToWhite.replace(/\\s/g, \"\");\r\n  }\r\n \r\n\r\n   /**\r\n   * Check is Email Regex Pattern is currect or note\r\n   * @param val \r\n   */\r\n  emailRegexPattern(value:string){\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if(value.match(emailRegex)){\r\n      return true;\r\n    }else{\r\n       return false;\r\n    } \r\n  }\r\n\r\n  \r\n  phoneNoRegexPattern(value:String){\r\n    const phoneNoRegex = /^(\\\\+91[\\\\-\\\\s]?)?[0]?(91)?[6789]\\\\d{9}$/;\r\n    if(value.match(phoneNoRegex)){\r\n      return true;\r\n    }else{\r\n       return false;\r\n    } \r\n  }\r\n\r\n  passwordRegexPattern(value:string){\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{8,}$/;\r\n    if(value.match(passwordRegex)){\r\n      return true;\r\n    }else{\r\n       return false;\r\n    }\r\n  }\r\n\r\n  numberRegexPattern(value:string){\r\n    const NumberRegex = /^\\d+(\\.\\d{1,2})?$/;\r\n    if(value.match(NumberRegex)){\r\n      return true;\r\n    }else{\r\n       return false;\r\n    }\r\n  }\r\n\r\n  alphabateRegexPattern(value:string){\r\n    const NumberRegex = /[A-Za-z\\s]/;\r\n    if(value.match(NumberRegex)){\r\n      return true;\r\n    }else{\r\n       return false;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Check is string is not empty\r\n   * @param val \r\n   */\r\n  isNotNull(val: string) {\r\n    let flag = true;\r\n    try {\r\n      if (val) {\r\n        val = this.trim(val);\r\n        flag = val.length > 0;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    } catch (error) {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\nPhone(val:any){\r\n\r\n  let flag=true;\r\n  if( val.length >10){\r\n    flag=false\r\n  }\r\n}\r\n\r\n  /**\r\n * Is string is empty\r\n * @param val\r\n */\r\n  isNull(val: any) {\r\n    return !this.isNotNullObject(val);\r\n  }\r\n\r\n  /**\r\n   * Is not null object\r\n   */\r\n  isNotNullObject(val: any) {\r\n    let flag = true;\r\n    try {\r\n      if (val) {\r\n        flag = true;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    } catch (error) {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * Is null object\r\n   */\r\n  isNullObject(val: any) {\r\n    return !this.isNotNullObject(val);\r\n  }\r\n\r\n\r\n  isTrue(val: boolean) {\r\n    let flag = true;\r\n    if (val) {\r\n      flag = true;\r\n    } else {\r\n      flag = false;\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param val Convets string into number\r\n   */\r\n  toInt(val: any) {\r\n    let returnVal = 0;\r\n    if (val) {\r\n      try {\r\n        returnVal = parseInt(val);\r\n        if (isNaN(returnVal)) {\r\n          returnVal = 0;\r\n        }\r\n      } catch (error) {\r\n        returnVal = 0;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  toFloat(val: any) {\r\n    let returnVal = 0;\r\n    if (val) {\r\n      try {\r\n        returnVal = parseFloat(val);\r\n        if (isNaN(returnVal)) {\r\n          returnVal = 0;\r\n        }\r\n      } catch (error) {\r\n        returnVal = 0;\r\n      }\r\n    }\r\n    return returnVal;\r\n  }\r\n\r\n  /**\r\n   * Create clone pobject\r\n   * \r\n   * @param obj \r\n   */\r\n  getClone(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n}","import { Directive, HostListener } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appSetNumberMinMax]'\r\n})\r\nexport class ValidateNumberMinMaxDirectiveDirective {\r\n\r\n  constructor(private ngControl: NgControl) {}\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event: any) {\r\n    const input = event.target.value;\r\n\r\n    // If input is empty, set the control value to null\r\n    if (input === '') {\r\n      this.ngControl.control.setValue(null, { emitEvent: false });\r\n    } else {\r\n      // Convert the input to a number\r\n      const numericValue = Number(input);\r\n\r\n      // Enforce the range between 1 and 1000\r\n      if (numericValue > 400000) {\r\n        this.ngControl.control.setValue(400000, { emitEvent: false });\r\n      } else if (numericValue < 1) {\r\n        this.ngControl.control.setValue(1, { emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}